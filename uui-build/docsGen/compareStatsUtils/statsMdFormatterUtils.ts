import { TCompareStatsResult } from './types';

const GENERATED_BY_MD = 'Generated by: generate-components-api';
const SUMMARY_TITLE = 'New missing comments';
const SUMMARY_DESC = "NOTE: It's either a new code without JSDoc, or it's an existing code from which you deleted the JSDoc comments.";
const getCiStatusMd = (isErr: boolean) => `CI Status: ${isErr ? 'error' : 'ok'}`;
const getStatusEmodji = (isErr: boolean) => isErr ? ':no_entry:' : ':ok:';

export function formatResultsToMd(result: TCompareStatsResult) {
    const isErr = result.typesNoComment.isIncreased || result.propsNoComment.isIncreased;
    const typesAmount = formatAmountWithDiff(result.typesNoComment.prev, result.typesNoComment.next);
    const propsAmount = formatAmountWithDiff(result.propsNoComment.prev, result.propsNoComment.next);
    const ciStatus = getCiStatusMd(isErr);
    let detailsMd = '';
    if (result.typesNoComment.newWithNoComment.length > 0 || result.propsNoComment.newWithNoComment.length > 0) {
        detailsMd = [
            '<details>',
            `<summary>${SUMMARY_TITLE}</summary>`,
            '<br>',
            SUMMARY_DESC,
            '',
            '```',
            newWithNoCommentsToMdList('Types', result.typesNoComment.newWithNoComment),
            newWithNoCommentsToMdList('Props', result.propsNoComment.newWithNoComment),
            '```',
            '</details>',
        ].join('\n');
    }
    return [
        [
            `${GENERATED_BY_MD}<br>`,
            `${ciStatus}<br>\n\n`,
            '**Total amount of exported types/props without JSDoc comments**<br>',
        ].join(''),
        '',
        '|         | Amount                    |',
        '|:-------:|:-------------------------:|',
        `|  Types  |       ${typesAmount}      |`,
        `|  Props  |       ${propsAmount}      |`,
        detailsMd,
    ].join('\n');

    function newWithNoCommentsToMdList(label: string, items: string[]) {
        if (items.length > 0) {
            const mdList = items.map((line) => `- ${line}`).join('\n');
            return `${label}:\n${mdList}`;
        }
        return `${label}:\n<empty>`;
    }
    function formatAmountWithDiff(prev: number | undefined, next: number) {
        let mdTypesAmountChange = '(no baseline :warning:)';
        if (prev !== undefined) {
            const typesAmountDiff = next - prev;
            let typesAmountSign = '+';
            if (typesAmountDiff < 0) {
                typesAmountSign = '';
            }
            const emodji = getStatusEmodji(typesAmountDiff > 0);
            mdTypesAmountChange = `(${typesAmountSign}${typesAmountDiff}) ${emodji}`;
        }
        return `${next} ${mdTypesAmountChange}`;
    }
}
