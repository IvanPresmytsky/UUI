{
 "missingPropComment": {
  "totals": {
   "amountProps": 934,
   "amountTypes": 299
  },
  "value": [
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "AcceptDropParams",
      "nameFull": "AcceptDropParams<TSrcData, TDstData>"
     },
     "source": "uui-core/src/types/dnd.ts"
    },
    "value": [
     "dstData",
     "offsetLeft",
     "offsetTop",
     "srcData",
     "targetHeight",
     "targetWidth"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ApiCallInfo",
      "nameFull": "ApiCallInfo"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "attemptsCount",
     "dismissError",
     "errorStatus",
     "finishedAt",
     "httpStatus",
     "method",
     "name",
     "options",
     "requestData",
     "responseData",
     "startedAt",
     "status",
     "url"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ApiCallOptions",
      "nameFull": "ApiCallOptions"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "errorHandling",
     "fetchOptions"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ApiContextProps",
      "nameFull": "ApiContextProps"
     },
     "source": "uui-core/src/services/ApiContext.ts"
    },
    "value": [
     "apiPingPath",
     "apiReloginPath",
     "apiServerUrl"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ApiExtensions",
      "nameFull": "ApiExtensions<TApi>"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "withOptions"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ApplyFilterOptions",
      "nameFull": "ApplyFilterOptions<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/data/processing/views/tree/ITree.ts"
    },
    "value": [
     "filter",
     "getFilter"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ApplySearchOptions",
      "nameFull": "ApplySearchOptions<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/data/processing/views/tree/ITree.ts"
    },
    "value": [
     "getSearchFields",
     "search",
     "sortSearchByRelevance"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ApplySortOptions",
      "nameFull": "ApplySortOptions<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/data/processing/views/tree/ITree.ts"
    },
    "value": [
     "sortBy",
     "sorting"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ArrayListViewProps",
      "nameFull": "ArrayListViewProps<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/data/processing/views/ArrayListView.ts"
    },
    "value": [
     "items"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ArrayPickerProps",
      "nameFull": "ArrayPickerProps<TId, TItem>"
     },
     "source": "uui-core/src/types/pickers.ts"
    },
    "value": [
     "emptyValue",
     "selectionMode",
     "valueType"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "AsyncListViewProps",
      "nameFull": "AsyncListViewProps<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/data/processing/views/AsyncListView.ts"
    },
    "value": [
     "api"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "BaseArrayListViewProps",
      "nameFull": "BaseArrayListViewProps<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/data/processing/views/ArrayListView.ts"
    },
    "value": [
     "getFilter",
     "getSearchFields",
     "sortBy"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "BaseDatePickerProps",
      "nameFull": "BaseDatePickerProps"
     },
     "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
    },
    "value": [
     "bodyCx",
     "iconPosition",
     "onBlur"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "BaseRangeDatePickerProps",
      "nameFull": "BaseRangeDatePickerProps"
     },
     "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
    },
    "value": [
     "bodyCx"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ButtonCoreProps",
      "nameFull": "ButtonCoreProps"
     },
     "source": "uui-core/src/types/components/Button.ts"
    },
    "value": [
     "count",
     "countPosition"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ButtonSemanticProps",
      "nameFull": "ButtonSemanticProps"
     },
     "source": "uui-core/src/types/components/Button.ts"
    },
    "value": [
     "type"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "CommonContexts",
      "nameFull": "CommonContexts<TApi, TAppContext>"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "api",
     "history",
     "uuiApp"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ContextProviderProps",
      "nameFull": "ContextProviderProps<TApi, TAppContext>"
     },
     "source": "uui-core/src/services/ContextProvider.tsx"
    },
    "value": [
     "gaCode",
     "history",
     "loadAppContext",
     "onInitCompleted"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataColumnProps",
      "nameFull": "DataColumnProps<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "canAcceptCopy",
     "canCopy",
     "justifyContent"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataQuery",
      "nameFull": "DataQuery<T>"
     },
     "source": "uui-core/src/types/dataQuery.ts"
    },
    "value": [
     "filter",
     "range",
     "search",
     "sorting"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataQueryRange",
      "nameFull": "DataQueryRange"
     },
     "source": "uui-core/src/types/dataQuery.ts"
    },
    "value": [
     "count",
     "from"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataRowOptions",
      "nameFull": "DataRowOptions<TItem, TId>"
     },
     "source": "uui-core/src/types/dataRows.ts"
    },
    "value": [
     "pin"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataRowPathItem",
      "nameFull": "DataRowPathItem<TId, TItem>"
     },
     "source": "uui-core/src/types/dataRows.ts"
    },
    "value": [
     "id",
     "isLastChild",
     "value"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataRowProps",
      "nameFull": "DataRowProps<TItem, TId>"
     },
     "source": "uui-core/src/types/dataRows.ts"
    },
    "value": [
     "isPinned",
     "isUnknown"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataSourceListProps",
      "nameFull": "DataSourceListProps"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "selectAll"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataSourceState",
      "nameFull": "DataSourceState<TFilter, TId>"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "checked",
     "filter",
     "focusedIndex",
     "folded",
     "page",
     "pageSize",
     "search",
     "selectedId",
     "sorting"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableCellProps",
      "nameFull": "DataTableCellProps<TItem, TId, TCellValue>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "renderUnknown"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableColumnsConfigOptions",
      "nameFull": "DataTableColumnsConfigOptions"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "allowColumnsReordering",
     "allowColumnsResizing"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableConfigModalParams",
      "nameFull": "DataTableConfigModalParams"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "columns"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableHeaderCellProps",
      "nameFull": "DataTableHeaderCellProps<TItem, TId>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "column",
     "isFilterActive",
     "isFirstColumn",
     "isLastColumn",
     "key",
     "onDrop",
     "onSort",
     "renderFilter",
     "selectAll",
     "sortDirection"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableHeaderRowProps",
      "nameFull": "DataTableHeaderRowProps<TItem, TId>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "columns",
     "onConfigButtonClick",
     "renderCell",
     "renderConfigButton",
     "selectAll"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableRowProps",
      "nameFull": "DataTableRowProps<TItem, TId>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "columns",
     "renderCell",
     "renderDropMarkers"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableSelectedCellData",
      "nameFull": "DataTableSelectedCellData<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "column",
     "row"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DataTableState",
      "nameFull": "DataTableState<TFilter, TViewState>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "columnsConfig",
     "filtersConfig",
     "presetId",
     "viewState"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DndActorProps",
      "nameFull": "DndActorProps<TSrcData, TDstData>"
     },
     "source": "uui-core/src/services/dnd/DndActor.tsx"
    },
    "value": [
     "render"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DndContextState",
      "nameFull": "DndContextState"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "ghostOffsetX",
     "ghostOffsetY",
     "ghostWidth",
     "isDragging",
     "renderGhost"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DropdownProps",
      "nameFull": "DropdownProps"
     },
     "source": "uui-core/src/types/components/Dropdown.ts"
    },
    "value": [
     "boundaryElement",
     "closeBodyOnTogglerHidden",
     "closeDelay",
     "closeOnClickOutside",
     "closeOnMouseLeave",
     "closeOnTargetClick",
     "isNotUnfoldable",
     "modifiers",
     "onClose",
     "openOnClick",
     "openOnHover",
     "placement",
     "portalTarget",
     "renderBody",
     "renderTarget",
     "zIndex"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DropdownState",
      "nameFull": "DropdownState"
     },
     "source": "uui-core/src/types/components/Dropdown.ts"
    },
    "value": [
     "bodyBoundingRect",
     "opened"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "DropParams",
      "nameFull": "DropParams<TSrcData, TDstData>"
     },
     "source": "uui-core/src/types/dnd.ts"
    },
    "value": [
     "position"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "FileUploadOptions",
      "nameFull": "FileUploadOptions"
     },
     "source": "uui-core/src/services/ApiContext.ts"
    },
    "value": [
     "getXHR",
     "onProgress"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "FileUploadResponse",
      "nameFull": "FileUploadResponse"
     },
     "source": "uui-core/src/services/ApiContext.ts"
    },
    "value": [
     "error",
     "extension",
     "id",
     "name",
     "path",
     "size",
     "type"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "FilterPredicate",
      "nameFull": "FilterPredicate<TField>"
     },
     "source": "uui-core/src/types/dataQuery.ts"
    },
    "value": [
     "eq",
     "gt",
     "gte",
     "in",
     "inRange",
     "isNull",
     "lt",
     "lte",
     "neq",
     "nin",
     "not",
     "notInRange"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "FormSaveResponse",
      "nameFull": "FormSaveResponse<T>"
     },
     "source": "uui-core/src/data/forms/Form.tsx"
    },
    "value": [
     "form",
     "validation"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "FormState",
      "nameFull": "FormState<T>"
     },
     "source": "uui-core/src/data/forms/useForm.ts"
    },
    "value": [
     "form",
     "formHistory",
     "historyIndex",
     "isChanged",
     "isInProgress",
     "isInSaveMode",
     "lastSentForm",
     "serverValidationState",
     "validationState"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IAdaptiveItem",
      "nameFull": "IAdaptiveItem"
     },
     "source": "uui-core/src/types/props.ts"
    },
    "value": [
     "collapseToMore",
     "collapsedContainer",
     "estimatedWidth",
     "priority",
     "showInBurgerMenu"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IAnalyticsContext",
      "nameFull": "IAnalyticsContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "addListener",
     "sendEvent"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IAnalyticsListener",
      "nameFull": "IAnalyticsListener"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "sendEvent"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IApiContext",
      "nameFull": "IApiContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "getActiveCalls",
     "processRequest",
     "recoveryReason",
     "reset",
     "status",
     "uploadFile"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IBaseContext",
      "nameFull": "IBaseContext<TState>"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "destroyContext",
     "subscribe",
     "unsubscribe"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IBasicPickerToggler",
      "nameFull": "IBasicPickerToggler"
     },
     "source": "uui-core/src/types/pickers.ts"
    },
    "value": [
     "onClear"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IColumnConfig",
      "nameFull": "IColumnConfig"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "isVisible",
     "order",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IContextProviderSsrProps",
      "nameFull": "IContextProviderSsrProps<TApi, TAppContext>"
     },
     "source": "uui-core/src/ssr/useUuiServicesSsr.tsx"
    },
    "value": [
     "router"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IdAndName",
      "nameFull": "IdAndName"
     },
     "source": "uui-core/src/types/objects.ts"
    },
    "value": [
     "id",
     "name"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IDataSource",
      "nameFull": "IDataSource<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "getById",
     "getId",
     "getView",
     "setItem",
     "unsubscribeView",
     "useView"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IDataSourceView",
      "nameFull": "IDataSourceView<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "_forceUpdate",
     "destroy",
     "getById",
     "getListProps",
     "getSelectedRows",
     "getSelectedRowsCount",
     "getVisibleRows",
     "loadData",
     "reload",
     "selectAll"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IDndActor",
      "nameFull": "IDndActor<TSrcData, TDstData>"
     },
     "source": "uui-core/src/types/dnd.ts"
    },
    "value": [
     "canAcceptDrop",
     "dstData",
     "onDrop",
     "srcData"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IDndContext",
      "nameFull": "IDndContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "dragData",
     "endDrag",
     "getMouseCoords",
     "isDragging",
     "startDrag"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IDropdownBodyProps",
      "nameFull": "IDropdownBodyProps"
     },
     "source": "uui-core/src/types/pickers.ts"
    },
    "value": [
     "arrowProps",
     "isOpen",
     "onClose",
     "scheduleUpdate",
     "togglerHeight",
     "togglerWidth"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IErrorContext",
      "nameFull": "IErrorContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "currentError",
     "discardError",
     "onError",
     "recover",
     "reportError"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IFilterConfig",
      "nameFull": "IFilterConfig"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "isVisible",
     "order"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IFilterItemBodyProps",
      "nameFull": "IFilterItemBodyProps<TFilter>"
     },
     "source": "uui-core/src/types/components/filterItemBody.ts"
    },
    "value": [
     "selectedPredicate"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IFilterPredicate",
      "nameFull": "IFilterPredicate"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "isDefault",
     "name",
     "predicate"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IHasChildren",
      "nameFull": "IHasChildren"
     },
     "source": "uui-core/src/types/props.ts"
    },
    "value": [
     "children"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IHasDirection",
      "nameFull": "IHasDirection"
     },
     "source": "uui-core/src/types/props.ts"
    },
    "value": [
     "direction"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IHistory4",
      "nameFull": "IHistory4"
     },
     "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
    },
    "value": [
     "block",
     "createHref",
     "listen",
     "location",
     "push",
     "replace"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ILayoutContext",
      "nameFull": "ILayoutContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "getLayer",
     "getPortalRoot",
     "getPortalRootId",
     "releaseLayer"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ILens",
      "nameFull": "ILens<TFocused>"
     },
     "source": "uui-core/src/data/lenses/types.ts"
    },
    "value": [
     "default",
     "get",
     "index",
     "onChange",
     "prop",
     "set",
     "toProps",
     "update"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ILockContext",
      "nameFull": "ILockContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "acquire",
     "getCurrentLock",
     "release",
     "withLock"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IMap",
      "nameFull": "IMap<TKey, TValue>"
     },
     "source": "uui-core/src/types/objects.ts"
    },
    "value": [
     "[Symbol.iterator]",
     "constructor",
     "delete",
     "get",
     "has",
     "set",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IModal",
      "nameFull": "IModal<TResult>"
     },
     "source": "uui-core/src/types/props.ts"
    },
    "value": [
     "abort",
     "isActive",
     "key",
     "success",
     "zIndex"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IModalContext",
      "nameFull": "IModalContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "closeAll",
     "getOperations",
     "isModalOperationActive",
     "show"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "INotification",
      "nameFull": "INotification"
     },
     "source": "uui-core/src/types/props.ts"
    },
    "value": [
     "clearTimer",
     "id",
     "key",
     "onClose",
     "onSuccess",
     "refreshTimer"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "INotificationContext",
      "nameFull": "INotificationContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "clearAll",
     "getNotifications",
     "remove",
     "show"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IPickerToggler",
      "nameFull": "IPickerToggler<TItem, TId>"
     },
     "source": "uui-core/src/types/pickers.ts"
    },
    "value": [
     "selectedRowsCount",
     "selection"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IRouter6",
      "nameFull": "IRouter6"
     },
     "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
    },
    "value": [
     "createHref",
     "deleteBlocker",
     "getBlocker",
     "navigate",
     "state",
     "subscribe"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IRouterContext",
      "nameFull": "IRouterContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "block",
     "createHref",
     "getCurrentLink",
     "isActive",
     "listen",
     "redirect",
     "transfer"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ISkin",
      "nameFull": "ISkin"
     },
     "source": "uui-core/src/services/SkinContext.ts"
    },
    "value": [
     "Button",
     "Checkbox",
     "DatePicker",
     "FlexCell",
     "FlexRow",
     "IconButton",
     "LabeledInput",
     "ModalBlocker",
     "ModalFooter",
     "ModalHeader",
     "ModalWindow",
     "RangeDatePicker",
     "Spinner",
     "TextInput"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ITablePreset",
      "nameFull": "ITablePreset<TFilter, TViewState>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "columnsConfig",
     "filter",
     "filtersConfig",
     "id",
     "isReadonly",
     "name",
     "order",
     "sorting",
     "viewState"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ITree",
      "nameFull": "ITree<TItem, TId>"
     },
     "source": "uui-core/src/data/processing/views/tree/ITree.ts"
    },
    "value": [
     "cascadeSelection",
     "clearStructure",
     "computeSubtotals",
     "filter",
     "forEach",
     "getById",
     "getChildren",
     "getChildrenByParentId",
     "getChildrenIdsByParentId",
     "getNodeInfo",
     "getParentIdsRecursive",
     "getParents",
     "getPathById",
     "getPathItem",
     "getRootIds",
     "getRootItems",
     "getTotalRecursiveCount",
     "isFlatList",
     "load",
     "loadMissing",
     "loadMissingIdsAndParents",
     "patch",
     "search",
     "sort"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "IUserSettingsContext",
      "nameFull": "IUserSettingsContext"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "get",
     "set"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "LayoutLayer",
      "nameFull": "LayoutLayer"
     },
     "source": "uui-core/src/types/objects.ts"
    },
    "value": [
     "depth",
     "id",
     "zIndex"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "LazyDataSourceApiRequest",
      "nameFull": "LazyDataSourceApiRequest<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "ids",
     "page",
     "pageSize",
     "range"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "LazyDataSourceApiRequestContext",
      "nameFull": "LazyDataSourceApiRequestContext<TItem, TId>"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "parent",
     "parentId"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "LazyDataSourceApiRequestOptions",
      "nameFull": "LazyDataSourceApiRequestOptions<TItem, TFilter>"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "filter",
     "search",
     "sorting"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "LazyDataSourceApiRequestRange",
      "nameFull": "LazyDataSourceApiRequestRange"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "count",
     "from"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "Link",
      "nameFull": "Link"
     },
     "source": "uui-core/src/types/objects.ts"
    },
    "value": [
     "hash",
     "key",
     "pathname",
     "query",
     "search",
     "state"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "LoadTreeOptions",
      "nameFull": "LoadTreeOptions<TItem, TId, TFilter>"
     },
     "source": "uui-core/src/data/processing/views/tree/ITree.ts"
    },
    "value": [
     "isFolded",
     "loadAllChildren"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "Metadata",
      "nameFull": "Metadata<T>"
     },
     "source": "uui-core/src/types/validation.ts"
    },
    "value": [
     "all",
     "maxLength",
     "maxValue",
     "minValue",
     "props",
     "validators"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ModalBlockerProps",
      "nameFull": "ModalBlockerProps"
     },
     "source": "uui-core/src/types/components/Modals.ts"
    },
    "value": [
     "disableCloseByEsc",
     "disableFocusLock",
     "disallowClickOutside"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ModalComponentProps",
      "nameFull": "ModalComponentProps<TParameters, TResult>"
     },
     "source": "uui-core/src/services/ModalContext.ts"
    },
    "value": [
     "abort",
     "depth",
     "isActive",
     "key",
     "parameters",
     "success",
     "zIndex"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ModalFooterCoreProps",
      "nameFull": "ModalFooterCoreProps"
     },
     "source": "uui-core/src/types/components/Modals.ts"
    },
    "value": [
     "borderTop"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ModalHeaderCoreProps",
      "nameFull": "ModalHeaderCoreProps"
     },
     "source": "uui-core/src/types/components/Modals.ts"
    },
    "value": [
     "onClose",
     "title"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ModalOperation",
      "nameFull": "ModalOperation"
     },
     "source": "uui-core/src/services/ModalContext.ts"
    },
    "value": [
     "component",
     "props"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "NotificationOperation",
      "nameFull": "NotificationOperation"
     },
     "source": "uui-core/src/services/NotificationContext.tsx"
    },
    "value": [
     "component",
     "config",
     "props"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "NotificationParams",
      "nameFull": "NotificationParams"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "duration",
     "position"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "PickerFilterConfig",
      "nameFull": "PickerFilterConfig<TFilter>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "dataSource",
     "getName",
     "renderRow",
     "type",
     "valueType"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "PickerFooterProps",
      "nameFull": "PickerFooterProps<TItem, TId>"
     },
     "source": "uui-core/src/types/pickers.ts"
    },
    "value": [
     "clearSelection",
     "disableClear",
     "selectionMode",
     "showSelected",
     "view"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "RangeDatePickerCoreProps",
      "nameFull": "RangeDatePickerCoreProps"
     },
     "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
    },
    "value": [
     "getPlaceholder",
     "rawProps"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "RangeDatePickerPresetValue",
      "nameFull": "RangeDatePickerPresetValue"
     },
     "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
    },
    "value": [
     "from",
     "order",
     "to"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "RangeDatePickerValue",
      "nameFull": "RangeDatePickerValue"
     },
     "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
    },
    "value": [
     "from",
     "to"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "RenderEditorProps",
      "nameFull": "RenderEditorProps<TItem, TId, TCellValue>"
     },
     "source": "uui-core/src/types/tables.ts"
    },
    "value": [
     "mode",
     "rowProps"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "ScrollToConfig",
      "nameFull": "ScrollToConfig"
     },
     "source": "uui-core/src/types/dataSources.ts"
    },
    "value": [
     "align",
     "behavior",
     "index"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "SearchResultItem",
      "nameFull": "SearchResultItem<TItem>"
     },
     "source": "uui-core/src/data/processing/views/LazyListView.ts"
    },
    "value": [
     "parents"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "SkinContextComponentProps",
      "nameFull": "SkinContextComponentProps<TProps, TSemanticProps>"
     },
     "source": "uui-core/src/services/SkinContext.ts"
    },
    "value": [
     "usageContext"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "SortingOption",
      "nameFull": "SortingOption<T>"
     },
     "source": "uui-core/src/types/dataQuery.ts"
    },
    "value": [
     "direction",
     "field"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "StatefulProps",
      "nameFull": "StatefulProps<T>"
     },
     "source": "uui-core/src/data/Stateful.tsx"
    },
    "value": [
     "initialState",
     "render",
     "storage"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "TimePickerValue",
      "nameFull": "TimePickerValue"
     },
     "source": "uui-core/src/types/objects.ts"
    },
    "value": [
     "hours",
     "minutes"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "TMouseCoords",
      "nameFull": "TMouseCoords"
     },
     "source": "uui-core/src/services/dnd/DndContext.tsx"
    },
    "value": [
     "buttons",
     "mouseDownPageX",
     "mouseDownPageY",
     "mouseDx",
     "mouseDxSmooth",
     "mouseDy",
     "mouseDySmooth",
     "mousePageX",
     "mousePageY"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "TreeNodeInfo",
      "nameFull": "TreeNodeInfo"
     },
     "source": "uui-core/src/data/processing/views/tree/ITree.ts"
    },
    "value": [
     "count"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "TreeParams",
      "nameFull": "TreeParams<TItem, TId>"
     },
     "source": "uui-core/src/data/processing/views/tree/ITree.ts"
    },
    "value": [
     "complexIds",
     "getId",
     "getParentId"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "UseUuiErrorOptions",
      "nameFull": "UseUuiErrorOptions"
     },
     "source": "uui-core/src/hooks/useUuiError.ts"
    },
    "value": [
     "errorConfig",
     "recoveryConfig"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "UseUuiErrorProps",
      "nameFull": "UseUuiErrorProps"
     },
     "source": "uui-core/src/hooks/useUuiError.ts"
    },
    "value": [
     "getErrorInfo",
     "options"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "UseUuiServicesProps",
      "nameFull": "UseUuiServicesProps<TApi, TAppContext>"
     },
     "source": "uui-core/src/hooks/useUuiServices.ts"
    },
    "value": [
     "appContext",
     "router"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "UuiContexts",
      "nameFull": "UuiContexts"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "uuiAnalytics",
     "uuiApi",
     "uuiDnD",
     "uuiErrors",
     "uuiLayout",
     "uuiLocks",
     "uuiModals",
     "uuiNotifications",
     "uuiRouter",
     "uuiSkin",
     "uuiUserSettings"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "UuiErrorInfo",
      "nameFull": "UuiErrorInfo"
     },
     "source": "uui-core/src/types/contexts.ts"
    },
    "value": [
     "imageUrl",
     "mobileImageUrl",
     "status",
     "subtitle",
     "title"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "UuiRecoveryErrorInfo",
      "nameFull": "UuiRecoveryErrorInfo"
     },
     "source": "uui-core/src/hooks/useUuiError.ts"
    },
    "value": [
     "subtitle",
     "title"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "UuiServicesProps",
      "nameFull": "UuiServicesProps<TApi>"
     },
     "source": "uui-core/src/hooks/useUuiServices.ts"
    },
    "value": [
     "apiDefinition",
     "skinContext"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-core",
     "typeName": {
      "name": "VPanelProps",
      "nameFull": "VPanelProps"
     },
     "source": "uui-core/src/types/props.ts"
    },
    "value": [
     "style"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "AccordionState",
      "nameFull": "AccordionState"
     },
     "source": "uui-components/src/layout/Accordion.tsx"
    },
    "value": [
     "opened"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "AdaptiveItemProps",
      "nameFull": "AdaptiveItemProps<T>"
     },
     "source": "uui-components/src/adaptivePanel/types.ts"
    },
    "value": [
     "collapsedContainer",
     "id",
     "priority",
     "render"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "AdaptivePanelProps",
      "nameFull": "AdaptivePanelProps"
     },
     "source": "uui-components/src/adaptivePanel/types.ts"
    },
    "value": [
     "items"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "ArrayPickerProps",
      "nameFull": "ArrayPickerProps<TId, TItem>"
     },
     "source": "uui-components/src/pickers/bindingHelpers.ts"
    },
    "value": [
     "emptyValue",
     "selectionMode",
     "valueType"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "AvatarStackProps",
      "nameFull": "AvatarStackProps"
     },
     "source": "uui-components/src/widgets/AvatarStack.tsx"
    },
    "value": [
     "avatarSize",
     "avatarsCount",
     "direction",
     "renderItem",
     "urlArray"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "BaseRatingProps",
      "nameFull": "BaseRatingProps<TValue>"
     },
     "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
    },
    "value": [
     "from",
     "renderRating",
     "step",
     "to"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "BaseTimePickerProps",
      "nameFull": "BaseTimePickerProps"
     },
     "source": "uui-components/src/inputs/BaseTimePicker.tsx"
    },
    "value": [
     "format",
     "id",
     "minutesStep",
     "rawProps",
     "renderTarget"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "BurgerProps",
      "nameFull": "BurgerProps"
     },
     "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
    },
    "value": [
     "bg",
     "burgerContentCx",
     "burgerIcon",
     "crossIcon",
     "logoUrl",
     "renderBurgerContent",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "CalendarPresetsProps",
      "nameFull": "CalendarPresetsProps"
     },
     "source": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
    },
    "value": [
     "onPresetSet",
     "presets"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "CalendarProps",
      "nameFull": "CalendarProps<TSelection>"
     },
     "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
    },
    "value": [
     "displayedDate",
     "filter",
     "getDayCX",
     "hideAnotherMonths",
     "isHoliday",
     "onValueChange",
     "renderDay",
     "value"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "CarouselProps",
      "nameFull": "CarouselProps"
     },
     "source": "uui-components/src/widgets/Carousel.tsx"
    },
    "value": [
     "arrowIcon",
     "divideBy",
     "items",
     "renderItem"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "CarouselState",
      "nameFull": "CarouselState"
     },
     "source": "uui-components/src/widgets/Carousel.tsx"
    },
    "value": [
     "activeSlide"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "CheckboxProps",
      "nameFull": "CheckboxProps"
     },
     "source": "uui-components/src/inputs/Checkbox.tsx"
    },
    "value": [
     "id",
     "renderLabel"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "ColumnsConfigurationRowProps",
      "nameFull": "ColumnsConfigurationRowProps"
     },
     "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
    },
    "value": [
     "columnConfig",
     "isDndAllowed",
     "isPinned",
     "isPinnedAlways",
     "onCanAcceptDrop",
     "onDrop",
     "togglePin",
     "toggleVisibility"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DataSourceKeyboardParams",
      "nameFull": "DataSourceKeyboardParams"
     },
     "source": "uui-components/src/pickers/KeyboardUtils.tsx"
    },
    "value": [
     "editMode",
     "listView",
     "rows"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DataTableSelectionProviderProps",
      "nameFull": "DataTableSelectionProviderProps<TItem, TId, TFilter>"
     },
     "source": "uui-components/src/table/tableCellsSelection/DataTableSelectionProvider.tsx"
    },
    "value": [
     "columns",
     "onCopy",
     "rows"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DatePickerBodyBaseOptions",
      "nameFull": "DatePickerBodyBaseOptions"
     },
     "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
    },
    "value": [
     "changeIsOpen",
     "filter",
     "presets",
     "renderDay"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DatePickerBodyBaseProps",
      "nameFull": "DatePickerBodyBaseProps<TSelection>"
     },
     "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
    },
    "value": [
     "setDisplayedDateAndView",
     "setSelectedDate",
     "value"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DatePickerState",
      "nameFull": "DatePickerState"
     },
     "source": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
    },
    "value": [
     "inputValue",
     "isOpen"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DayProps",
      "nameFull": "DayProps"
     },
     "source": "uui-components/src/inputs/DatePicker/Day.tsx"
    },
    "value": [
     "filter",
     "getDayCX",
     "isHoliday",
     "isSelected",
     "renderDayNumber"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DropdownContainerProps",
      "nameFull": "DropdownContainerProps"
     },
     "source": "uui-components/src/overlays/DropdownContainer.tsx"
    },
    "value": [
     "height",
     "maxWidth",
     "showArrow",
     "style",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "DropSpotRenderParams",
      "nameFull": "DropSpotRenderParams"
     },
     "source": "uui-components/src/widgets/DropSpot.tsx"
    },
    "value": [
     "eventHandlers"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "HeaderCellContentProps",
      "nameFull": "HeaderCellContentProps"
     },
     "source": "uui-components/src/table/DataTableHeaderCell.tsx"
    },
    "value": [
     "onResize",
     "onResizeEnd",
     "onResizeStart",
     "toggleSort"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "InputAddonProps",
      "nameFull": "InputAddonProps"
     },
     "source": "uui-components/src/inputs/InputAddon.tsx"
    },
    "value": [
     "content"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "IProgressBarProps",
      "nameFull": "IProgressBarProps"
     },
     "source": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
    },
    "value": [
     "hideLabel",
     "label",
     "progress"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "IScrollSpyApi",
      "nameFull": "IScrollSpyApi"
     },
     "source": "uui-components/src/navigation/ScrollSpy.tsx"
    },
    "value": [
     "currentActive",
     "scrollToElement",
     "setRef"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "IScrollSpyProps",
      "nameFull": "IScrollSpyProps"
     },
     "source": "uui-components/src/navigation/ScrollSpy.tsx"
    },
    "value": [
     "elements",
     "initialActive",
     "options"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "MainMenuDropdownProps",
      "nameFull": "MainMenuDropdownProps"
     },
     "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
    },
    "value": [
     "renderBody"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "MainMenuLogoProps",
      "nameFull": "MainMenuLogoProps"
     },
     "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
    },
    "value": [
     "link",
     "logoBgColor",
     "logoUrl",
     "onClick",
     "onContextMenu",
     "showArrow"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "MainMenuProps",
      "nameFull": "MainMenuProps"
     },
     "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
    },
    "value": [
     "Burger",
     "MainMenuDropdown",
     "alwaysShowBurger",
     "appLogoBgColor",
     "appLogoUrl",
     "children",
     "customerLogoBgColor",
     "customerLogoHref",
     "customerLogoLink",
     "customerLogoUrl",
     "customerLogoWidth",
     "externalGap",
     "isTransparent",
     "items",
     "logoHref",
     "logoLink",
     "logoWidth",
     "onLogoClick",
     "renderBurger",
     "serverBadge",
     "tooltipTechInfo"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "MonthSelectionProps",
      "nameFull": "MonthSelectionProps"
     },
     "source": "uui-components/src/inputs/DatePicker/MonthSelection.tsx"
    },
    "value": [
     "selectedDate"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PaginatorParams",
      "nameFull": "PaginatorParams"
     },
     "source": "uui-components/src/widgets/Paginator.tsx"
    },
    "value": [
     "goToNext",
     "goToPrev",
     "isFirst",
     "isLast",
     "pages",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerBindingHelper",
      "nameFull": "PickerBindingHelper<TItem, TId>"
     },
     "source": "uui-components/src/pickers/bindingHelpers.ts"
    },
    "value": [
     "applyValueToDataSourceState",
     "dataSourceStateToValue"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerBodyBaseProps",
      "nameFull": "PickerBodyBaseProps"
     },
     "source": "uui-components/src/pickers/PickerBodyBase.tsx"
    },
    "value": [
     "fixedBodyPosition",
     "onKeyDown",
     "renderNotFound",
     "rows",
     "scheduleUpdate",
     "search",
     "showSearch"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerBodyValue",
      "nameFull": "PickerBodyValue<TSelection>"
     },
     "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
    },
    "value": [
     "displayedDate",
     "selectedDate",
     "view"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerInputBaseProps",
      "nameFull": "PickerInputBaseProps<TItem, TId>"
     },
     "source": "uui-components/src/pickers/hooks/types.ts"
    },
    "value": [
     "portalTarget"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerModalArrayProps",
      "nameFull": "PickerModalArrayProps<TId, TItem>"
     },
     "source": "uui-components/src/pickers/hooks/types.ts"
    },
    "value": [
     "initialValue",
     "selectionMode",
     "valueType"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerModalOptions",
      "nameFull": "PickerModalOptions<TItem, TId>"
     },
     "source": "uui-components/src/pickers/hooks/types.ts"
    },
    "value": [
     "disallowClickOutside",
     "renderFilter",
     "renderFooter"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerModalScalarProps",
      "nameFull": "PickerModalScalarProps<TId, TItem>"
     },
     "source": "uui-components/src/pickers/hooks/types.ts"
    },
    "value": [
     "initialValue",
     "selectionMode",
     "valueType"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PickerTogglerProps",
      "nameFull": "PickerTogglerProps<TItem, TId>"
     },
     "source": "uui-components/src/pickers/PickerToggler.tsx"
    },
    "value": [
     "autoFocus",
     "cancelIcon",
     "closePickerBody",
     "disableClear",
     "disableSearch",
     "dropdownIcon",
     "entityName",
     "getName",
     "isSingleLine",
     "maxItems",
     "minCharsToSearch",
     "onKeyDown",
     "pickerMode",
     "renderItem",
     "searchPosition"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "PortalProps",
      "nameFull": "PortalProps"
     },
     "source": "uui-components/src/overlays/Portal.tsx"
    },
    "value": [
     "key",
     "target"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "RadioGroupItem",
      "nameFull": "RadioGroupItem<TValue>"
     },
     "source": "uui-components/src/layout/RadioGroup.tsx"
    },
    "value": [
     "id",
     "name",
     "renderName"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "RadioGroupProps",
      "nameFull": "RadioGroupProps<TValue>"
     },
     "source": "uui-components/src/layout/RadioGroup.tsx"
    },
    "value": [
     "RadioInput",
     "items",
     "radioInputProps"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "RadioInputProps",
      "nameFull": "RadioInputProps"
     },
     "source": "uui-components/src/inputs/RadioInput.tsx"
    },
    "value": [
     "icon",
     "id",
     "renderLabel",
     "tabIndex"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "RangeSliderState",
      "nameFull": "RangeSliderState"
     },
     "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
    },
    "value": [
     "activeHandle"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "RangeSliderValue",
      "nameFull": "RangeSliderValue"
     },
     "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
    },
    "value": [
     "from",
     "to"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "RatingProps",
      "nameFull": "RatingProps"
     },
     "source": "uui-components/src/inputs/Rating/Rating.tsx"
    },
    "value": [
     "Tooltip",
     "emptyStarIcon",
     "filledStarIcon",
     "hideTooltip",
     "hint"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "RichTextViewProps",
      "nameFull": "RichTextViewProps"
     },
     "source": "uui-components/src/RichTextView.tsx"
    },
    "value": [
     "htmlContent"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "ScrollbarProps",
      "nameFull": "ScrollbarProps"
     },
     "source": "uui-components/src/layout/ScrollBars.tsx"
    },
    "value": [
     "disableScroll",
     "hasBottomShadow",
     "hasTopShadow",
     "renderView"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "SinglePickerProps",
      "nameFull": "SinglePickerProps<TId, TItem>"
     },
     "source": "uui-components/src/pickers/bindingHelpers.ts"
    },
    "value": [
     "selectionMode",
     "valueType"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "SliderBaseState",
      "nameFull": "SliderBaseState"
     },
     "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
    },
    "value": [
     "isActive",
     "valueWidth"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "SnackbarProps",
      "nameFull": "SnackbarProps"
     },
     "source": "uui-components/src/overlays/Snackbar.tsx"
    },
    "value": [
     "closeIcon",
     "notifications"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "SwitchProps",
      "nameFull": "SwitchProps"
     },
     "source": "uui-components/src/inputs/Switch.tsx"
    },
    "value": [
     "id"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "TimePickerBodyProps",
      "nameFull": "TimePickerBodyProps"
     },
     "source": "uui-components/src/inputs/TimePickerBody.tsx"
    },
    "value": [
     "addIcon",
     "format",
     "minutesStep",
     "subtractIcon"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "TooltipState",
      "nameFull": "TooltipState"
     },
     "source": "uui-components/src/overlays/Tooltip.tsx"
    },
    "value": [
     "isOpen"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "TreeListItem",
      "nameFull": "TreeListItem"
     },
     "source": "uui-components/src/layout/Tree.tsx"
    },
    "value": [
     "data",
     "id",
     "name",
     "parentId"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "TreeProps",
      "nameFull": "TreeProps<TItem>"
     },
     "source": "uui-components/src/layout/Tree.tsx"
    },
    "value": [
     "getSearchFields",
     "items",
     "renderRow",
     "search"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "UsePickerInputProps",
      "nameFull": "UsePickerInputProps<TItem, TId, TProps>"
     },
     "source": "uui-components/src/pickers/hooks/types.ts"
    },
    "value": [
     "shouldShowBody",
     "toggleModalOpening"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "VirtualListRenderRowsParams",
      "nameFull": "VirtualListRenderRowsParams<List>"
     },
     "source": "uui-components/src/layout/VirtualList.tsx"
    },
    "value": [
     "estimatedHeight",
     "listContainerRef",
     "offsetY",
     "scrollShadows"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-components",
     "typeName": {
      "name": "YearSelectionProps",
      "nameFull": "YearSelectionProps"
     },
     "source": "uui-components/src/inputs/DatePicker/YearSelection.tsx"
    },
    "value": [
     "selectedDate"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "AccordionMods",
      "nameFull": "AccordionMods"
     },
     "source": "uui/components/layout/Accordion.tsx"
    },
    "value": [
     "mode",
     "padding"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "BadgeMods",
      "nameFull": "BadgeMods"
     },
     "source": "uui/components/widgets/Badge.tsx"
    },
    "value": [
     "color",
     "fill",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "BurgerButtonMods",
      "nameFull": "BurgerButtonMods"
     },
     "source": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
    },
    "value": [
     "indentLevel",
     "type"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "BurgerGroupHeaderProps",
      "nameFull": "BurgerGroupHeaderProps"
     },
     "source": "uui/components/navigation/MainMenu/Burger/BurgerGroupHeader.tsx"
    },
    "value": [
     "caption"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "ButtonMods",
      "nameFull": "ButtonMods"
     },
     "source": "uui/components/buttons/Button/Button.tsx"
    },
    "value": [
     "color",
     "mode",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "CheckboxMods",
      "nameFull": "CheckboxMods"
     },
     "source": "uui/components/inputs/Checkbox.tsx"
    },
    "value": [
     "mode",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "ColumnsConfigurationModalProps",
      "nameFull": "ColumnsConfigurationModalProps<TItem, TId, TFilter>"
     },
     "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
    },
    "value": [
     "columns",
     "columnsConfig",
     "defaultConfig",
     "getSearchFields",
     "renderItem"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "ConfirmationModalWindowProps",
      "nameFull": "ConfirmationModalWindowProps"
     },
     "source": "uui/components/overlays/ConfirmationModal.tsx"
    },
    "value": [
     "bodyContent",
     "caption",
     "hideCancelButton"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataPickerBodyProps",
      "nameFull": "DataPickerBodyProps"
     },
     "source": "uui/components/pickers/DataPickerBody.tsx"
    },
    "value": [
     "editMode",
     "maxHeight",
     "searchSize",
     "selectionMode"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataPickerRowProps",
      "nameFull": "DataPickerRowProps<TItem, TId>"
     },
     "source": "uui/components/pickers/DataPickerRow.tsx"
    },
    "value": [
     "alignActions",
     "borderBottom",
     "padding",
     "renderItem",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataRowsContainerProps",
      "nameFull": "DataRowsContainerProps<TItem, TId, List>"
     },
     "source": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
    },
    "value": [
     "headerRef",
     "renderRow",
     "rows"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataTableCellMods",
      "nameFull": "DataTableCellMods"
     },
     "source": "uui/components/tables/types.ts"
    },
    "value": [
     "border"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataTableHeaderCellMods",
      "nameFull": "DataTableHeaderCellMods"
     },
     "source": "uui/components/tables/types.ts"
    },
    "value": [
     "textCase"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataTableHeaderRowMods",
      "nameFull": "DataTableHeaderRowMods"
     },
     "source": "uui/components/tables/types.ts"
    },
    "value": [
     "textCase"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataTableMods",
      "nameFull": "DataTableMods"
     },
     "source": "uui/components/tables/types.ts"
    },
    "value": [
     "border",
     "headerTextCase",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataTableProps",
      "nameFull": "DataTableProps<TItem, TId, TFilter>"
     },
     "source": "uui/components/tables/DataTable.tsx"
    },
    "value": [
     "columns",
     "filters",
     "getRows",
     "onCopy",
     "onScroll",
     "renderColumnsConfigurationModal",
     "renderNoResultsBlock",
     "renderRow",
     "showColumnsConfig"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DataTableRowMods",
      "nameFull": "DataTableRowMods"
     },
     "source": "uui/components/tables/types.ts"
    },
    "value": [
     "borderBottom"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DatePickerBodyProps",
      "nameFull": "DatePickerBodyProps"
     },
     "source": "uui/components/datePickers/DatePickerBody.tsx"
    },
    "value": [
     "getDayCX",
     "isHoliday"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DefaultNotificationProps",
      "nameFull": "DefaultNotificationProps"
     },
     "source": "uui/components/overlays/NotificationCard.tsx"
    },
    "value": [
     "actions"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DropdownContainerMods",
      "nameFull": "DropdownContainerMods"
     },
     "source": "uui/components/overlays/DropdownContainer.tsx"
    },
    "value": [
     "padding",
     "vPadding"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DropMarkerProps",
      "nameFull": "DropMarkerProps"
     },
     "source": "uui/components/dnd/DropMarker.tsx"
    },
    "value": [
     "enableBlocker"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "DropSpotProps",
      "nameFull": "DropSpotProps"
     },
     "source": "uui/components/fileUpload/DropSpot.tsx"
    },
    "value": [
     "accept",
     "cx",
     "infoText",
     "onUploadFiles",
     "single"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "FileCardItem",
      "nameFull": "FileCardItem"
     },
     "source": "uui/components/fileUpload/FileCard.tsx"
    },
    "value": [
     "abortXHR",
     "progress"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "FileCardProps",
      "nameFull": "FileCardProps"
     },
     "source": "uui/components/fileUpload/FileCard.tsx"
    },
    "value": [
     "file",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "FiltersPanelProps",
      "nameFull": "FiltersPanelProps<TFilter>"
     },
     "source": "uui/components/filters/FiltersPanel.tsx"
    },
    "value": [
     "filters",
     "setTableState",
     "size",
     "tableState"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "HighlightRange",
      "nameFull": "HighlightRange"
     },
     "source": "uui/components/pickers/highlight.tsx"
    },
    "value": [
     "from",
     "isHighlighted",
     "to"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "IconButtonMods",
      "nameFull": "IconButtonMods"
     },
     "source": "uui/components/buttons/IconButton.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "IDropdownMenuContainer",
      "nameFull": "IDropdownMenuContainer"
     },
     "source": "uui/components/overlays/DropdownMenu.tsx"
    },
    "value": [
     "closeOnKey"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "IDropdownMenuItemProps",
      "nameFull": "IDropdownMenuItemProps"
     },
     "source": "uui/components/overlays/DropdownMenu.tsx"
    },
    "value": [
     "indent",
     "isActive",
     "isSelected"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "IHasEditMode",
      "nameFull": "IHasEditMode"
     },
     "source": "uui/components/types.ts"
    },
    "value": [
     "mode"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "IndeterminateBarMods",
      "nameFull": "IndeterminateBarMods"
     },
     "source": "uui/components/widgets/IndeterminateBar.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "ITextPlaceholderProps",
      "nameFull": "ITextPlaceholderProps"
     },
     "source": "uui/components/typography/TextPlaceholder.tsx"
    },
    "value": [
     "isNotAnimated",
     "wordsCount"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "LinkButtonMods",
      "nameFull": "LinkButtonMods"
     },
     "source": "uui/components/buttons/LinkButton.tsx"
    },
    "value": [
     "color",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "MainMenuAvatarProps",
      "nameFull": "MainMenuAvatarProps"
     },
     "source": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
    },
    "value": [
     "avatarUrl",
     "icon"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "MainMenuButtonMods",
      "nameFull": "MainMenuButtonMods"
     },
     "source": "uui/components/navigation/MainMenu/MainMenuButton.tsx"
    },
    "value": [
     "type"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "MainMenuIconProps",
      "nameFull": "MainMenuIconProps"
     },
     "source": "uui/components/navigation/MainMenu/MainMenuIcon.tsx"
    },
    "value": [
     "icon"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "ModalWindowMods",
      "nameFull": "ModalWindowMods"
     },
     "source": "uui/components/overlays/Modals.tsx"
    },
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "MultiSwitchProps",
      "nameFull": "MultiSwitchProps<TValue>"
     },
     "source": "uui/components/inputs/MultiSwitch.tsx"
    },
    "value": [
     "color",
     "items"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "NotificationCardProps",
      "nameFull": "NotificationCardProps"
     },
     "source": "uui/components/overlays/NotificationCard.tsx"
    },
    "value": [
     "color",
     "icon"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "PanelMods",
      "nameFull": "PanelMods"
     },
     "source": "uui/components/layout/FlexItems/Panel.tsx"
    },
    "value": [
     "margin",
     "shadow"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "PickerItemProps",
      "nameFull": "PickerItemProps<TItem, TId>"
     },
     "source": "uui/components/pickers/PickerItem.tsx"
    },
    "value": [
     "avatarUrl",
     "dataSourceState",
     "icon",
     "subtitle",
     "title"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "PickerListItemProps",
      "nameFull": "PickerListItemProps<TItem, TId>"
     },
     "source": "uui/components/pickers/PickerListItem.tsx"
    },
    "value": [
     "getName"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "PickerListProps",
      "nameFull": "PickerListProps<TItem, TId>"
     },
     "source": "uui/components/pickers/PickerList.tsx"
    },
    "value": [
     "noOptionsMessage",
     "renderModalToggler"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "PickerTogglerMods",
      "nameFull": "PickerTogglerMods"
     },
     "source": "uui/components/pickers/PickerToggler.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "PresetsPanelProps",
      "nameFull": "PresetsPanelProps"
     },
     "source": "uui/components/filters/PresetPanel/PresetsPanel.tsx"
    },
    "value": [
     "tableState"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "ProgressBarMods",
      "nameFull": "ProgressBarMods"
     },
     "source": "uui/components/widgets/ProgressBar.tsx"
    },
    "value": [
     "size",
     "striped"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "RadioInputMods",
      "nameFull": "RadioInputMods"
     },
     "source": "uui/components/inputs/RadioInput.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "RangeDatePickerBodyProps",
      "nameFull": "RangeDatePickerBodyProps<T>"
     },
     "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
    },
    "value": [
     "focusPart",
     "isHoliday",
     "renderFooter",
     "renderHeader"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "RangeDatePickerProps",
      "nameFull": "RangeDatePickerProps"
     },
     "source": "uui/components/datePickers/RangeDatePicker.tsx"
    },
    "value": [
     "getPlaceholder"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "RangeDatePickerValue",
      "nameFull": "RangeDatePickerValue"
     },
     "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
    },
    "value": [
     "from",
     "to"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "RichTextViewMods",
      "nameFull": "RichTextViewMods"
     },
     "source": "uui/components/typography/RichTextView.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "RowMods",
      "nameFull": "RowMods"
     },
     "source": "uui/components/layout/FlexItems/FlexRow.tsx"
    },
    "value": [
     "borderBottom",
     "columnGap",
     "margin",
     "padding",
     "rowGap",
     "spacing",
     "topShadow",
     "vPadding"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "RowSizeMod",
      "nameFull": "RowSizeMod"
     },
     "source": "uui/components/types.ts"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "SizeMod",
      "nameFull": "SizeMod"
     },
     "source": "uui/components/types.ts"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "SwitchMods",
      "nameFull": "SwitchMods"
     },
     "source": "uui/components/inputs/Switch.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "TabButtonMods",
      "nameFull": "TabButtonMods"
     },
     "source": "uui/components/buttons/TabButton.tsx"
    },
    "value": [
     "size",
     "withNotify"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "TagMods",
      "nameFull": "TagMods"
     },
     "source": "uui/components/widgets/Tag.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "TextAreaMods",
      "nameFull": "TextAreaMods"
     },
     "source": "uui/components/inputs/TextArea.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "TextInputMods",
      "nameFull": "TextInputMods"
     },
     "source": "uui/components/inputs/TextInput.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "TextMods",
      "nameFull": "TextMods"
     },
     "source": "uui/components/typography/Text.tsx"
    },
    "value": [
     "color",
     "font",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "TextSettings",
      "nameFull": "TextSettings"
     },
     "source": "uui/helpers/textLayout.tsx"
    },
    "value": [
     "fontSize",
     "lineHeight"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui",
     "typeName": {
      "name": "TimePickerProps",
      "nameFull": "TimePickerProps"
     },
     "source": "uui/components/inputs/TimePicker.tsx"
    },
    "value": [
     "format",
     "minutesStep"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "AlertMods",
      "nameFull": "AlertMods"
     },
     "source": "epam-promo/components/overlays/Alert.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "BadgeMods",
      "nameFull": "BadgeMods"
     },
     "source": "epam-promo/components/widgets/Badge.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "ButtonMods",
      "nameFull": "ButtonMods"
     },
     "source": "epam-promo/components/buttons/Button.tsx"
    },
    "value": [
     "color",
     "fill"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "DropdownContainerMods",
      "nameFull": "DropdownContainerMods"
     },
     "source": "epam-promo/components/overlays/DropdownContainer.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "ErrorHandlerProps",
      "nameFull": "ErrorHandlerProps"
     },
     "source": "epam-promo/components/errors/ErrorHandler.tsx"
    },
    "value": [
     "getErrorInfo",
     "onNotificationError"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "IconButtonMods",
      "nameFull": "IconButtonMods"
     },
     "source": "epam-promo/components/buttons/IconButton.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "LinkButtonMods",
      "nameFull": "LinkButtonMods"
     },
     "source": "epam-promo/components/buttons/LinkButton.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "ModalWindowMods",
      "nameFull": "ModalWindowMods"
     },
     "source": "epam-promo/components/overlays/ModalWindow.tsx"
    },
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "MultiSwitchMods",
      "nameFull": "MultiSwitchMods"
     },
     "source": "epam-promo/components/inputs/MultiSwitch.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "NotificationCardMods",
      "nameFull": "NotificationCardMods"
     },
     "source": "epam-promo/components/overlays/NotificationCard.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "PanelMods",
      "nameFull": "PanelMods"
     },
     "source": "epam-promo/components/layout/FlexItems/Panel.tsx"
    },
    "value": [
     "background",
     "margin",
     "shadow"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "RatingMods",
      "nameFull": "RatingMods"
     },
     "source": "epam-promo/components/inputs/Rating.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "RichTextViewMods",
      "nameFull": "RichTextViewMods"
     },
     "source": "epam-promo/components/typography/RichTextView.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "RowMods",
      "nameFull": "RowMods"
     },
     "source": "epam-promo/components/layout/FlexItems/FlexRow.tsx"
    },
    "value": [
     "background"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "RowSizeMod",
      "nameFull": "RowSizeMod"
     },
     "source": "epam-promo/components/types.ts"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "ScrollBarsMods",
      "nameFull": "ScrollBarsMods"
     },
     "source": "epam-promo/components/layout/ScrollBars.tsx"
    },
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/promo",
     "typeName": {
      "name": "TextMods",
      "nameFull": "TextMods"
     },
     "source": "epam-promo/components/typography/Text.tsx"
    },
    "value": [
     "color",
     "font"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "AlertMods",
      "nameFull": "AlertMods"
     },
     "source": "loveship/components/overlays/Alert.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "BadgeMods",
      "nameFull": "BadgeMods"
     },
     "source": "loveship/components/widgets/Badge.tsx"
    },
    "value": [
     "color",
     "fill",
     "shape",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "ButtonMods",
      "nameFull": "ButtonMods"
     },
     "source": "loveship/components/buttons/Button.tsx"
    },
    "value": [
     "color",
     "fill",
     "shape",
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "CheckboxMods",
      "nameFull": "CheckboxMods"
     },
     "source": "loveship/components/inputs/Checkbox.tsx"
    },
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "DropdownContainerMods",
      "nameFull": "DropdownContainerMods"
     },
     "source": "loveship/components/overlays/DropdownContainer.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "EditMode",
      "nameFull": "EditMode"
     },
     "source": "loveship/components/types.ts"
    },
    "value": [
     "mode"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "ErrorConfig",
      "nameFull": "ErrorConfig"
     },
     "source": "loveship/components/app/ErrorHandler.tsx"
    },
    "value": [
     "getInfo"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "ErrorPageProps",
      "nameFull": "ErrorPageProps"
     },
     "source": "loveship/components/app/ErrorHandler.tsx"
    },
    "value": [
     "errorPageConfig",
     "onNotificationError",
     "theme"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "FontMod",
      "nameFull": "FontMod"
     },
     "source": "loveship/components/types.ts"
    },
    "value": [
     "font"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "IconButtonMods",
      "nameFull": "IconButtonMods"
     },
     "source": "loveship/components/buttons/IconButton.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "LinkButtonMods",
      "nameFull": "LinkButtonMods"
     },
     "source": "loveship/components/buttons/LinkButton.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "MakeMeItemProps",
      "nameFull": "MakeMeItemProps"
     },
     "source": "loveship/components/dev/MakeMeItem.tsx"
    },
    "value": [
     "api"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "MakeMeUser",
      "nameFull": "MakeMeUser"
     },
     "source": "loveship/components/dev/MakeMeItem.tsx"
    },
    "value": [
     "avatarUrl",
     "email",
     "externalId",
     "jobTitle",
     "name"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "ModalWindowMods",
      "nameFull": "ModalWindowMods"
     },
     "source": "loveship/components/overlays/ModalWindow.tsx"
    },
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "MultiSwitchMods",
      "nameFull": "MultiSwitchMods"
     },
     "source": "loveship/components/inputs/MultiSwitch.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "NotificationCardMods",
      "nameFull": "NotificationCardMods"
     },
     "source": "loveship/components/overlays/NotificationCard.tsx"
    },
    "value": [
     "color"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "PanelMods",
      "nameFull": "PanelMods"
     },
     "source": "loveship/components/layout/FlexItems/Panel.tsx"
    },
    "value": [
     "background",
     "margin",
     "shadow"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "RadioInputMods",
      "nameFull": "RadioInputMods"
     },
     "source": "loveship/components/inputs/RadioInput.tsx"
    },
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "RatingMods",
      "nameFull": "RatingMods"
     },
     "source": "loveship/components/inputs/Rating.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "RichTextViewMods",
      "nameFull": "RichTextViewMods"
     },
     "source": "loveship/components/typography/RichTextView.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "RowMods",
      "nameFull": "RowMods"
     },
     "source": "loveship/components/layout/FlexItems/FlexRow.tsx"
    },
    "value": [
     "background",
     "spacing",
     "type"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "RowSizeMod",
      "nameFull": "RowSizeMod"
     },
     "source": "loveship/components/types.ts"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "ScrollBarsMods",
      "nameFull": "ScrollBarsMods"
     },
     "source": "loveship/components/layout/ScrollBars.tsx"
    },
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "SizeMod",
      "nameFull": "SizeMod"
     },
     "source": "loveship/components/types.ts"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "SliderRatingProps",
      "nameFull": "SliderRatingProps<TValue>"
     },
     "source": "loveship/components/inputs/SliderRating.tsx"
    },
    "value": [
     "from",
     "getHandlerIcon",
     "getScaleIcon",
     "renderTooltip",
     "size",
     "tooltipColor",
     "withoutNa"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "SnackbarCardProps",
      "nameFull": "SnackbarCardProps"
     },
     "source": "loveship/components/overlays/SnackbarCard.tsx"
    },
    "value": [
     "snackType"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "TabButtonMods",
      "nameFull": "TabButtonMods"
     },
     "source": "loveship/components/buttons/TabButton.tsx"
    },
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "TagMods",
      "nameFull": "TagMods"
     },
     "source": "loveship/components/widgets/Tag.tsx"
    },
    "value": [
     "fill"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "TextInputMods",
      "nameFull": "TextInputMods"
     },
     "source": "loveship/components/inputs/TextInput.tsx"
    },
    "value": [
     "size"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/loveship",
     "typeName": {
      "name": "TextMods",
      "nameFull": "TextMods"
     },
     "source": "loveship/components/typography/Text.tsx"
    },
    "value": [
     "color",
     "font"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-editor",
     "typeName": {
      "name": "LinkElement",
      "nameFull": "LinkElement"
     },
     "source": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
    },
    "value": [
     "href",
     "type"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-editor",
     "typeName": {
      "name": "PlaceholderPluginParams",
      "nameFull": "PlaceholderPluginParams"
     },
     "source": "uui-editor/src/plugins/placeholderPlugin/placeholderPlugin.tsx"
    },
    "value": [
     "items"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-editor",
     "typeName": {
      "name": "PlateProps",
      "nameFull": "PlateProps"
     },
     "source": "uui-editor/src/types.ts"
    },
    "value": [
     "align",
     "url",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-editor",
     "typeName": {
      "name": "SlateImageSize",
      "nameFull": "SlateImageSize"
     },
     "source": "uui-editor/src/types.ts"
    },
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-editor",
     "typeName": {
      "name": "SlateProps",
      "nameFull": "SlateProps"
     },
     "source": "uui-editor/src/types.ts"
    },
    "value": [
     "data"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-timeline",
     "typeName": {
      "name": "BaseTimelineCanvasComponentProps",
      "nameFull": "BaseTimelineCanvasComponentProps"
     },
     "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
    },
    "value": [
     "className",
     "renderOnTop",
     "timelineController"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-timeline",
     "typeName": {
      "name": "Item",
      "nameFull": "Item"
     },
     "source": "uui-timeline/src/renderBars.ts"
    },
    "value": [
     "color",
     "fillType",
     "from",
     "height",
     "maxPxPerDay",
     "minPixPerDay",
     "opacity",
     "priority",
     "to"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-timeline",
     "typeName": {
      "name": "Stage",
      "nameFull": "Stage"
     },
     "source": "uui-timeline/src/TimelineEventsBar.tsx"
    },
    "value": [
     "color",
     "endDate",
     "eventName",
     "name",
     "startDate"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-timeline",
     "typeName": {
      "name": "TimelineControllerOptions",
      "nameFull": "TimelineControllerOptions"
     },
     "source": "uui-timeline/src/TimelineController.ts"
    },
    "value": [
     "isHoliday",
     "maxScale",
     "minScale",
     "minVisibleDate",
     "minWidth"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-timeline",
     "typeName": {
      "name": "TimelineEventsBarProps",
      "nameFull": "TimelineEventsBarProps"
     },
     "source": "uui-timeline/src/TimelineEventsBar.tsx"
    },
    "value": [
     "stages",
     "timelineController"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-timeline",
     "typeName": {
      "name": "TimelineNavProps",
      "nameFull": "TimelineNavProps"
     },
     "source": "uui-timeline/src/TimelineNav.tsx"
    },
    "value": [
     "timelineController"
    ]
   },
   {
    "typeRef": {
     "module": "@epam/uui-timeline",
     "typeName": {
      "name": "TimelineScaleProps",
      "nameFull": "TimelineScaleProps"
     },
     "source": "uui-timeline/src/TimelineScale.tsx"
    },
    "value": [
     "isDraggable",
     "isScaleChangeOnWheel",
     "shiftPercent"
    ]
   }
  ]
 },
 "missingTypeComment": {
  "totals": {
   "amountTypes": 509
  },
  "value": [
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "AcceptDropParams",
     "nameFull": "AcceptDropParams<TSrcData, TDstData>"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "AnalyticsEvent",
     "nameFull": "AnalyticsEvent"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiCallErrorType",
     "nameFull": "ApiCallErrorType"
    },
    "source": "uui-core/src/hooks/useUuiError.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiCallInfo",
     "nameFull": "ApiCallInfo"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiCallOptions",
     "nameFull": "ApiCallOptions"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiContextProps",
     "nameFull": "ApiContextProps"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiExtensions",
     "nameFull": "ApiExtensions<TApi>"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiRecoveryReason",
     "nameFull": "ApiRecoveryReason"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiStatus",
     "nameFull": "ApiStatus"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApplyFilterOptions",
     "nameFull": "ApplyFilterOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApplySearchOptions",
     "nameFull": "ApplySearchOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApplySortOptions",
     "nameFull": "ApplySortOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ArrayDataSourceProps",
     "nameFull": "ArrayDataSourceProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/ArrayDataSource.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ArrayElement",
     "nameFull": "ArrayElement<ArrayType>"
    },
    "source": "uui-core/src/data/lenses/types.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ArrayListViewProps",
     "nameFull": "ArrayListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/ArrayListView.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ArrayPickerProps",
     "nameFull": "ArrayPickerProps<TId, TItem>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "AsyncDataSourceProps",
     "nameFull": "AsyncDataSourceProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/AsyncDataSource.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "AsyncListViewProps",
     "nameFull": "AsyncListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/AsyncListView.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BaseArrayListViewProps",
     "nameFull": "BaseArrayListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/ArrayListView.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BaseDatePickerProps",
     "nameFull": "BaseDatePickerProps"
    },
    "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BaseListViewProps",
     "nameFull": "BaseListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BaseRangeDatePickerProps",
     "nameFull": "BaseRangeDatePickerProps"
    },
    "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BatchPromiseOptions",
     "nameFull": "BatchPromiseOptions"
    },
    "source": "uui-core/src/helpers/batch.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BlockTypes",
     "nameFull": "BlockTypes"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ButtonBaseCoreProps",
     "nameFull": "ButtonBaseCoreProps"
    },
    "source": "uui-core/src/types/components/Button.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ButtonCoreProps",
     "nameFull": "ButtonCoreProps"
    },
    "source": "uui-core/src/types/components/Button.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ButtonSemanticProps",
     "nameFull": "ButtonSemanticProps"
    },
    "source": "uui-core/src/types/components/Button.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "CascadeSelection",
     "nameFull": "CascadeSelection"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "CheckboxCoreProps",
     "nameFull": "CheckboxCoreProps"
    },
    "source": "uui-core/src/types/components/Checkbox.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ClassValue",
     "nameFull": "ClassValue"
    },
    "source": "uui-core/src/helpers/cx.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ColumnsConfig",
     "nameFull": "ColumnsConfig"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "CommonContexts",
     "nameFull": "CommonContexts<TApi, TAppContext>"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ContextProviderProps",
     "nameFull": "ContextProviderProps<TApi, TAppContext>"
    },
    "source": "uui-core/src/services/ContextProvider.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "CX",
     "nameFull": "CX"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataColumnProps",
     "nameFull": "DataColumnProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataQuery",
     "nameFull": "DataQuery<T>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataQueryFilter",
     "nameFull": "DataQueryFilter<T>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataQueryFilterCondition",
     "nameFull": "DataQueryFilterCondition<TField>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataQueryRange",
     "nameFull": "DataQueryRange"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataSourceListCounts",
     "nameFull": "DataSourceListCounts"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataSourceListProps",
     "nameFull": "DataSourceListProps"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableCellOptions",
     "nameFull": "DataTableCellOptions<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableCellProps",
     "nameFull": "DataTableCellProps<TItem, TId, TCellValue>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableColumnsConfigOptions",
     "nameFull": "DataTableColumnsConfigOptions"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableConfigModalParams",
     "nameFull": "DataTableConfigModalParams"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableHeaderCellProps",
     "nameFull": "DataTableHeaderCellProps<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableHeaderRowProps",
     "nameFull": "DataTableHeaderRowProps<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableRowProps",
     "nameFull": "DataTableRowProps<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableSelectedCellData",
     "nameFull": "DataTableSelectedCellData<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableState",
     "nameFull": "DataTableState<TFilter, TViewState>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DatePickerCoreProps",
     "nameFull": "DatePickerCoreProps"
    },
    "source": "uui-core/src/types/components/datePicker/DatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DndActorProps",
     "nameFull": "DndActorProps<TSrcData, TDstData>"
    },
    "source": "uui-core/src/services/dnd/DndActor.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DndActorRenderParams",
     "nameFull": "DndActorRenderParams"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DndContextState",
     "nameFull": "DndContextState"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DragGhostProps",
     "nameFull": "DragGhostProps"
    },
    "source": "uui-core/src/services/dnd/DragGhost.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropdownBodyProps",
     "nameFull": "DropdownBodyProps"
    },
    "source": "uui-core/src/types/components/Dropdown.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropdownProps",
     "nameFull": "DropdownProps"
    },
    "source": "uui-core/src/types/components/Dropdown.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropdownState",
     "nameFull": "DropdownState"
    },
    "source": "uui-core/src/types/components/Dropdown.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropParams",
     "nameFull": "DropParams<TSrcData, TDstData>"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropPosition",
     "nameFull": "DropPosition"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FileUploadOptions",
     "nameFull": "FileUploadOptions"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FileUploadResponse",
     "nameFull": "FileUploadResponse"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FilterPredicate",
     "nameFull": "FilterPredicate<TField>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FilterPredicateName",
     "nameFull": "FilterPredicateName"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FiltersConfig",
     "nameFull": "FiltersConfig<TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FlexCellProps",
     "nameFull": "FlexCellProps"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FlexRowProps",
     "nameFull": "FlexRowProps"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FormProps",
     "nameFull": "FormProps<T>"
    },
    "source": "uui-core/src/data/forms/Form.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FormSaveResponse",
     "nameFull": "FormSaveResponse<T>"
    },
    "source": "uui-core/src/data/forms/Form.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FormState",
     "nameFull": "FormState<T>"
    },
    "source": "uui-core/src/data/forms/useForm.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAdaptiveItem",
     "nameFull": "IAdaptiveItem"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAnalyticableClick",
     "nameFull": "IAnalyticableClick"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAnalyticableOnChange",
     "nameFull": "IAnalyticableOnChange<T>"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAnalyticsContext",
     "nameFull": "IAnalyticsContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAnalyticsListener",
     "nameFull": "IAnalyticsListener"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IApiContext",
     "nameFull": "IApiContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IBaseContext",
     "nameFull": "IBaseContext<TState>"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ICanBeFixed",
     "nameFull": "ICanBeFixed"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ICanBeRequired",
     "nameFull": "ICanBeRequired"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ICheckable",
     "nameFull": "ICheckable"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IColumnConfig",
     "nameFull": "IColumnConfig"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IContextProviderSsrProps",
     "nameFull": "IContextProviderSsrProps<TApi, TAppContext>"
    },
    "source": "uui-core/src/ssr/useUuiServicesSsr.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IdAndName",
     "nameFull": "IdAndName"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDataSource",
     "nameFull": "IDataSource<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDataSourceView",
     "nameFull": "IDataSourceView<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDndActor",
     "nameFull": "IDndActor<TSrcData, TDstData>"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDndContext",
     "nameFull": "IDndContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDropdownBodyProps",
     "nameFull": "IDropdownBodyProps"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IErrorContext",
     "nameFull": "IErrorContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IFilterConfig",
     "nameFull": "IFilterConfig"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IFilterItemBodyProps",
     "nameFull": "IFilterItemBodyProps<TFilter>"
    },
    "source": "uui-core/src/types/components/filterItemBody.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IFilterPredicate",
     "nameFull": "IFilterPredicate"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IFormApi",
     "nameFull": "IFormApi<T>"
    },
    "source": "uui-core/src/data/forms/Form.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasChildren",
     "nameFull": "IHasChildren"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasForwardedRef",
     "nameFull": "IHasForwardedRef<T>"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasIcon",
     "nameFull": "IHasIcon"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasPlaceholder",
     "nameFull": "IHasPlaceholder"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasRawProps",
     "nameFull": "IHasRawProps<T>"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasTabIndex",
     "nameFull": "IHasTabIndex"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHistory4",
     "nameFull": "IHistory4"
    },
    "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ILayoutContext",
     "nameFull": "ILayoutContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ILens",
     "nameFull": "ILens<TFocused>"
    },
    "source": "uui-core/src/data/lenses/types.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ILockContext",
     "nameFull": "ILockContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IMap",
     "nameFull": "IMap<TKey, TValue>"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IModal",
     "nameFull": "IModal<TResult>"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IModalContext",
     "nameFull": "IModalContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "INotification",
     "nameFull": "INotification"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "INotificationContext",
     "nameFull": "INotificationContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IPresetsApi",
     "nameFull": "IPresetsApi<TFilter, TViewState>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IProcessRequest",
     "nameFull": "IProcessRequest"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IRouterContext",
     "nameFull": "IRouterContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ISkin",
     "nameFull": "ISkin"
    },
    "source": "uui-core/src/services/SkinContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ITablePreset",
     "nameFull": "ITablePreset<TFilter, TViewState>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ITableState",
     "nameFull": "ITableState<TFilter, TViewState>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ItemsComparator",
     "nameFull": "ItemsComparator<TItem>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ITree",
     "nameFull": "ITree<TItem, TId>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IUserSettingsContext",
     "nameFull": "IUserSettingsContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LabeledInputCoreProps",
     "nameFull": "LabeledInputCoreProps"
    },
    "source": "uui-core/src/types/components/LabeledInput.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LayoutLayer",
     "nameFull": "LayoutLayer"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LazyDataSourceApiRequestOptions",
     "nameFull": "LazyDataSourceApiRequestOptions<TItem, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LazyDataSourceProps",
     "nameFull": "LazyDataSourceProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/LazyDataSource.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LazyListViewProps",
     "nameFull": "LazyListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/LazyListView.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "Link",
     "nameFull": "Link"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ListApiResponse",
     "nameFull": "ListApiResponse<TItem>"
    },
    "source": "uui-core/src/data/processing/ListApiCache.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ListApiSettings",
     "nameFull": "ListApiSettings<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/ListApiCache.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LoadingStatus",
     "nameFull": "LoadingStatus"
    },
    "source": "uui-core/src/helpers/LazyLoadedMap.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LoadTreeOptions",
     "nameFull": "LoadTreeOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "Metadata",
     "nameFull": "Metadata<T>"
    },
    "source": "uui-core/src/types/validation.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalBlockerProps",
     "nameFull": "ModalBlockerProps"
    },
    "source": "uui-core/src/types/components/Modals.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalComponentProps",
     "nameFull": "ModalComponentProps<TParameters, TResult>"
    },
    "source": "uui-core/src/services/ModalContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalFooterCoreProps",
     "nameFull": "ModalFooterCoreProps"
    },
    "source": "uui-core/src/types/components/Modals.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalHeaderCoreProps",
     "nameFull": "ModalHeaderCoreProps"
    },
    "source": "uui-core/src/types/components/Modals.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalOperation",
     "nameFull": "ModalOperation"
    },
    "source": "uui-core/src/services/ModalContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalWindowProps",
     "nameFull": "ModalWindowProps"
    },
    "source": "uui-core/src/types/components/Modals.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "NotificationOperation",
     "nameFull": "NotificationOperation"
    },
    "source": "uui-core/src/services/NotificationContext.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "NotificationParams",
     "nameFull": "NotificationParams"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerBaseOptions",
     "nameFull": "PickerBaseOptions<TItem, TId>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerBaseProps",
     "nameFull": "PickerBaseProps<TItem, TId>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerBindingProps",
     "nameFull": "PickerBindingProps<TItem, TId>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerBindingValueType",
     "nameFull": "PickerBindingValueType"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerFilterConfig",
     "nameFull": "PickerFilterConfig<TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerFooterProps",
     "nameFull": "PickerFooterProps<TItem, TId>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerCoreProps",
     "nameFull": "RangeDatePickerCoreProps"
    },
    "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerInputType",
     "nameFull": "RangeDatePickerInputType"
    },
    "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerPresets",
     "nameFull": "RangeDatePickerPresets"
    },
    "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerPresetValue",
     "nameFull": "RangeDatePickerPresetValue"
    },
    "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerValue",
     "nameFull": "RangeDatePickerValue"
    },
    "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RenderCellProps",
     "nameFull": "RenderCellProps<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RenderEditorProps",
     "nameFull": "RenderEditorProps<TItem, TId, TCellValue>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ScrollAlign",
     "nameFull": "ScrollAlign"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ScrollToConfig",
     "nameFull": "ScrollToConfig"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SearchResultItem",
     "nameFull": "SearchResultItem<TItem>"
    },
    "source": "uui-core/src/data/processing/views/LazyListView.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SinglePickerProps",
     "nameFull": "SinglePickerProps<TId, TItem>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SkinContextComponentProps",
     "nameFull": "SkinContextComponentProps<TProps, TSemanticProps>"
    },
    "source": "uui-core/src/services/SkinContext.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SortDirection",
     "nameFull": "SortDirection"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SortingOption",
     "nameFull": "SortingOption<T>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SpinnerCoreProps",
     "nameFull": "SpinnerCoreProps"
    },
    "source": "uui-core/src/types/components/Spinner.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "StatefulProps",
     "nameFull": "StatefulProps<T>"
    },
    "source": "uui-core/src/data/Stateful.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TableFiltersConfig",
     "nameFull": "TableFiltersConfig<TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TextInputCoreProps",
     "nameFull": "TextInputCoreProps"
    },
    "source": "uui-core/src/types/components/TextInput.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TimePickerValue",
     "nameFull": "TimePickerValue"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TMouseCoords",
     "nameFull": "TMouseCoords"
    },
    "source": "uui-core/src/services/dnd/DndContext.tsx"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TooltipCoreProps",
     "nameFull": "TooltipCoreProps"
    },
    "source": "uui-core/src/types/components/Tooltip.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TreeNodeInfo",
     "nameFull": "TreeNodeInfo"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TreeParams",
     "nameFull": "TreeParams<TItem, TId>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseFormProps",
     "nameFull": "UseFormProps<T>"
    },
    "source": "uui-core/src/data/forms/useForm.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseTableStateHookParams",
     "nameFull": "UseTableStateHookParams<TFilter, TViewState>"
    },
    "source": "uui-core/src/hooks/useTableState/useTableState.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseUuiErrorOptions",
     "nameFull": "UseUuiErrorOptions"
    },
    "source": "uui-core/src/hooks/useUuiError.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseUuiErrorProps",
     "nameFull": "UseUuiErrorProps"
    },
    "source": "uui-core/src/hooks/useUuiError.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseUuiServicesProps",
     "nameFull": "UseUuiServicesProps<TApi, TAppContext>"
    },
    "source": "uui-core/src/hooks/useUuiServices.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiContexts",
     "nameFull": "UuiContexts"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiErrorInfo",
     "nameFull": "UuiErrorInfo"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiRecoveryErrorInfo",
     "nameFull": "UuiRecoveryErrorInfo"
    },
    "source": "uui-core/src/hooks/useUuiError.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiServicesProps",
     "nameFull": "UuiServicesProps<TApi>"
    },
    "source": "uui-core/src/hooks/useUuiServices.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ValidationMode",
     "nameFull": "ValidationMode"
    },
    "source": "uui-core/src/data/validation/validate.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "VirtualListRange",
     "nameFull": "VirtualListRange"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "VPanelProps",
     "nameFull": "VPanelProps"
    },
    "source": "uui-core/src/types/props.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AccordionProps",
     "nameFull": "AccordionProps"
    },
    "source": "uui-components/src/layout/Accordion.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AccordionState",
     "nameFull": "AccordionState"
    },
    "source": "uui-components/src/layout/Accordion.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AdaptiveItemProps",
     "nameFull": "AdaptiveItemProps<T>"
    },
    "source": "uui-components/src/adaptivePanel/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AdaptivePanelProps",
     "nameFull": "AdaptivePanelProps"
    },
    "source": "uui-components/src/adaptivePanel/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AnchorProps",
     "nameFull": "AnchorProps"
    },
    "source": "uui-components/src/navigation/Anchor.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ArrayPickerProps",
     "nameFull": "ArrayPickerProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AvatarProps",
     "nameFull": "AvatarProps"
    },
    "source": "uui-components/src/widgets/Avatar.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AvatarStackProps",
     "nameFull": "AvatarStackProps"
    },
    "source": "uui-components/src/widgets/AvatarStack.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "BaseRatingProps",
     "nameFull": "BaseRatingProps<TValue>"
    },
    "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "BaseTimePickerProps",
     "nameFull": "BaseTimePickerProps"
    },
    "source": "uui-components/src/inputs/BaseTimePicker.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "BlockerProps",
     "nameFull": "BlockerProps"
    },
    "source": "uui-components/src/layout/Blocker.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "BurgerProps",
     "nameFull": "BurgerProps"
    },
    "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ButtonBaseProps",
     "nameFull": "ButtonBaseProps"
    },
    "source": "uui-components/src/buttons/ButtonBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ButtonProps",
     "nameFull": "ButtonProps"
    },
    "source": "uui-components/src/buttons/Button.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CalendarPresetsProps",
     "nameFull": "CalendarPresetsProps"
    },
    "source": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CalendarProps",
     "nameFull": "CalendarProps<TSelection>"
    },
    "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CarouselProps",
     "nameFull": "CarouselProps"
    },
    "source": "uui-components/src/widgets/Carousel.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CarouselState",
     "nameFull": "CarouselState"
    },
    "source": "uui-components/src/widgets/Carousel.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CheckboxGroupProps",
     "nameFull": "CheckboxGroupProps<TValue>"
    },
    "source": "uui-components/src/layout/CheckboxGroup.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CheckboxProps",
     "nameFull": "CheckboxProps"
    },
    "source": "uui-components/src/inputs/Checkbox.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ColumnsConfigurationRowProps",
     "nameFull": "ColumnsConfigurationRowProps"
    },
    "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ControlGroupProps",
     "nameFull": "ControlGroupProps"
    },
    "source": "uui-components/src/layout/ControlGroup.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ControlIconProps",
     "nameFull": "ControlIconProps"
    },
    "source": "uui-components/src/layout/IconContainer.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DataSourceKeyboardParams",
     "nameFull": "DataSourceKeyboardParams"
    },
    "source": "uui-components/src/pickers/KeyboardUtils.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DataTableSelectionProviderProps",
     "nameFull": "DataTableSelectionProviderProps<TItem, TId, TFilter>"
    },
    "source": "uui-components/src/table/tableCellsSelection/DataTableSelectionProvider.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DatePickerBodyBaseOptions",
     "nameFull": "DatePickerBodyBaseOptions"
    },
    "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DatePickerBodyBaseProps",
     "nameFull": "DatePickerBodyBaseProps<TSelection>"
    },
    "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DatePickerState",
     "nameFull": "DatePickerState"
    },
    "source": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DayProps",
     "nameFull": "DayProps"
    },
    "source": "uui-components/src/inputs/DatePicker/Day.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DragHandleProps",
     "nameFull": "DragHandleProps"
    },
    "source": "uui-components/src/dnd/DragHandle.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DropdownContainerProps",
     "nameFull": "DropdownContainerProps"
    },
    "source": "uui-components/src/overlays/DropdownContainer.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DropSpotRenderParams",
     "nameFull": "DropSpotRenderParams"
    },
    "source": "uui-components/src/widgets/DropSpot.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "FlexSpacerProps",
     "nameFull": "FlexSpacerProps"
    },
    "source": "uui-components/src/layout/flexItems/FlexSpacer.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "HeaderCellContentProps",
     "nameFull": "HeaderCellContentProps"
    },
    "source": "uui-components/src/table/DataTableHeaderCell.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IconButtonBaseProps",
     "nameFull": "IconButtonBaseProps"
    },
    "source": "uui-components/src/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "InputAddonProps",
     "nameFull": "InputAddonProps"
    },
    "source": "uui-components/src/inputs/InputAddon.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IProgressBarProps",
     "nameFull": "IProgressBarProps"
    },
    "source": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IRenderInputProps",
     "nameFull": "IRenderInputProps"
    },
    "source": "uui-components/src/inputs/TextInput.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IScrollSpyApi",
     "nameFull": "IScrollSpyApi"
    },
    "source": "uui-components/src/navigation/ScrollSpy.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IScrollSpyProps",
     "nameFull": "IScrollSpyProps"
    },
    "source": "uui-components/src/navigation/ScrollSpy.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "LabeledInputProps",
     "nameFull": "LabeledInputProps"
    },
    "source": "uui-components/src/layout/LabeledInput.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MainMenuCustomElementProps",
     "nameFull": "MainMenuCustomElementProps"
    },
    "source": "uui-components/src/navigation/MainMenu/MainMenuCustomElement.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MainMenuDropdownProps",
     "nameFull": "MainMenuDropdownProps"
    },
    "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MainMenuLogoProps",
     "nameFull": "MainMenuLogoProps"
    },
    "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MainMenuProps",
     "nameFull": "MainMenuProps"
    },
    "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MonthSelectionProps",
     "nameFull": "MonthSelectionProps"
    },
    "source": "uui-components/src/inputs/DatePicker/MonthSelection.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "NumericInputProps",
     "nameFull": "NumericInputProps"
    },
    "source": "uui-components/src/inputs/NumericInput.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PaginatorParams",
     "nameFull": "PaginatorParams"
    },
    "source": "uui-components/src/widgets/Paginator.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PaginatorProps",
     "nameFull": "PaginatorProps"
    },
    "source": "uui-components/src/widgets/Paginator.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBindingHelper",
     "nameFull": "PickerBindingHelper<TItem, TId>"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBindingProps",
     "nameFull": "PickerBindingProps<TItem, TId>"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBindingValueType",
     "nameFull": "PickerBindingValueType"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBodyBaseProps",
     "nameFull": "PickerBodyBaseProps"
    },
    "source": "uui-components/src/pickers/PickerBodyBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBodyValue",
     "nameFull": "PickerBodyValue<TSelection>"
    },
    "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerInputBaseProps",
     "nameFull": "PickerInputBaseProps<TItem, TId>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerListBaseProps",
     "nameFull": "PickerListBaseProps<TItem, TId>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerModalArrayProps",
     "nameFull": "PickerModalArrayProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerModalOptions",
     "nameFull": "PickerModalOptions<TItem, TId>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerModalScalarProps",
     "nameFull": "PickerModalScalarProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerTogglerProps",
     "nameFull": "PickerTogglerProps<TItem, TId>"
    },
    "source": "uui-components/src/pickers/PickerToggler.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PortalProps",
     "nameFull": "PortalProps"
    },
    "source": "uui-components/src/overlays/Portal.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PositionValues",
     "nameFull": "PositionValues"
    },
    "source": "uui-components/src/layout/ScrollBars.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RadioGroupItem",
     "nameFull": "RadioGroupItem<TValue>"
    },
    "source": "uui-components/src/layout/RadioGroup.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RadioGroupProps",
     "nameFull": "RadioGroupProps<TValue>"
    },
    "source": "uui-components/src/layout/RadioGroup.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RadioInputProps",
     "nameFull": "RadioInputProps"
    },
    "source": "uui-components/src/inputs/RadioInput.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RangeSliderState",
     "nameFull": "RangeSliderState"
    },
    "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RangeSliderValue",
     "nameFull": "RangeSliderValue"
    },
    "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RatingProps",
     "nameFull": "RatingProps"
    },
    "source": "uui-components/src/inputs/Rating/Rating.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RichTextViewProps",
     "nameFull": "RichTextViewProps"
    },
    "source": "uui-components/src/RichTextView.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ScrollbarProps",
     "nameFull": "ScrollbarProps"
    },
    "source": "uui-components/src/layout/ScrollBars.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ScrollbarsApi",
     "nameFull": "ScrollbarsApi"
    },
    "source": "uui-components/src/layout/ScrollBars.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SelectionContextState",
     "nameFull": "SelectionContextState<TItem, TId, TFilter>"
    },
    "source": "uui-components/src/table/tableCellsSelection/DataTableSelectionContext.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SinglePickerProps",
     "nameFull": "SinglePickerProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SliderBaseProps",
     "nameFull": "SliderBaseProps<TSelection>"
    },
    "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SliderBaseState",
     "nameFull": "SliderBaseState"
    },
    "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SnackbarProps",
     "nameFull": "SnackbarProps"
    },
    "source": "uui-components/src/overlays/Snackbar.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SpinnerProps",
     "nameFull": "SpinnerProps"
    },
    "source": "uui-components/src/widgets/Spinner.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SwitchProps",
     "nameFull": "SwitchProps"
    },
    "source": "uui-components/src/inputs/Switch.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TextAreaProps",
     "nameFull": "TextAreaProps"
    },
    "source": "uui-components/src/inputs/TextArea.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TextInputProps",
     "nameFull": "TextInputProps"
    },
    "source": "uui-components/src/inputs/TextInput.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TextProps",
     "nameFull": "TextProps"
    },
    "source": "uui-components/src/Text.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TimePickerBodyProps",
     "nameFull": "TimePickerBodyProps"
    },
    "source": "uui-components/src/inputs/TimePickerBody.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TooltipProps",
     "nameFull": "TooltipProps"
    },
    "source": "uui-components/src/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TooltipState",
     "nameFull": "TooltipState"
    },
    "source": "uui-components/src/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TreeListItem",
     "nameFull": "TreeListItem"
    },
    "source": "uui-components/src/layout/Tree.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TreeProps",
     "nameFull": "TreeProps<TItem>"
    },
    "source": "uui-components/src/layout/Tree.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "UsePickerInputProps",
     "nameFull": "UsePickerInputProps<TItem, TId, TProps>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "UsePickerListProps",
     "nameFull": "UsePickerListProps<TItem, TId, TProps>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "UsePickerModalProps",
     "nameFull": "UsePickerModalProps<TItem, TId>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ViewType",
     "nameFull": "ViewType"
    },
    "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "VirtualListProps",
     "nameFull": "VirtualListProps<List, ScrollContainer>"
    },
    "source": "uui-components/src/layout/VirtualList.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "VirtualListRenderRowsParams",
     "nameFull": "VirtualListRenderRowsParams<List>"
    },
    "source": "uui-components/src/layout/VirtualList.tsx"
   },
   {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "YearSelectionProps",
     "nameFull": "YearSelectionProps"
    },
    "source": "uui-components/src/inputs/DatePicker/YearSelection.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "AccordionMods",
     "nameFull": "AccordionMods"
    },
    "source": "uui/components/layout/Accordion.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "AlertProps",
     "nameFull": "AlertProps"
    },
    "source": "uui/components/overlays/Alert.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BadgeColor",
     "nameFull": "BadgeColor"
    },
    "source": "uui/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BadgeFill",
     "nameFull": "BadgeFill"
    },
    "source": "uui/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BadgeMods",
     "nameFull": "BadgeMods"
    },
    "source": "uui/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BadgeProps",
     "nameFull": "BadgeProps"
    },
    "source": "uui/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BadgeSize",
     "nameFull": "BadgeSize"
    },
    "source": "uui/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BurgerButtonMods",
     "nameFull": "BurgerButtonMods"
    },
    "source": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BurgerGroupHeaderProps",
     "nameFull": "BurgerGroupHeaderProps"
    },
    "source": "uui/components/navigation/MainMenu/Burger/BurgerGroupHeader.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BurgerMods",
     "nameFull": "BurgerMods"
    },
    "source": "uui/components/navigation/MainMenu/Burger/Burger.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "BurgerSearchProps",
     "nameFull": "BurgerSearchProps"
    },
    "source": "uui/components/navigation/MainMenu/Burger/BurgerSearch.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ButtonColor",
     "nameFull": "ButtonColor"
    },
    "source": "uui/components/buttons/Button/Button.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ButtonMode",
     "nameFull": "ButtonMode"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ButtonMods",
     "nameFull": "ButtonMods"
    },
    "source": "uui/components/buttons/Button/Button.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ButtonProps",
     "nameFull": "ButtonProps"
    },
    "source": "uui/components/buttons/Button/Button.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ButtonSemanticColor",
     "nameFull": "ButtonSemanticColor"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "CheckboxMods",
     "nameFull": "CheckboxMods"
    },
    "source": "uui/components/inputs/Checkbox.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "CheckboxProps",
     "nameFull": "CheckboxProps"
    },
    "source": "uui/components/inputs/Checkbox.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ColorMod",
     "nameFull": "ColorMod"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ColumnsConfigurationModalProps",
     "nameFull": "ColumnsConfigurationModalProps<TItem, TId, TFilter>"
    },
    "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ConfirmationModalWindowProps",
     "nameFull": "ConfirmationModalWindowProps"
    },
    "source": "uui/components/overlays/ConfirmationModal.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ControlSize",
     "nameFull": "ControlSize"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataPickerBodyProps",
     "nameFull": "DataPickerBodyProps"
    },
    "source": "uui/components/pickers/DataPickerBody.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataPickerRowProps",
     "nameFull": "DataPickerRowProps<TItem, TId>"
    },
    "source": "uui/components/pickers/DataPickerRow.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataRowsContainerProps",
     "nameFull": "DataRowsContainerProps<TItem, TId, List>"
    },
    "source": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableCellMods",
     "nameFull": "DataTableCellMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableHeaderCellMods",
     "nameFull": "DataTableHeaderCellMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableHeaderRowMods",
     "nameFull": "DataTableHeaderRowMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableMods",
     "nameFull": "DataTableMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableProps",
     "nameFull": "DataTableProps<TItem, TId, TFilter>"
    },
    "source": "uui/components/tables/DataTable.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableRowMods",
     "nameFull": "DataTableRowMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DatePickerBodyProps",
     "nameFull": "DatePickerBodyProps"
    },
    "source": "uui/components/datePickers/DatePickerBody.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DatePickerProps",
     "nameFull": "DatePickerProps"
    },
    "source": "uui/components/datePickers/DatePicker.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DefaultNotificationProps",
     "nameFull": "DefaultNotificationProps"
    },
    "source": "uui/components/overlays/NotificationCard.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DropdownContainerMods",
     "nameFull": "DropdownContainerMods"
    },
    "source": "uui/components/overlays/DropdownContainer.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DropdownContainerProps",
     "nameFull": "DropdownContainerProps"
    },
    "source": "uui/components/overlays/DropdownContainer.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DropMarkerProps",
     "nameFull": "DropMarkerProps"
    },
    "source": "uui/components/dnd/DropMarker.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "DropSpotProps",
     "nameFull": "DropSpotProps"
    },
    "source": "uui/components/fileUpload/DropSpot.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "EpamBadgeSemanticColor",
     "nameFull": "EpamBadgeSemanticColor"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "FileCardItem",
     "nameFull": "FileCardItem"
    },
    "source": "uui/components/fileUpload/FileCard.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "FileCardProps",
     "nameFull": "FileCardProps"
    },
    "source": "uui/components/fileUpload/FileCard.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "FillStyle",
     "nameFull": "FillStyle"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "FiltersPanelProps",
     "nameFull": "FiltersPanelProps<TFilter>"
    },
    "source": "uui/components/filters/FiltersPanel.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "FlexCellMods",
     "nameFull": "FlexCellMods"
    },
    "source": "uui/components/layout/FlexItems/FlexCell.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "FlexRowProps",
     "nameFull": "FlexRowProps"
    },
    "source": "uui/components/layout/FlexItems/FlexRow.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "FontStyle",
     "nameFull": "FontStyle"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "GlobalMenuProps",
     "nameFull": "GlobalMenuProps"
    },
    "source": "uui/components/navigation/MainMenu/GlobalMenu.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "HighlightRange",
     "nameFull": "HighlightRange"
    },
    "source": "uui/components/pickers/highlight.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "IconButtonMods",
     "nameFull": "IconButtonMods"
    },
    "source": "uui/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "IconButtonProps",
     "nameFull": "IconButtonProps"
    },
    "source": "uui/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "IconColor",
     "nameFull": "IconColor"
    },
    "source": "uui/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "IDropdownMenuContainer",
     "nameFull": "IDropdownMenuContainer"
    },
    "source": "uui/components/overlays/DropdownMenu.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "IDropdownMenuItemProps",
     "nameFull": "IDropdownMenuItemProps"
    },
    "source": "uui/components/overlays/DropdownMenu.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "IHasEditMode",
     "nameFull": "IHasEditMode"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "IndeterminateBarMods",
     "nameFull": "IndeterminateBarMods"
    },
    "source": "uui/components/widgets/IndeterminateBar.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "InputType",
     "nameFull": "InputType"
    },
    "source": "uui/components/datePickers/RangeDatePicker.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ITextPlaceholderProps",
     "nameFull": "ITextPlaceholderProps"
    },
    "source": "uui/components/typography/TextPlaceholder.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "LabeledInputMods",
     "nameFull": "LabeledInputMods"
    },
    "source": "uui/components/layout/LabeledInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "LinkButtonColorType",
     "nameFull": "LinkButtonColorType"
    },
    "source": "uui/components/buttons/LinkButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "LinkButtonMods",
     "nameFull": "LinkButtonMods"
    },
    "source": "uui/components/buttons/LinkButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "LinkButtonProps",
     "nameFull": "LinkButtonProps"
    },
    "source": "uui/components/buttons/LinkButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuAvatarProps",
     "nameFull": "MainMenuAvatarProps"
    },
    "source": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuButtonMods",
     "nameFull": "MainMenuButtonMods"
    },
    "source": "uui/components/navigation/MainMenu/MainMenuButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuIconProps",
     "nameFull": "MainMenuIconProps"
    },
    "source": "uui/components/navigation/MainMenu/MainMenuIcon.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuMods",
     "nameFull": "MainMenuMods"
    },
    "source": "uui/components/navigation/MainMenu/MainMenu.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuSearchProps",
     "nameFull": "MainMenuSearchProps"
    },
    "source": "uui/components/navigation/MainMenu/MainMenuSearch.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ModalFooterProps",
     "nameFull": "ModalFooterProps"
    },
    "source": "uui/components/overlays/Modals.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ModalHeaderProps",
     "nameFull": "ModalHeaderProps"
    },
    "source": "uui/components/overlays/Modals.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ModalWindowMods",
     "nameFull": "ModalWindowMods"
    },
    "source": "uui/components/overlays/Modals.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ModalWindowProps",
     "nameFull": "ModalWindowProps"
    },
    "source": "uui/components/overlays/Modals.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "MultiSwitchProps",
     "nameFull": "MultiSwitchProps<TValue>"
    },
    "source": "uui/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "NotificationCardProps",
     "nameFull": "NotificationCardProps"
    },
    "source": "uui/components/overlays/NotificationCard.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "NumericInputMods",
     "nameFull": "NumericInputMods"
    },
    "source": "uui/components/inputs/NumericInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "NumericInputProps",
     "nameFull": "NumericInputProps"
    },
    "source": "uui/components/inputs/NumericInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PanelMods",
     "nameFull": "PanelMods"
    },
    "source": "uui/components/layout/FlexItems/Panel.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerInputProps",
     "nameFull": "PickerInputProps"
    },
    "source": "uui/components/pickers/PickerInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerItemProps",
     "nameFull": "PickerItemProps<TItem, TId>"
    },
    "source": "uui/components/pickers/PickerItem.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerListItemProps",
     "nameFull": "PickerListItemProps<TItem, TId>"
    },
    "source": "uui/components/pickers/PickerListItem.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerListProps",
     "nameFull": "PickerListProps<TItem, TId>"
    },
    "source": "uui/components/pickers/PickerList.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerModalProps",
     "nameFull": "PickerModalProps<TItem, TId>"
    },
    "source": "uui/components/pickers/PickerModal.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "pickerPart",
     "nameFull": "pickerPart"
    },
    "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerTogglerMods",
     "nameFull": "PickerTogglerMods"
    },
    "source": "uui/components/pickers/PickerToggler.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "PresetsPanelProps",
     "nameFull": "PresetsPanelProps"
    },
    "source": "uui/components/filters/PresetPanel/PresetsPanel.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "ProgressBarMods",
     "nameFull": "ProgressBarMods"
    },
    "source": "uui/components/widgets/ProgressBar.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RadioInputMods",
     "nameFull": "RadioInputMods"
    },
    "source": "uui/components/inputs/RadioInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RadioInputProps",
     "nameFull": "RadioInputProps"
    },
    "source": "uui/components/inputs/RadioInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RangeDatePickerBodyProps",
     "nameFull": "RangeDatePickerBodyProps<T>"
    },
    "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RangeDatePickerProps",
     "nameFull": "RangeDatePickerProps"
    },
    "source": "uui/components/datePickers/RangeDatePicker.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RangeDatePickerValue",
     "nameFull": "RangeDatePickerValue"
    },
    "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RichTextViewMods",
     "nameFull": "RichTextViewMods"
    },
    "source": "uui/components/typography/RichTextView.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RowMods",
     "nameFull": "RowMods"
    },
    "source": "uui/components/layout/FlexItems/FlexRow.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RowSize",
     "nameFull": "RowSize"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "RowSizeMod",
     "nameFull": "RowSizeMod"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "SemanticColor",
     "nameFull": "SemanticColor"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "SizeMod",
     "nameFull": "SizeMod"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "SpinnerProps",
     "nameFull": "SpinnerProps"
    },
    "source": "uui/components/widgets/Spinner.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "SwitchMods",
     "nameFull": "SwitchMods"
    },
    "source": "uui/components/inputs/Switch.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TabButtonMods",
     "nameFull": "TabButtonMods"
    },
    "source": "uui/components/buttons/TabButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TabButtonProps",
     "nameFull": "TabButtonProps"
    },
    "source": "uui/components/buttons/TabButton.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TagMods",
     "nameFull": "TagMods"
    },
    "source": "uui/components/widgets/Tag.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TagProps",
     "nameFull": "TagProps"
    },
    "source": "uui/components/widgets/Tag.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TagSize",
     "nameFull": "TagSize"
    },
    "source": "uui/components/widgets/Tag.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextAreaMods",
     "nameFull": "TextAreaMods"
    },
    "source": "uui/components/inputs/TextArea.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextAreaProps",
     "nameFull": "TextAreaProps"
    },
    "source": "uui/components/inputs/TextArea.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextInputMods",
     "nameFull": "TextInputMods"
    },
    "source": "uui/components/inputs/TextInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextInputProps",
     "nameFull": "TextInputProps"
    },
    "source": "uui/components/inputs/TextInput.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextMods",
     "nameFull": "TextMods"
    },
    "source": "uui/components/typography/Text.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextPlaceholderProps",
     "nameFull": "TextPlaceholderProps"
    },
    "source": "uui/components/typography/TextPlaceholder.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextProps",
     "nameFull": "TextProps"
    },
    "source": "uui/components/typography/Text.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextSettings",
     "nameFull": "TextSettings"
    },
    "source": "uui/helpers/textLayout.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextSize",
     "nameFull": "TextSize"
    },
    "source": "uui/components/types.ts"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TimePickerProps",
     "nameFull": "TimePickerProps"
    },
    "source": "uui/components/inputs/TimePicker.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TooltipMods",
     "nameFull": "TooltipMods"
    },
    "source": "uui/components/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TooltipProps",
     "nameFull": "TooltipProps"
    },
    "source": "uui/components/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "UuiMultiSwitchColor",
     "nameFull": "UuiMultiSwitchColor"
    },
    "source": "uui/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "VerticalTabButtonProps",
     "nameFull": "VerticalTabButtonProps"
    },
    "source": "uui/components/buttons/VerticalTabButton.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "AlertMods",
     "nameFull": "AlertMods"
    },
    "source": "epam-promo/components/overlays/Alert.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "AlertProps",
     "nameFull": "AlertProps"
    },
    "source": "epam-promo/components/overlays/Alert.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "BadgeMods",
     "nameFull": "BadgeMods"
    },
    "source": "epam-promo/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "BadgeProps",
     "nameFull": "BadgeProps"
    },
    "source": "epam-promo/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ButtonColor",
     "nameFull": "ButtonColor"
    },
    "source": "epam-promo/components/buttons/Button.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ButtonMods",
     "nameFull": "ButtonMods"
    },
    "source": "epam-promo/components/buttons/Button.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ButtonProps",
     "nameFull": "ButtonProps"
    },
    "source": "epam-promo/components/buttons/Button.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ColorMod",
     "nameFull": "ColorMod"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ControlShape",
     "nameFull": "ControlShape"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ControlSize",
     "nameFull": "ControlSize"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "DropdownContainerMods",
     "nameFull": "DropdownContainerMods"
    },
    "source": "epam-promo/components/overlays/DropdownContainer.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "EpamAdditionalColor",
     "nameFull": "EpamAdditionalColor"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "EpamColor",
     "nameFull": "EpamColor"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "EpamGrayscaleColor",
     "nameFull": "EpamGrayscaleColor"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "EpamPrimaryColor",
     "nameFull": "EpamPrimaryColor"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ErrorHandlerProps",
     "nameFull": "ErrorHandlerProps"
    },
    "source": "epam-promo/components/errors/ErrorHandler.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "FillStyle",
     "nameFull": "FillStyle"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "FontMod",
     "nameFull": "FontMod"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "FontStyle",
     "nameFull": "FontStyle"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "IconButtonMods",
     "nameFull": "IconButtonMods"
    },
    "source": "epam-promo/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "IconButtonProps",
     "nameFull": "IconButtonProps"
    },
    "source": "epam-promo/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "IconColor",
     "nameFull": "IconColor"
    },
    "source": "epam-promo/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "IconContainerColors",
     "nameFull": "IconContainerColors"
    },
    "source": "epam-promo/components/layout/IconContainer.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "IconContainerMods",
     "nameFull": "IconContainerMods"
    },
    "source": "epam-promo/components/layout/IconContainer.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "IHasEditMode",
     "nameFull": "IHasEditMode"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "LinkButtonMods",
     "nameFull": "LinkButtonMods"
    },
    "source": "epam-promo/components/buttons/LinkButton.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "LinkButtonProps",
     "nameFull": "LinkButtonProps"
    },
    "source": "epam-promo/components/buttons/LinkButton.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ModalWindowMods",
     "nameFull": "ModalWindowMods"
    },
    "source": "epam-promo/components/overlays/ModalWindow.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "MultiSwitchColor",
     "nameFull": "MultiSwitchColor"
    },
    "source": "epam-promo/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "MultiSwitchMods",
     "nameFull": "MultiSwitchMods"
    },
    "source": "epam-promo/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "MultiSwitchProps",
     "nameFull": "MultiSwitchProps<TValue>"
    },
    "source": "epam-promo/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "NotificationCardMods",
     "nameFull": "NotificationCardMods"
    },
    "source": "epam-promo/components/overlays/NotificationCard.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "NotificationCardProps",
     "nameFull": "NotificationCardProps"
    },
    "source": "epam-promo/components/overlays/NotificationCard.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "PanelMods",
     "nameFull": "PanelMods"
    },
    "source": "epam-promo/components/layout/FlexItems/Panel.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "RatingMods",
     "nameFull": "RatingMods"
    },
    "source": "epam-promo/components/inputs/Rating.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "RichTextViewMods",
     "nameFull": "RichTextViewMods"
    },
    "source": "epam-promo/components/typography/RichTextView.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "RowMods",
     "nameFull": "RowMods"
    },
    "source": "epam-promo/components/layout/FlexItems/FlexRow.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "RowSize",
     "nameFull": "RowSize"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "RowSizeMod",
     "nameFull": "RowSizeMod"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "ScrollBarsMods",
     "nameFull": "ScrollBarsMods"
    },
    "source": "epam-promo/components/layout/ScrollBars.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "SizeMod",
     "nameFull": "SizeMod"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "SliderMods",
     "nameFull": "SliderMods"
    },
    "source": "epam-promo/components/inputs/Slider/Slider.tsx"
   },
   {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextInputProps",
     "nameFull": "TextInputProps"
    },
    "source": "uui/components/inputs/TextInput.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "TextMods",
     "nameFull": "TextMods"
    },
    "source": "epam-promo/components/typography/Text.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "TextProps",
     "nameFull": "TextProps"
    },
    "source": "epam-promo/components/typography/Text.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "TextSize",
     "nameFull": "TextSize"
    },
    "source": "epam-promo/components/types.ts"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "TooltipMods",
     "nameFull": "TooltipMods"
    },
    "source": "epam-promo/components/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "TooltipProps",
     "nameFull": "TooltipProps"
    },
    "source": "epam-promo/components/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/promo",
    "typeName": {
     "name": "VirtualListMods",
     "nameFull": "VirtualListMods"
    },
    "source": "epam-promo/components/layout/VirtualList.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "AlertMods",
     "nameFull": "AlertMods"
    },
    "source": "loveship/components/overlays/Alert.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "AlertProps",
     "nameFull": "AlertProps"
    },
    "source": "loveship/components/overlays/Alert.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "BadgeMods",
     "nameFull": "BadgeMods"
    },
    "source": "loveship/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "BadgeProps",
     "nameFull": "BadgeProps"
    },
    "source": "loveship/components/widgets/Badge.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ButtonColorType",
     "nameFull": "ButtonColorType"
    },
    "source": "loveship/components/buttons/Button.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ButtonMods",
     "nameFull": "ButtonMods"
    },
    "source": "loveship/components/buttons/Button.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ButtonProps",
     "nameFull": "ButtonProps"
    },
    "source": "loveship/components/buttons/Button.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "CheckboxMods",
     "nameFull": "CheckboxMods"
    },
    "source": "loveship/components/inputs/Checkbox.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ColorMod",
     "nameFull": "ColorMod"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ControlShape",
     "nameFull": "ControlShape"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ControlSize",
     "nameFull": "ControlSize"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "DropdownContainerMods",
     "nameFull": "DropdownContainerMods"
    },
    "source": "loveship/components/overlays/DropdownContainer.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "EditMode",
     "nameFull": "EditMode"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "EpamAdditionalColor",
     "nameFull": "EpamAdditionalColor"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "EpamColor",
     "nameFull": "EpamColor"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "EpamGrayscaleColor",
     "nameFull": "EpamGrayscaleColor"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "EpamPrimaryColor",
     "nameFull": "EpamPrimaryColor"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ErrorConfig",
     "nameFull": "ErrorConfig"
    },
    "source": "loveship/components/app/ErrorHandler.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ErrorPageProps",
     "nameFull": "ErrorPageProps"
    },
    "source": "loveship/components/app/ErrorHandler.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "FillStyle",
     "nameFull": "FillStyle"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "FontMod",
     "nameFull": "FontMod"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "FontStyle",
     "nameFull": "FontStyle"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "IconButtonMods",
     "nameFull": "IconButtonMods"
    },
    "source": "loveship/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "IconButtonProps",
     "nameFull": "IconButtonProps"
    },
    "source": "loveship/components/buttons/IconButton.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "IconContainerMods",
     "nameFull": "IconContainerMods"
    },
    "source": "loveship/components/layout/IconContainer.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "LinkButtonMods",
     "nameFull": "LinkButtonMods"
    },
    "source": "loveship/components/buttons/LinkButton.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "LinkButtonProps",
     "nameFull": "LinkButtonProps"
    },
    "source": "loveship/components/buttons/LinkButton.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MakeMeItemProps",
     "nameFull": "MakeMeItemProps"
    },
    "source": "loveship/components/dev/MakeMeItem.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MakeMeUser",
     "nameFull": "MakeMeUser"
    },
    "source": "loveship/components/dev/MakeMeItem.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ModalWindowMods",
     "nameFull": "ModalWindowMods"
    },
    "source": "loveship/components/overlays/ModalWindow.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MultiSwitchColor",
     "nameFull": "MultiSwitchColor"
    },
    "source": "loveship/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MultiSwitchMods",
     "nameFull": "MultiSwitchMods"
    },
    "source": "loveship/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MultiSwitchProps",
     "nameFull": "MultiSwitchProps<TValue>"
    },
    "source": "loveship/components/inputs/MultiSwitch.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "NotificationCardMods",
     "nameFull": "NotificationCardMods"
    },
    "source": "loveship/components/overlays/NotificationCard.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "NotificationCardProps",
     "nameFull": "NotificationCardProps"
    },
    "source": "loveship/components/overlays/NotificationCard.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "PanelMods",
     "nameFull": "PanelMods"
    },
    "source": "loveship/components/layout/FlexItems/Panel.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RadioInputMods",
     "nameFull": "RadioInputMods"
    },
    "source": "loveship/components/inputs/RadioInput.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RadioInputProps",
     "nameFull": "RadioInputProps"
    },
    "source": "loveship/components/inputs/RadioInput.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RangeSliderMods",
     "nameFull": "RangeSliderMods"
    },
    "source": "loveship/components/inputs/Slider/RangeSlider.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RatingMods",
     "nameFull": "RatingMods"
    },
    "source": "loveship/components/inputs/Rating.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RichTextViewMods",
     "nameFull": "RichTextViewMods"
    },
    "source": "loveship/components/typography/RichTextView.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RowMods",
     "nameFull": "RowMods"
    },
    "source": "loveship/components/layout/FlexItems/FlexRow.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RowSize",
     "nameFull": "RowSize"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RowSizeMod",
     "nameFull": "RowSizeMod"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ScrollBarsMods",
     "nameFull": "ScrollBarsMods"
    },
    "source": "loveship/components/layout/ScrollBars.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "SizeMod",
     "nameFull": "SizeMod"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "SliderRatingProps",
     "nameFull": "SliderRatingProps<TValue>"
    },
    "source": "loveship/components/inputs/SliderRating.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "SnackbarCardProps",
     "nameFull": "SnackbarCardProps"
    },
    "source": "loveship/components/overlays/SnackbarCard.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TabButtonMods",
     "nameFull": "TabButtonMods"
    },
    "source": "loveship/components/buttons/TabButton.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TagMods",
     "nameFull": "TagMods"
    },
    "source": "loveship/components/widgets/Tag.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TextInputMods",
     "nameFull": "TextInputMods"
    },
    "source": "loveship/components/inputs/TextInput.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TextMods",
     "nameFull": "TextMods"
    },
    "source": "loveship/components/typography/Text.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TextProps",
     "nameFull": "TextProps"
    },
    "source": "loveship/components/typography/Text.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TextSize",
     "nameFull": "TextSize"
    },
    "source": "loveship/components/types.ts"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TooltipMods",
     "nameFull": "TooltipMods"
    },
    "source": "loveship/components/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TooltipProps",
     "nameFull": "TooltipProps"
    },
    "source": "loveship/components/overlays/Tooltip.tsx"
   },
   {
    "module": "@epam/loveship",
    "typeName": {
     "name": "VirtualListMods",
     "nameFull": "VirtualListMods"
    },
    "source": "loveship/components/layout/VirtualList.tsx"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "EditorValue",
     "nameFull": "EditorValue"
    },
    "source": "uui-editor/src/types.ts"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "IImageElement",
     "nameFull": "IImageElement"
    },
    "source": "uui-editor/src/types.ts"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "LinkElement",
     "nameFull": "LinkElement"
    },
    "source": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "PlaceholderPluginParams",
     "nameFull": "PlaceholderPluginParams"
    },
    "source": "uui-editor/src/plugins/placeholderPlugin/placeholderPlugin.tsx"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "PlateImgAlign",
     "nameFull": "PlateImgAlign"
    },
    "source": "uui-editor/src/types.ts"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "PlateProps",
     "nameFull": "PlateProps"
    },
    "source": "uui-editor/src/types.ts"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "SlateImageSize",
     "nameFull": "SlateImageSize"
    },
    "source": "uui-editor/src/types.ts"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "SlateImgAlign",
     "nameFull": "SlateImgAlign"
    },
    "source": "uui-editor/src/types.ts"
   },
   {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "SlateProps",
     "nameFull": "SlateProps"
    },
    "source": "uui-editor/src/types.ts"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "BaseTimelineCanvasComponentProps",
     "nameFull": "BaseTimelineCanvasComponentProps"
    },
    "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "Item",
     "nameFull": "Item"
    },
    "source": "uui-timeline/src/renderBars.ts"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "Stage",
     "nameFull": "Stage"
    },
    "source": "uui-timeline/src/TimelineEventsBar.tsx"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineControllerOptions",
     "nameFull": "TimelineControllerOptions"
    },
    "source": "uui-timeline/src/TimelineController.ts"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineEventsBarProps",
     "nameFull": "TimelineEventsBarProps"
    },
    "source": "uui-timeline/src/TimelineEventsBar.tsx"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineGridProps",
     "nameFull": "TimelineGridProps"
    },
    "source": "uui-timeline/src/TimelineGrid.tsx"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineNavProps",
     "nameFull": "TimelineNavProps"
    },
    "source": "uui-timeline/src/TimelineNav.tsx"
   },
   {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineScaleProps",
     "nameFull": "TimelineScaleProps"
    },
    "source": "uui-timeline/src/TimelineScale.tsx"
   }
  ]
 },
 "ignoredExports": {
  "totals": {
   "allExports": 740,
   "byModule": {
    "@epam/uui-core": 133,
    "@epam/uui-components": 106,
    "@epam/uui": 148,
    "@epam/promo": 127,
    "@epam/loveship": 139,
    "@epam/uui-editor": 62,
    "@epam/uui-timeline": 25
   }
  },
  "value": {
   "@epam/uui-core": {
    "ClassDeclaration": [
     "AnalyticsContext",
     "ApiCallError",
     "ApiContext",
     "ArrayDataSource",
     "ArrayListView",
     "AsyncDataSource",
     "AsyncListView",
     "BaseDataSource",
     "BaseListView",
     "Debouncer",
     "DndActor",
     "DndContext",
     "DragGhost",
     "ErrorContext",
     "GAListener",
     "HistoryAdaptedRouter",
     "LayoutContext",
     "LazyDataSource",
     "LazyListView",
     "LazyLoadedMap",
     "ListApiCache",
     "Lock",
     "LockContext",
     "ModalContext",
     "ModalOperationCancelled",
     "NextRouterAdapter",
     "NotificationContext",
     "Router6AdaptedRouter",
     "SkinContext",
     "StubAdaptedRouter",
     "Tree",
     "UuiError"
    ],
    "VariableDeclaration": [
     "applyColumnsConfig",
     "blankValidationState",
     "CascadeSelectionTypes",
     "clearEmptyValueFromRecord",
     "cx",
     "devLogger",
     "directionMode",
     "FAILED",
     "forwardRef",
     "getCalculatedValue",
     "getColumnsConfig",
     "getDecimalLength",
     "getMinMaxValidatedValue",
     "getSeparatedValue",
     "i18n",
     "IEditableDebouncer",
     "isClientSide",
     "isMobile",
     "labelMod",
     "Lens",
     "LOADED",
     "LOADING",
     "maxOrderStr",
     "minOrderStr",
     "mobilePopperModifier",
     "NOT_FOUND_RECORD",
     "parseIconViewbox",
     "PENDING",
     "queryToSearch",
     "ROOT_ID",
     "searchToQuery",
     "Stateful",
     "UNKNOWN",
     "urlParser",
     "useAppMobileHeight",
     "useColumnsConfig",
     "useForceUpdate",
     "useLayer",
     "useLayoutEffectSafeForSsr",
     "useTableState",
     "useTableStateImpl",
     "useUuiError",
     "useUuiServices",
     "UuiContext",
     "uuiContextTypes",
     "uuiDataTableHeaderCell",
     "uuiDndState",
     "uuiElement",
     "uuiMarkers",
     "uuiMod",
     "uuiScrollShadows",
     "uuiSkin",
     "validate"
    ],
    "FunctionDeclaration": [
     "arrayToMatrix",
     "batch",
     "blurFocusedElement",
     "closestTargetParentByCondition",
     "ContextProvider",
     "deleteCookie",
     "Form",
     "formatBytes",
     "getBeforeUnloadSingletone",
     "getBrowser",
     "getCookie",
     "getFilterPredicate",
     "getOffset",
     "getOrderBetween",
     "getOrderComparer",
     "getRouter6BlockFn",
     "getScreenSize",
     "getScrollParentOfEventTarget",
     "getSearchFilter",
     "handleSpaceKey",
     "isAnyParentHasClass",
     "isEventTargetInsideClickable",
     "isEventTargetInsideDraggable",
     "isEventTargetInsideInput",
     "isFocusReceiverInsideFocusLock",
     "isUrl",
     "mergeValidation",
     "parseStringToCSSProperties",
     "prependHttp",
     "preventDefaultIfTargetFocused",
     "releasePointerCaptureOnEventTarget",
     "runDataQuery",
     "setCookie",
     "simplifyPredicates",
     "skinComponent",
     "useArrayDataSource",
     "useAsyncDataSource",
     "useForm",
     "useLazyDataSource",
     "useList",
     "usePrevious",
     "useScrollShadows",
     "useUuiContext",
     "useUuiServicesSsr",
     "useVirtualList",
     "validateServerErrorState",
     "withMods"
    ],
    "EnumDeclaration": [
     "Browser"
    ]
   },
   "@epam/uui-components": {
    "ClassDeclaration": [
     "Accordion",
     "AnchorImpl",
     "BaseDatePicker",
     "BaseRangeDatePicker",
     "BaseRating",
     "BaseTimePicker",
     "Blocker",
     "Burger",
     "Button",
     "ButtonBase",
     "Calendar",
     "CalendarPresets",
     "Carousel",
     "Checkbox",
     "CheckboxGroup",
     "ControlGroup",
     "DataPickerRow",
     "DataTableHeaderCell",
     "DataTableHeaderRow",
     "DatePickerBodyBase",
     "Day",
     "DragHandle",
     "Dropdown",
     "DropSpot",
     "ErrorCatch",
     "IconButton",
     "InputAddon",
     "LabeledInput",
     "MainMenu",
     "MainMenuCustomElement",
     "MainMenuLogo",
     "ModalBlocker",
     "Modals",
     "ModalWindow",
     "MonthSelection",
     "Paginator",
     "PickerBodyBase",
     "RadioGroup",
     "RadioInput",
     "RangeSlider",
     "Rating",
     "RichTextView",
     "Slider",
     "SliderBase",
     "Snackbar",
     "Spinner",
     "Switch",
     "Text",
     "TextArea",
     "TimePickerBody",
     "UploadFileToggler",
     "VPanel",
     "YearSelection"
    ],
    "FunctionDeclaration": [
     "AdaptivePanel",
     "applyValueToDataSourceState",
     "dataSourceStateToValue",
     "DataTableCell",
     "DataTableSelectionProvider",
     "FlexSpacer",
     "NumericInput",
     "PortalRoot",
     "ScrollSpy",
     "Tooltip",
     "Tree",
     "useColumnsConfiguration",
     "usePicker",
     "usePickerInput",
     "usePickerList",
     "usePickerModal",
     "useScrollSpy"
    ],
    "VariableDeclaration": [
     "Anchor",
     "Avatar",
     "AvatarStack",
     "DataTableRow",
     "DataTableSelectionContext",
     "defaultFormat",
     "DropdownContainer",
     "FlexCell",
     "FlexRow",
     "handleDataSourceKeyboard",
     "i18n",
     "IconContainer",
     "PickerToggler",
     "Portal",
     "ProgressBar",
     "ScrollBars",
     "supportedDateFormats",
     "Svg",
     "TextInput",
     "toCustomDateFormat",
     "toCustomDateRangeFormat",
     "toValueDateFormat",
     "toValueDateRangeFormat",
     "uuiBurger",
     "uuiDatePickerBodyBase",
     "uuiDaySelection",
     "uuiInputElements",
     "uuiMainMenu",
     "uuiMonthSelection",
     "uuiNumericInput",
     "uuiPresets",
     "uuiSlider",
     "uuiTimePicker",
     "uuiYearSelection",
     "valueFormat",
     "VirtualList"
    ]
   },
   "@epam/uui": {
    "VariableDeclaration": [
     "Accordion",
     "Alert",
     "allButtonColors",
     "allButtonModes",
     "allButtonSemanticColors",
     "allEpamBadgeSemanticColors",
     "allFillStyles",
     "allFontStyles",
     "allIconColors",
     "allLinkButtonColors",
     "allRowSizes",
     "allSemanticColors",
     "allSizes",
     "allTextSizes",
     "Anchor",
     "Avatar",
     "AvatarStack",
     "Badge",
     "Blocker",
     "Burger",
     "BurgerButton",
     "Button",
     "Calendar",
     "Checkbox",
     "CheckboxGroup",
     "ColumnHeaderDropdown",
     "ControlGroup",
     "DataPickerFooter",
     "DataPickerHeader",
     "DataTableHeaderRow",
     "DataTableRow",
     "defaultPredicates",
     "DropdownContainer",
     "DropdownMenuBody",
     "DropdownMenuButton",
     "ErrorAlert",
     "ErrorNotification",
     "FileCard",
     "FiltersPanel",
     "FlexCell",
     "FlexRow",
     "getHighlightedSearchMatches",
     "getHighlightRanges",
     "GlobalMenu",
     "HintAlert",
     "HintNotification",
     "i18n",
     "IconButton",
     "IconContainer",
     "IndeterminateBar",
     "IndicatorBar",
     "InputAddon",
     "LabeledInput",
     "LinkButton",
     "MainMenu",
     "MainMenuAvatar",
     "MainMenuButton",
     "MainMenuIcon",
     "MainMenuSearch",
     "MobileDropdownWrapper",
     "ModalBlocker",
     "ModalWindow",
     "MultiSwitch",
     "NotificationCard",
     "NumericInput",
     "Panel",
     "PickerToggler",
     "ProgressBar",
     "propsMods",
     "RadioGroup",
     "RadioInput",
     "rangeDatePickerPresets",
     "renderCell",
     "renderDropMarkers",
     "RichTextView",
     "ScrollBars",
     "SearchInput",
     "Spinner",
     "SuccessAlert",
     "SuccessNotification",
     "SvgCircleProgress",
     "Switch",
     "TabButton",
     "Tag",
     "Text",
     "TextArea",
     "TextInput",
     "TextPlaceholder",
     "Tooltip",
     "useColumnsWithFilters",
     "uuiDatePickerBody",
     "VerticalTabButton",
     "VirtualList",
     "WarningAlert",
     "WarningNotification"
    ],
    "FunctionDeclaration": [
     "applyBadgeMods",
     "applyButtonMods",
     "applyCheckboxMods",
     "applyDateSelectionMods",
     "applyInputAddonMods",
     "applyNumericInputMods",
     "applyProgressBarMods",
     "applySpinnerMods",
     "applySwitchMods",
     "applyTagMods",
     "applyTextAreaMods",
     "applyTextInputMods",
     "BurgerGroupHeader",
     "BurgerSearch",
     "ColumnsConfigurationModal",
     "DataRowsContainer",
     "DataTable",
     "DataTableCell",
     "Dropdown",
     "DropdownMenuHeader",
     "DropdownMenuSplitter",
     "DropdownMenuSwitchButton",
     "DropdownSubMenu",
     "DropMarker",
     "FilterItemBody",
     "FlexSpacer",
     "Form",
     "getTextClasses",
     "Paginator",
     "PickerInput",
     "PickerList",
     "PickerListItem",
     "PickerModal",
     "PresetsPanel",
     "useForm",
     "weekCount"
    ],
    "ClassDeclaration": [
     "ClearNotification",
     "ConfirmationModal",
     "DataPickerBody",
     "DataPickerRow",
     "DataTableHeaderCell",
     "DatePicker",
     "DatePickerBody",
     "DropSpot",
     "MainMenuDropdown",
     "ModalFooter",
     "ModalHeader",
     "PickerItem",
     "RangeDatePicker",
     "RangeDatePickerBody",
     "TimePicker"
    ],
    "EnumDeclaration": [
     "EditMode",
     "IDropdownControlKeys"
    ]
   },
   "@epam/promo": {
    "VariableDeclaration": [
     "Accordion",
     "Alert",
     "allBorderStyles",
     "allEpamAdditionalColors",
     "allEpamGrayscaleColors",
     "allEpamPrimaryColors",
     "allFillStyles",
     "allFontStyles",
     "allIconColors",
     "allIconContainerColors",
     "allRowSizes",
     "allSizes",
     "allTextSizes",
     "Anchor",
     "Avatar",
     "AvatarStack",
     "Badge",
     "Blocker",
     "Burger",
     "BurgerButton",
     "Button",
     "Calendar",
     "Checkbox",
     "CheckboxGroup",
     "commonControlColors",
     "ControlGroup",
     "ControlWrapper",
     "DataPickerFooter",
     "DataTableHeaderRow",
     "DataTableRow",
     "defaultPredicates",
     "DropdownContainer",
     "DropdownMenuBody",
     "DropdownMenuButton",
     "ErrorAlert",
     "ErrorNotification",
     "ErrorPage",
     "FileCard",
     "FiltersPanel",
     "FlexCell",
     "FlexRow",
     "getErrorPageConfig",
     "getRecoveryMessageConfig",
     "GlobalMenu",
     "HintAlert",
     "HintNotification",
     "i18n",
     "IconButton",
     "IconContainer",
     "IndeterminateBar",
     "IndicatorBar",
     "LabeledInput",
     "LinkButton",
     "MainMenu",
     "MainMenuAvatar",
     "MainMenuButton",
     "MainMenuIcon",
     "MainMenuSearch",
     "ModalBlocker",
     "ModalWindow",
     "MultiSwitch",
     "NotificationCard",
     "NumericInput",
     "Panel",
     "PickerToggler",
     "ProgressBar",
     "RadioGroup",
     "RadioInput",
     "Rating",
     "RichTextView",
     "ScrollBars",
     "SearchInput",
     "skinContext",
     "Slider",
     "Spinner",
     "SuccessAlert",
     "SuccessNotification",
     "SvgCircleProgress",
     "Switch",
     "TabButton",
     "Tag",
     "Text",
     "TextArea",
     "TextInput",
     "TextPlaceholder",
     "Tooltip",
     "VerticalTabButton",
     "VirtualList",
     "WarningAlert",
     "WarningNotification"
    ],
    "FunctionDeclaration": [
     "applyDropdownContainerMods",
     "applyIconContainerMods",
     "applySliderMods",
     "BurgerSearch",
     "ColumnsConfigurationModal",
     "DataTable",
     "DataTableCell",
     "Dropdown",
     "DropdownMenuHeader",
     "DropdownMenuSplitter",
     "DropdownMenuSwitchButton",
     "DropdownSubMenu",
     "DropMarker",
     "ErrorHandler",
     "FlexSpacer",
     "Form",
     "Paginator",
     "PickerInput",
     "PickerList",
     "PickerModal",
     "PresetsPanel",
     "useForm"
    ],
    "ClassDeclaration": [
     "ClearNotification",
     "ConfirmationModal",
     "DataPickerBody",
     "DataPickerRow",
     "DatePicker",
     "DropSpot",
     "MainMenuCustomElement",
     "MainMenuDropdown",
     "MainMenuLogo",
     "ModalFooter",
     "ModalHeader",
     "PickerItem",
     "RangeDatePicker",
     "TimePicker"
    ],
    "EnumDeclaration": [
     "EditMode"
    ]
   },
   "@epam/loveship": {
    "VariableDeclaration": [
     "Accordion",
     "Alert",
     "allBorderStyles",
     "allEpamAdditionalColors",
     "allEpamGrayscaleColors",
     "allEpamPrimaryColors",
     "allFillStyles",
     "allFontStyles",
     "allRowSizes",
     "allSizes",
     "allTextSizes",
     "Anchor",
     "Avatar",
     "AvatarStack",
     "Badge",
     "Blocker",
     "Burger",
     "BurgerButton",
     "Button",
     "Calendar",
     "Checkbox",
     "CheckboxGroup",
     "commonControlColors",
     "ControlGroup",
     "ControlWrapper",
     "DataPickerFooter",
     "DataTableHeaderRow",
     "DataTableRow",
     "defaultPredicates",
     "DropdownContainer",
     "DropdownMenuBody",
     "DropdownMenuButton",
     "ErrorAlert",
     "ErrorNotification",
     "FileCard",
     "FiltersPanel",
     "FlexCell",
     "FlexRow",
     "getDefaultErrorPageProps",
     "getTextWidth",
     "GlobalMenu",
     "HintAlert",
     "HintNotification",
     "i18n",
     "IconButton",
     "IconContainer",
     "IndeterminateBar",
     "IndicatorBar",
     "LabeledInput",
     "LinkButton",
     "MainMenu",
     "MainMenuAvatar",
     "MainMenuButton",
     "MainMenuIcon",
     "MainMenuSearch",
     "ModalBlocker",
     "ModalWindow",
     "MultiSwitch",
     "NotificationCard",
     "NumericInput",
     "Panel",
     "PickerToggler",
     "ProgressBar",
     "RadioGroup",
     "RadioInput",
     "RangeSlider",
     "Rating",
     "recoveryWordings",
     "RichTextView",
     "ScrollBars",
     "SearchInput",
     "skinContext",
     "Slider",
     "SnackbarCard",
     "Spinner",
     "SuccessAlert",
     "SuccessNotification",
     "SvgCircleProgress",
     "Switch",
     "TabButton",
     "Tag",
     "Text",
     "TextArea",
     "TextInput",
     "TextPlaceholder",
     "Tooltip",
     "VerticalTabButton",
     "VirtualList",
     "WarningAlert",
     "WarningNotification"
    ],
    "FunctionDeclaration": [
     "applyBadgeMods",
     "applyButtonMods",
     "applyCheckboxMods",
     "applyIconContainerMods",
     "applyRangeSliderMods",
     "applySliderMods",
     "applyTagMods",
     "applyTextInputMods",
     "ColumnsConfigurationModal",
     "DataTable",
     "DataTableCell",
     "Dropdown",
     "DropdownMenuHeader",
     "DropdownMenuSplitter",
     "DropdownMenuSwitchButton",
     "DropdownSubMenu",
     "DropMarker",
     "ErrorHandler",
     "FlexSpacer",
     "Form",
     "getIconClass",
     "Paginator",
     "PickerInput",
     "PickerList",
     "PickerModal",
     "PresetsPanel",
     "useForm"
    ],
    "ClassDeclaration": [
     "AvatarRow",
     "ClearNotification",
     "ConfirmationModal",
     "DataPickerBody",
     "DataPickerRow",
     "DatePicker",
     "DropSpot",
     "ErrorPage",
     "InstanceItem",
     "MainMenuCustomElement",
     "MainMenuDropdown",
     "MainMenuLogo",
     "MakeMeItem",
     "ModalFooter",
     "ModalHeader",
     "PickerItem",
     "RangeDatePicker",
     "SliderRating",
     "Snackbar",
     "TextOverflow",
     "TimePicker",
     "UploadFileToggler"
    ]
   },
   "@epam/uui-editor": {
    "VariableDeclaration": [
     "ATTACHMENT_PLUGIN_KEY",
     "ATTACHMENT_PLUGIN_TYPE",
     "attachmentPlugin",
     "baseMarksPlugin",
     "basePlugins",
     "codeBlockPlugin",
     "colorPlugin",
     "createDeserializer",
     "createSerializer",
     "defaultPlugins",
     "headerPlugin",
     "IFRAME_PLUGIN_KEY",
     "IFRAME_PLUGIN_TYPE",
     "iframePlugin",
     "IMAGE_PLUGIN_KEY",
     "IMAGE_PLUGIN_TYPE",
     "imagePlugin",
     "isEditorValueEmpty",
     "linkPlugin",
     "listPlugin",
     "migrateNode",
     "migrateSchema",
     "notePlugin",
     "noteTypes",
     "PARAGRAPH_TYPE",
     "paragraphPlugin",
     "placeholderPlugin",
     "QUOTE_PLUGIN_KEY",
     "quotePlugin",
     "SEPARATOR_KEY",
     "separatorPlugin",
     "superscriptPlugin",
     "tablePlugin",
     "TODO_ELEMENT_KEY",
     "toDoListPlugin",
     "uploadFilePlugin",
     "VIDEO_PLUGIN_KEY",
     "videoPlugin"
    ],
    "FunctionDeclaration": [
     "BoldButton",
     "CodeButton",
     "ColorButton",
     "getBlockDesirialiser",
     "getMarkDeserializer",
     "HeaderButton",
     "IframeButton",
     "ImageButton",
     "isImageSelected",
     "isPluginActive",
     "isTextSelected",
     "ItalicButton",
     "LinkButton",
     "ListButton",
     "NoteButton",
     "PlaceholderButton",
     "QuoteButton",
     "SeparatorButton",
     "SlateEditor",
     "SuperscriptButton",
     "TableButton",
     "ToDoListButton",
     "UnderlineButton",
     "VideoButton"
    ]
   },
   "@epam/uui-timeline": {
    "FunctionDeclaration": [
     "addDays",
     "addMs",
     "getHoursInFormatAMPM",
     "getleftXforCentering",
     "includeLastDay",
     "isWeekend",
     "renderBars",
     "roundDateToMidday"
    ],
    "VariableDeclaration": [
     "baseDate",
     "i18n",
     "months",
     "msPerDay",
     "msPerHour",
     "msPerMinute",
     "msPerYear",
     "scales",
     "scaleSteps"
    ],
    "ClassDeclaration": [
     "BaseTimelineCanvasComponent",
     "TimelineController",
     "TimelineEventsBar",
     "TimelineGrid",
     "TimelineNav",
     "TimelineScale",
     "TimelineTransform"
    ],
    "EnumDeclaration": [
     "Scales"
    ]
   }
  }
 },
 "includedExports": {
  "totals": {
   "allExports": 540,
   "byModule": {
    "@epam/uui-core": 208,
    "@epam/uui-components": 93,
    "@epam/uui": 116,
    "@epam/promo": 49,
    "@epam/loveship": 57,
    "@epam/uui-editor": 9,
    "@epam/uui-timeline": 8
   }
  },
  "value": {
   "@epam/uui-core": {
    "InterfaceDeclaration": [
     "AcceptDropParams",
     "ApiCallInfo",
     "ApiCallOptions",
     "ApiContextProps",
     "ApiExtensions",
     "ApplyFilterOptions",
     "ApplySearchOptions",
     "ApplySortOptions",
     "ArrayDataSourceProps",
     "ArrayListViewProps",
     "AsyncDataSourceProps",
     "AsyncListViewProps",
     "BaseArrayListViewProps",
     "BaseDatePickerProps",
     "BaseListViewProps",
     "BaseRangeDatePickerProps",
     "BatchPromiseOptions",
     "ButtonBaseCoreProps",
     "ButtonCoreProps",
     "ButtonSemanticProps",
     "CheckboxCoreProps",
     "CommonContexts",
     "ContextProviderProps",
     "DataColumnProps",
     "DataQuery",
     "DataQueryRange",
     "DataRowOptions",
     "DataRowPathItem",
     "DataSourceListProps",
     "DataSourceState",
     "DataTableCellOptions",
     "DataTableCellProps",
     "DataTableColumnsConfigOptions",
     "DataTableHeaderCellProps",
     "DataTableHeaderRowProps",
     "DataTableRowProps",
     "DataTableSelectedCellData",
     "DataTableState",
     "DatePickerCoreProps",
     "DndActorProps",
     "DndActorRenderParams",
     "DndContextState",
     "DragGhostProps",
     "DropdownBodyProps",
     "DropdownProps",
     "DropdownState",
     "DropParams",
     "FileUploadOptions",
     "FileUploadResponse",
     "FormProps",
     "FormSaveResponse",
     "FormState",
     "IAdaptiveItem",
     "IAnalyticableClick",
     "IAnalyticableOnChange",
     "IAnalyticsContext",
     "IAnalyticsListener",
     "IApiContext",
     "IBaseContext",
     "IBasicPickerToggler",
     "ICanBeInvalid",
     "ICanBeReadonly",
     "ICanBeRequired",
     "ICanFocus",
     "ICanRedirect",
     "IClickable",
     "IContextProviderSsrProps",
     "IdAndName",
     "IDataSource",
     "IDisableable",
     "IDndActor",
     "IDndContext",
     "IDropdownBodyProps",
     "IDropdownToggler",
     "IEditable",
     "IEditableDebouncerOptions",
     "IEditableDebouncerProps",
     "IErrorContext",
     "IFormApi",
     "IHasCaption",
     "IHasChildren",
     "IHasCX",
     "IHasDirection",
     "IHasForwardedRef",
     "IHasIcon",
     "IHasLabel",
     "IHasPlaceholder",
     "IHasTabIndex",
     "IHistory4",
     "ILayoutContext",
     "ILens",
     "ILockContext",
     "IMap",
     "IModal",
     "IModalContext",
     "INotification",
     "INotificationContext",
     "IPickerToggler",
     "IPresetsApi",
     "IRouterContext",
     "ISkin",
     "ITablePreset",
     "ITableState",
     "ITree",
     "IUserSettingsContext",
     "LabeledInputCoreProps",
     "LayoutLayer",
     "LazyDataSourceApiRequest",
     "LazyDataSourceApiRequestContext",
     "LazyDataSourceApiRequestOptions",
     "LazyDataSourceApiRequestRange",
     "LazyDataSourceApiResponse",
     "LazyDataSourceProps",
     "LazyListViewProps",
     "Link",
     "ListApiResponse",
     "ListApiSettings",
     "LoadTreeOptions",
     "Metadata",
     "ModalBlockerProps",
     "ModalComponentProps",
     "ModalFooterCoreProps",
     "ModalHeaderCoreProps",
     "ModalOperation",
     "ModalWindowProps",
     "NotificationOperation",
     "NotificationParams",
     "RangeDatePickerCoreProps",
     "RangeDatePickerValue",
     "RenderCellProps",
     "RenderEditorProps",
     "ScrollToConfig",
     "SortingOption",
     "SpinnerCoreProps",
     "StatefulProps",
     "TextInputCoreProps",
     "TimePickerValue",
     "TooltipCoreProps",
     "TreeNodeInfo",
     "TreeParams",
     "UseTableStateHookParams",
     "UseUuiErrorOptions",
     "UseUuiErrorProps",
     "UseUuiServicesProps",
     "UuiContexts",
     "UuiErrorInfo",
     "UuiServicesProps",
     "VirtualListRange",
     "VirtualListState"
    ],
    "TypeAliasDeclaration": [
     "AnalyticsEvent",
     "ApiCallErrorType",
     "ApiRecoveryReason",
     "ApiStatus",
     "ArrayElement",
     "ArrayPickerProps",
     "BlockTypes",
     "CascadeSelection",
     "ClassValue",
     "ColumnsConfig",
     "CX",
     "DataQueryFilter",
     "DataQueryFilterCondition",
     "DataRowProps",
     "DataSourceListCounts",
     "DataTableConfigModalParams",
     "DropdownPlacement",
     "DropPosition",
     "DropPositionOptions",
     "FilterPredicate",
     "FilterPredicateName",
     "FiltersConfig",
     "FlexCellProps",
     "FlexRowProps",
     "ICanBeFixed",
     "ICheckable",
     "IColumnConfig",
     "Icon",
     "IDataSourceView",
     "IFilterConfig",
     "IFilterItemBodyProps",
     "IFilterPredicate",
     "IHasRawProps",
     "IProcessRequest",
     "IRouter6",
     "ItemsComparator",
     "LazyDataSourceApi",
     "LazyLoadedMapLoadCallback",
     "LoadingStatus",
     "PickerBaseOptions",
     "PickerBaseProps",
     "PickerBindingProps",
     "PickerBindingValueType",
     "PickerFilterConfig",
     "PickerFooterProps",
     "RangeDatePickerInputType",
     "RangeDatePickerPresets",
     "RangeDatePickerPresetValue",
     "ScrollAlign",
     "SearchResultItem",
     "SinglePickerProps",
     "SkinContextComponentProps",
     "SortDirection",
     "TableFiltersConfig",
     "TMouseCoords",
     "UseFormProps",
     "UuiRecoveryErrorInfo",
     "ValidationMode",
     "VPanelProps"
    ]
   },
   "@epam/uui-components": {
    "TypeAliasDeclaration": [
     "AccordionProps",
     "AdaptiveItemProps",
     "ArrayPickerProps",
     "IRenderInputProps",
     "PickerBindingProps",
     "PickerBindingValueType",
     "PickerInputBaseProps",
     "PickerListBaseProps",
     "PickerModalArrayProps",
     "PickerModalScalarProps",
     "SinglePickerProps",
     "TextProps",
     "UsePickerInputProps",
     "UsePickerListProps",
     "UsePickerModalProps",
     "ViewType",
     "VirtualListProps"
    ],
    "InterfaceDeclaration": [
     "AccordionState",
     "AdaptivePanelProps",
     "AnchorProps",
     "AvatarProps",
     "AvatarStackProps",
     "BaseRatingProps",
     "BaseTimePickerProps",
     "BlockerProps",
     "BurgerProps",
     "ButtonBaseProps",
     "ButtonProps",
     "CalendarPresetsProps",
     "CalendarProps",
     "CarouselProps",
     "CarouselState",
     "CheckboxGroupProps",
     "CheckboxProps",
     "ColumnsConfigurationRowProps",
     "ControlGroupProps",
     "ControlIconProps",
     "DataSourceKeyboardParams",
     "DataTableSelectionProviderProps",
     "DatePickerBodyBaseOptions",
     "DatePickerBodyBaseProps",
     "DatePickerState",
     "DayProps",
     "DragHandleProps",
     "DropdownContainerProps",
     "DropSpotRenderParams",
     "FlexSpacerProps",
     "HeaderCellContentProps",
     "IconButtonBaseProps",
     "InputAddonProps",
     "IProgressBarProps",
     "IScrollSpyApi",
     "IScrollSpyProps",
     "LabeledInputProps",
     "MainMenuCustomElementProps",
     "MainMenuDropdownProps",
     "MainMenuLogoProps",
     "MainMenuProps",
     "MonthSelectionProps",
     "NumericInputProps",
     "PaginatorParams",
     "PaginatorProps",
     "PickerBindingHelper",
     "PickerBodyBaseProps",
     "PickerBodyValue",
     "PickerModalOptions",
     "PickerTogglerProps",
     "PortalProps",
     "PositionValues",
     "RadioGroupItem",
     "RadioGroupProps",
     "RadioInputProps",
     "RangeSliderState",
     "RangeSliderValue",
     "RatingProps",
     "RichTextViewProps",
     "ScrollbarProps",
     "ScrollbarsApi",
     "SelectionContextState",
     "SliderBaseProps",
     "SliderBaseState",
     "SnackbarProps",
     "SpinnerProps",
     "SwitchProps",
     "TextAreaProps",
     "TextInputProps",
     "TimePickerBodyProps",
     "TooltipProps",
     "TooltipState",
     "TreeListItem",
     "TreeProps",
     "VirtualListRenderRowsParams",
     "YearSelectionProps"
    ]
   },
   "@epam/uui": {
    "InterfaceDeclaration": [
     "AccordionMods",
     "AlertProps",
     "BadgeMods",
     "BurgerButtonMods",
     "BurgerGroupHeaderProps",
     "BurgerMods",
     "BurgerSearchProps",
     "ButtonMods",
     "CheckboxMods",
     "ColorMod",
     "ColumnsConfigurationModalProps",
     "ConfirmationModalWindowProps",
     "DataPickerBodyProps",
     "DataPickerRowProps",
     "DataRowsContainerProps",
     "DataTableCellMods",
     "DataTableHeaderCellMods",
     "DataTableHeaderRowMods",
     "DataTableMods",
     "DataTableProps",
     "DataTableRowMods",
     "DatePickerBodyProps",
     "DatePickerProps",
     "DefaultNotificationProps",
     "DropdownContainerMods",
     "DropdownContainerProps",
     "DropMarkerProps",
     "DropSpotProps",
     "FileCardItem",
     "FileCardProps",
     "FiltersPanelProps",
     "FlexRowProps",
     "GlobalMenuProps",
     "HighlightRange",
     "IconButtonMods",
     "IconButtonProps",
     "IDropdownMenuContainer",
     "IDropdownMenuItemProps",
     "IHasEditMode",
     "IndeterminateBarMods",
     "ITextPlaceholderProps",
     "LabeledInputMods",
     "LinkButtonMods",
     "MainMenuAvatarProps",
     "MainMenuButtonMods",
     "MainMenuIconProps",
     "MainMenuMods",
     "MainMenuSearchProps",
     "ModalFooterProps",
     "ModalHeaderProps",
     "ModalWindowMods",
     "MultiSwitchProps",
     "NotificationCardProps",
     "NumericInputMods",
     "PanelMods",
     "PickerItemProps",
     "PickerListItemProps",
     "PickerTogglerMods",
     "PresetsPanelProps",
     "ProgressBarMods",
     "RadioInputMods",
     "RangeDatePickerBodyProps",
     "RangeDatePickerProps",
     "RangeDatePickerValue",
     "RichTextViewMods",
     "RowMods",
     "RowSizeMod",
     "SizeMod",
     "SwitchMods",
     "TabButtonMods",
     "TagMods",
     "TextAreaMods",
     "TextInputMods",
     "TextInputProps",
     "TextMods",
     "TextSettings",
     "TimePickerProps",
     "TooltipMods"
    ],
    "TypeAliasDeclaration": [
     "BadgeColor",
     "BadgeFill",
     "BadgeProps",
     "BadgeSize",
     "ButtonColor",
     "ButtonMode",
     "ButtonProps",
     "ButtonSemanticColor",
     "CheckboxProps",
     "ControlSize",
     "EpamBadgeSemanticColor",
     "FillStyle",
     "FlexCellMods",
     "FontStyle",
     "IconColor",
     "InputType",
     "LinkButtonColorType",
     "LinkButtonProps",
     "ModalWindowProps",
     "NumericInputProps",
     "PickerInputProps",
     "PickerListProps",
     "PickerModalProps",
     "pickerPart",
     "RadioInputProps",
     "RowSize",
     "SemanticColor",
     "SpinnerProps",
     "TabButtonProps",
     "TagProps",
     "TagSize",
     "TextAreaProps",
     "TextPlaceholderProps",
     "TextProps",
     "TextSize",
     "TooltipProps",
     "UuiMultiSwitchColor",
     "VerticalTabButtonProps"
    ]
   },
   "@epam/promo": {
    "InterfaceDeclaration": [
     "AlertMods",
     "AlertProps",
     "BadgeMods",
     "ButtonMods",
     "ColorMod",
     "DropdownContainerMods",
     "ErrorHandlerProps",
     "FontMod",
     "IconButtonMods",
     "IconContainerMods",
     "IHasEditMode",
     "LinkButtonMods",
     "ModalWindowMods",
     "MultiSwitchMods",
     "NotificationCardMods",
     "PanelMods",
     "RatingMods",
     "RichTextViewMods",
     "RowMods",
     "RowSizeMod",
     "ScrollBarsMods",
     "SizeMod",
     "SliderMods",
     "TextInputProps",
     "TextMods",
     "TooltipMods",
     "VirtualListMods"
    ],
    "TypeAliasDeclaration": [
     "BadgeProps",
     "ButtonColor",
     "ButtonProps",
     "ControlShape",
     "ControlSize",
     "EpamAdditionalColor",
     "EpamColor",
     "EpamGrayscaleColor",
     "EpamPrimaryColor",
     "FillStyle",
     "FontStyle",
     "IconButtonProps",
     "IconColor",
     "IconContainerColors",
     "LinkButtonProps",
     "MultiSwitchColor",
     "MultiSwitchProps",
     "NotificationCardProps",
     "RowSize",
     "TextProps",
     "TextSize",
     "TooltipProps"
    ]
   },
   "@epam/loveship": {
    "InterfaceDeclaration": [
     "AlertMods",
     "AlertProps",
     "BadgeMods",
     "ButtonMods",
     "CheckboxMods",
     "ColorMod",
     "DropdownContainerMods",
     "EditMode",
     "ErrorConfig",
     "ErrorPageProps",
     "FontMod",
     "IconButtonMods",
     "IconContainerMods",
     "LinkButtonMods",
     "MakeMeItemProps",
     "MakeMeUser",
     "ModalWindowMods",
     "MultiSwitchMods",
     "NotificationCardMods",
     "PanelMods",
     "RadioInputMods",
     "RadioInputProps",
     "RangeSliderMods",
     "RatingMods",
     "RichTextViewMods",
     "RowMods",
     "RowSizeMod",
     "ScrollBarsMods",
     "SizeMod",
     "SliderRatingProps",
     "SnackbarCardProps",
     "TabButtonMods",
     "TagMods",
     "TextInputMods",
     "TextMods",
     "TooltipMods",
     "VirtualListMods"
    ],
    "TypeAliasDeclaration": [
     "BadgeProps",
     "ButtonColorType",
     "ButtonProps",
     "ControlShape",
     "ControlSize",
     "EpamAdditionalColor",
     "EpamColor",
     "EpamGrayscaleColor",
     "EpamPrimaryColor",
     "FillStyle",
     "FontStyle",
     "IconButtonProps",
     "LinkButtonProps",
     "MultiSwitchColor",
     "MultiSwitchProps",
     "NotificationCardProps",
     "RowSize",
     "TextProps",
     "TextSize",
     "TooltipProps"
    ]
   },
   "@epam/uui-editor": {
    "TypeAliasDeclaration": [
     "EditorValue",
     "PlateImgAlign",
     "SlateImageSize",
     "SlateImgAlign"
    ],
    "InterfaceDeclaration": [
     "IImageElement",
     "LinkElement",
     "PlaceholderPluginParams",
     "PlateProps",
     "SlateProps"
    ]
   },
   "@epam/uui-timeline": {
    "InterfaceDeclaration": [
     "BaseTimelineCanvasComponentProps",
     "Item",
     "Stage",
     "TimelineControllerOptions",
     "TimelineEventsBarProps",
     "TimelineGridProps",
     "TimelineNavProps",
     "TimelineScaleProps"
    ]
   }
  }
 }
}