{
 "missingPropComment": {
  "totals": {
   "amountProps": 945,
   "amountTypes": 302
  },
  "value": [
   {
    "typeRef": "@epam/uui-core:AcceptDropParams",
    "value": [
     "dstData",
     "offsetLeft",
     "offsetTop",
     "srcData",
     "targetHeight",
     "targetWidth"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ApiCallInfo",
    "value": [
     "attemptsCount",
     "dismissError",
     "errorStatus",
     "finishedAt",
     "httpStatus",
     "method",
     "name",
     "options",
     "requestData",
     "responseData",
     "startedAt",
     "status",
     "url"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ApiCallOptions",
    "value": [
     "errorHandling",
     "fetchOptions"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ApiContextProps",
    "value": [
     "apiPingPath",
     "apiReloginPath",
     "apiServerUrl"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ApiExtensions",
    "value": [
     "withOptions"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ApplyFilterOptions",
    "value": [
     "filter",
     "getFilter"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ApplySearchOptions",
    "value": [
     "getSearchFields",
     "search",
     "sortSearchByRelevance"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ApplySortOptions",
    "value": [
     "sortBy",
     "sorting"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ArrayListViewProps",
    "value": [
     "items"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ArrayPickerProps",
    "value": [
     "emptyValue",
     "selectionMode",
     "valueType",
     "valueType"
    ]
   },
   {
    "typeRef": "@epam/uui-core:AsyncListViewProps",
    "value": [
     "api"
    ]
   },
   {
    "typeRef": "@epam/uui-core:BaseArrayListViewProps",
    "value": [
     "getFilter",
     "getSearchFields",
     "sortBy"
    ]
   },
   {
    "typeRef": "@epam/uui-core:BaseDatePickerProps",
    "value": [
     "bodyCx",
     "iconPosition",
     "onBlur"
    ]
   },
   {
    "typeRef": "@epam/uui-core:BaseRangeDatePickerProps",
    "value": [
     "bodyCx"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ButtonCoreProps",
    "value": [
     "count",
     "countPosition"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ButtonSemanticProps",
    "value": [
     "type"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ColumnsConfig",
    "value": [
     "[key: string]"
    ]
   },
   {
    "typeRef": "@epam/uui-core:CommonContexts",
    "value": [
     "api",
     "history",
     "uuiApp"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ContextProviderProps",
    "value": [
     "gaCode",
     "history",
     "loadAppContext",
     "onInitCompleted"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataColumnProps",
    "value": [
     "canAcceptCopy",
     "canCopy",
     "justifyContent"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataQuery",
    "value": [
     "filter",
     "range",
     "search",
     "sorting"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataQueryRange",
    "value": [
     "count",
     "from"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataRowOptions",
    "value": [
     "pin"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataRowPathItem",
    "value": [
     "id",
     "isLastChild",
     "value"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataRowProps",
    "value": [
     "isPinned",
     "isUnknown"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataSourceListProps",
    "value": [
     "selectAll"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataSourceState",
    "value": [
     "checked",
     "filter",
     "focusedIndex",
     "folded",
     "page",
     "pageSize",
     "search",
     "selectedId",
     "sorting"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableCellProps",
    "value": [
     "renderUnknown"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableColumnsConfigOptions",
    "value": [
     "allowColumnsReordering",
     "allowColumnsResizing"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableConfigModalParams",
    "value": [
     "columns"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableHeaderCellProps",
    "value": [
     "column",
     "isFilterActive",
     "isFirstColumn",
     "isLastColumn",
     "key",
     "onDrop",
     "onSort",
     "renderFilter",
     "selectAll",
     "sortDirection"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableHeaderRowProps",
    "value": [
     "columns",
     "onConfigButtonClick",
     "renderCell",
     "renderConfigButton",
     "selectAll"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableRowProps",
    "value": [
     "columns",
     "renderCell",
     "renderDropMarkers"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableSelectedCellData",
    "value": [
     "column",
     "row"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DataTableState",
    "value": [
     "columnsConfig",
     "filtersConfig",
     "presetId",
     "viewState"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DndActorProps",
    "value": [
     "render"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DndContextState",
    "value": [
     "ghostOffsetX",
     "ghostOffsetY",
     "ghostWidth",
     "isDragging",
     "renderGhost"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DropdownProps",
    "value": [
     "boundaryElement",
     "closeBodyOnTogglerHidden",
     "closeDelay",
     "closeOnClickOutside",
     "closeOnMouseLeave",
     "closeOnTargetClick",
     "isNotUnfoldable",
     "modifiers",
     "onClose",
     "openOnClick",
     "openOnHover",
     "placement",
     "portalTarget",
     "renderBody",
     "renderTarget",
     "zIndex"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DropdownState",
    "value": [
     "bodyBoundingRect",
     "opened"
    ]
   },
   {
    "typeRef": "@epam/uui-core:DropParams",
    "value": [
     "position"
    ]
   },
   {
    "typeRef": "@epam/uui-core:FileUploadOptions",
    "value": [
     "getXHR",
     "onProgress"
    ]
   },
   {
    "typeRef": "@epam/uui-core:FileUploadResponse",
    "value": [
     "error",
     "extension",
     "id",
     "name",
     "path",
     "size",
     "type"
    ]
   },
   {
    "typeRef": "@epam/uui-core:FilterPredicate",
    "value": [
     "eq",
     "gt",
     "gte",
     "in",
     "inRange",
     "isNull",
     "lt",
     "lte",
     "neq",
     "nin",
     "not",
     "notInRange"
    ]
   },
   {
    "typeRef": "@epam/uui-core:FormSaveResponse",
    "value": [
     "form",
     "validation"
    ]
   },
   {
    "typeRef": "@epam/uui-core:FormState",
    "value": [
     "form",
     "formHistory",
     "historyIndex",
     "isChanged",
     "isInProgress",
     "isInSaveMode",
     "lastSentForm",
     "serverValidationState",
     "validationState"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IAdaptiveItem",
    "value": [
     "collapseToMore",
     "collapsedContainer",
     "estimatedWidth",
     "priority",
     "showInBurgerMenu"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IAnalyticsContext",
    "value": [
     "addListener",
     "sendEvent"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IAnalyticsListener",
    "value": [
     "sendEvent"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IApiContext",
    "value": [
     "getActiveCalls",
     "processRequest",
     "recoveryReason",
     "reset",
     "status",
     "uploadFile"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IBaseContext",
    "value": [
     "destroyContext",
     "subscribe",
     "unsubscribe"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IBasicPickerToggler",
    "value": [
     "onClear"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IColumnConfig",
    "value": [
     "isVisible",
     "order",
     "width"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IContextProviderSsrProps",
    "value": [
     "router"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IdAndName",
    "value": [
     "id",
     "name"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IDataSource",
    "value": [
     "getById",
     "getId",
     "getView",
     "setItem",
     "unsubscribeView",
     "useView"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IDataSourceView",
    "value": [
     "_forceUpdate",
     "destroy",
     "getById",
     "getListProps",
     "getSelectedRows",
     "getSelectedRowsCount",
     "getVisibleRows",
     "loadData",
     "reload",
     "selectAll"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IDndActor",
    "value": [
     "canAcceptDrop",
     "dstData",
     "onDrop",
     "srcData"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IDndContext",
    "value": [
     "dragData",
     "endDrag",
     "getMouseCoords",
     "isDragging",
     "startDrag"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IDropdownBodyProps",
    "value": [
     "arrowProps",
     "isOpen",
     "onClose",
     "scheduleUpdate",
     "togglerHeight",
     "togglerWidth"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IErrorContext",
    "value": [
     "currentError",
     "discardError",
     "onError",
     "recover",
     "reportError"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IFilterConfig",
    "value": [
     "isVisible",
     "order"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IFilterItemBodyProps",
    "value": [
     "selectedPredicate"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IFilterPredicate",
    "value": [
     "isDefault",
     "name",
     "predicate"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IHasChildren",
    "value": [
     "children"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IHasDirection",
    "value": [
     "direction"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IHistory4",
    "value": [
     "block",
     "createHref",
     "listen",
     "location",
     "push",
     "replace"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ILayoutContext",
    "value": [
     "getLayer",
     "getPortalRoot",
     "getPortalRootId",
     "releaseLayer"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ILens",
    "value": [
     "default",
     "get",
     "index",
     "onChange",
     "prop",
     "set",
     "toProps",
     "update"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ILockContext",
    "value": [
     "acquire",
     "getCurrentLock",
     "release",
     "withLock"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IMap",
    "value": [
     "[Symbol.iterator]",
     "constructor",
     "delete",
     "get",
     "has",
     "set",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IModal",
    "value": [
     "abort",
     "isActive",
     "key",
     "success",
     "zIndex"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IModalContext",
    "value": [
     "closeAll",
     "getOperations",
     "isModalOperationActive",
     "show"
    ]
   },
   {
    "typeRef": "@epam/uui-core:INotification",
    "value": [
     "clearTimer",
     "id",
     "key",
     "onClose",
     "onSuccess",
     "refreshTimer"
    ]
   },
   {
    "typeRef": "@epam/uui-core:INotificationContext",
    "value": [
     "clearAll",
     "getNotifications",
     "remove",
     "show"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IPickerToggler",
    "value": [
     "selectedRowsCount",
     "selection"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IRouter6",
    "value": [
     "createHref",
     "deleteBlocker",
     "getBlocker",
     "navigate",
     "state",
     "subscribe"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IRouterContext",
    "value": [
     "block",
     "createHref",
     "getCurrentLink",
     "isActive",
     "listen",
     "redirect",
     "transfer"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ISkin",
    "value": [
     "Button",
     "Checkbox",
     "DatePicker",
     "FlexCell",
     "FlexRow",
     "IconButton",
     "LabeledInput",
     "ModalBlocker",
     "ModalFooter",
     "ModalHeader",
     "ModalWindow",
     "RangeDatePicker",
     "Spinner",
     "TextInput"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ITablePreset",
    "value": [
     "columnsConfig",
     "filter",
     "filtersConfig",
     "id",
     "isReadonly",
     "name",
     "order",
     "sorting",
     "viewState"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ITree",
    "value": [
     "cascadeSelection",
     "clearStructure",
     "computeSubtotals",
     "filter",
     "forEach",
     "getById",
     "getChildren",
     "getChildrenByParentId",
     "getChildrenIdsByParentId",
     "getNodeInfo",
     "getParentIdsRecursive",
     "getParents",
     "getPathById",
     "getPathItem",
     "getRootIds",
     "getRootItems",
     "getTotalRecursiveCount",
     "isFlatList",
     "load",
     "loadMissing",
     "loadMissingIdsAndParents",
     "patch",
     "search",
     "sort"
    ]
   },
   {
    "typeRef": "@epam/uui-core:IUserSettingsContext",
    "value": [
     "get",
     "set"
    ]
   },
   {
    "typeRef": "@epam/uui-core:LayoutLayer",
    "value": [
     "depth",
     "id",
     "zIndex"
    ]
   },
   {
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequest",
    "value": [
     "ids",
     "page",
     "pageSize",
     "range"
    ]
   },
   {
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequestContext",
    "value": [
     "parent",
     "parentId"
    ]
   },
   {
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequestOptions",
    "value": [
     "filter",
     "search",
     "sorting"
    ]
   },
   {
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequestRange",
    "value": [
     "count",
     "from"
    ]
   },
   {
    "typeRef": "@epam/uui-core:Link",
    "value": [
     "hash",
     "key",
     "pathname",
     "query",
     "search",
     "state"
    ]
   },
   {
    "typeRef": "@epam/uui-core:LoadTreeOptions",
    "value": [
     "isFolded",
     "loadAllChildren"
    ]
   },
   {
    "typeRef": "@epam/uui-core:Metadata",
    "value": [
     "all",
     "maxLength",
     "maxValue",
     "minValue",
     "props",
     "validators"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ModalBlockerProps",
    "value": [
     "disableCloseByEsc",
     "disableFocusLock",
     "disallowClickOutside"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ModalComponentProps",
    "value": [
     "abort",
     "depth",
     "isActive",
     "key",
     "parameters",
     "success",
     "zIndex"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ModalFooterCoreProps",
    "value": [
     "borderTop"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ModalHeaderCoreProps",
    "value": [
     "onClose",
     "title"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ModalOperation",
    "value": [
     "component",
     "props"
    ]
   },
   {
    "typeRef": "@epam/uui-core:NotificationOperation",
    "value": [
     "component",
     "config",
     "props"
    ]
   },
   {
    "typeRef": "@epam/uui-core:NotificationParams",
    "value": [
     "duration",
     "position"
    ]
   },
   {
    "typeRef": "@epam/uui-core:PickerFilterConfig",
    "value": [
     "dataSource",
     "getName",
     "renderRow",
     "type",
     "valueType"
    ]
   },
   {
    "typeRef": "@epam/uui-core:PickerFooterProps",
    "value": [
     "clearSelection",
     "disableClear",
     "selectionMode",
     "showSelected",
     "view"
    ]
   },
   {
    "typeRef": "@epam/uui-core:RangeDatePickerCoreProps",
    "value": [
     "getPlaceholder",
     "rawProps"
    ]
   },
   {
    "typeRef": "@epam/uui-core:RangeDatePickerPresets",
    "value": [
     "[key: string]"
    ]
   },
   {
    "typeRef": "@epam/uui-core:RangeDatePickerPresetValue",
    "value": [
     "from",
     "order",
     "to"
    ]
   },
   {
    "typeRef": "@epam/uui-core:RangeDatePickerValue",
    "value": [
     "from",
     "to"
    ]
   },
   {
    "typeRef": "@epam/uui-core:RenderEditorProps",
    "value": [
     "mode",
     "rowProps"
    ]
   },
   {
    "typeRef": "@epam/uui-core:ScrollToConfig",
    "value": [
     "align",
     "behavior",
     "index"
    ]
   },
   {
    "typeRef": "@epam/uui-core:SearchResultItem",
    "value": [
     "parents"
    ]
   },
   {
    "typeRef": "@epam/uui-core:SinglePickerProps",
    "value": [
     "selectionMode",
     "valueType"
    ]
   },
   {
    "typeRef": "@epam/uui-core:SkinContextComponentProps",
    "value": [
     "usageContext"
    ]
   },
   {
    "typeRef": "@epam/uui-core:SortingOption",
    "value": [
     "direction",
     "field"
    ]
   },
   {
    "typeRef": "@epam/uui-core:StatefulProps",
    "value": [
     "initialState",
     "render",
     "storage"
    ]
   },
   {
    "typeRef": "@epam/uui-core:TimePickerValue",
    "value": [
     "hours",
     "minutes"
    ]
   },
   {
    "typeRef": "@epam/uui-core:TMouseCoords",
    "value": [
     "buttons",
     "mouseDownPageX",
     "mouseDownPageY",
     "mouseDx",
     "mouseDxSmooth",
     "mouseDy",
     "mouseDySmooth",
     "mousePageX",
     "mousePageY"
    ]
   },
   {
    "typeRef": "@epam/uui-core:TreeNodeInfo",
    "value": [
     "count"
    ]
   },
   {
    "typeRef": "@epam/uui-core:TreeParams",
    "value": [
     "complexIds",
     "getId",
     "getParentId"
    ]
   },
   {
    "typeRef": "@epam/uui-core:UseUuiErrorOptions",
    "value": [
     "errorConfig",
     "recoveryConfig"
    ]
   },
   {
    "typeRef": "@epam/uui-core:UseUuiErrorProps",
    "value": [
     "getErrorInfo",
     "options"
    ]
   },
   {
    "typeRef": "@epam/uui-core:UseUuiServicesProps",
    "value": [
     "appContext",
     "router"
    ]
   },
   {
    "typeRef": "@epam/uui-core:UuiContexts",
    "value": [
     "uuiAnalytics",
     "uuiApi",
     "uuiDnD",
     "uuiErrors",
     "uuiLayout",
     "uuiLocks",
     "uuiModals",
     "uuiNotifications",
     "uuiRouter",
     "uuiSkin",
     "uuiUserSettings"
    ]
   },
   {
    "typeRef": "@epam/uui-core:UuiErrorInfo",
    "value": [
     "imageUrl",
     "mobileImageUrl",
     "status",
     "subtitle",
     "title"
    ]
   },
   {
    "typeRef": "@epam/uui-core:UuiRecoveryErrorInfo",
    "value": [
     "subtitle",
     "title"
    ]
   },
   {
    "typeRef": "@epam/uui-core:UuiServicesProps",
    "value": [
     "apiDefinition",
     "skinContext"
    ]
   },
   {
    "typeRef": "@epam/uui-core:VPanelProps",
    "value": [
     "style"
    ]
   },
   {
    "typeRef": "@epam/uui-components:AccordionState",
    "value": [
     "opened"
    ]
   },
   {
    "typeRef": "@epam/uui-components:AdaptiveItemProps",
    "value": [
     "collapsedContainer",
     "id",
     "priority",
     "render"
    ]
   },
   {
    "typeRef": "@epam/uui-components:AdaptivePanelProps",
    "value": [
     "items"
    ]
   },
   {
    "typeRef": "@epam/uui-components:ArrayPickerProps",
    "value": [
     "emptyValue",
     "selectionMode",
     "valueType",
     "valueType"
    ]
   },
   {
    "typeRef": "@epam/uui-components:AvatarStackProps",
    "value": [
     "avatarSize",
     "avatarsCount",
     "direction",
     "renderItem",
     "urlArray"
    ]
   },
   {
    "typeRef": "@epam/uui-components:BaseRatingProps",
    "value": [
     "from",
     "renderRating",
     "step",
     "to"
    ]
   },
   {
    "typeRef": "@epam/uui-components:BaseTimePickerProps",
    "value": [
     "format",
     "id",
     "minutesStep",
     "rawProps",
     "renderTarget"
    ]
   },
   {
    "typeRef": "@epam/uui-components:BurgerProps",
    "value": [
     "bg",
     "burgerContentCx",
     "burgerIcon",
     "crossIcon",
     "logoUrl",
     "renderBurgerContent",
     "width"
    ]
   },
   {
    "typeRef": "@epam/uui-components:CalendarPresetsProps",
    "value": [
     "onPresetSet",
     "presets"
    ]
   },
   {
    "typeRef": "@epam/uui-components:CalendarProps",
    "value": [
     "displayedDate",
     "filter",
     "getDayCX",
     "hideAnotherMonths",
     "isHoliday",
     "onValueChange",
     "renderDay",
     "value"
    ]
   },
   {
    "typeRef": "@epam/uui-components:CarouselProps",
    "value": [
     "arrowIcon",
     "divideBy",
     "items",
     "renderItem"
    ]
   },
   {
    "typeRef": "@epam/uui-components:CarouselState",
    "value": [
     "activeSlide"
    ]
   },
   {
    "typeRef": "@epam/uui-components:CheckboxProps",
    "value": [
     "id",
     "renderLabel"
    ]
   },
   {
    "typeRef": "@epam/uui-components:ColumnsConfigurationRowProps",
    "value": [
     "columnConfig",
     "isDndAllowed",
     "isPinned",
     "isPinnedAlways",
     "onCanAcceptDrop",
     "onDrop",
     "togglePin",
     "toggleVisibility"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DataSourceKeyboardParams",
    "value": [
     "editMode",
     "listView",
     "rows"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DataTableSelectionProviderProps",
    "value": [
     "columns",
     "onCopy",
     "rows"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DatePickerBodyBaseOptions",
    "value": [
     "changeIsOpen",
     "filter",
     "presets",
     "renderDay"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DatePickerBodyBaseProps",
    "value": [
     "setDisplayedDateAndView",
     "setSelectedDate",
     "value"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DatePickerState",
    "value": [
     "inputValue",
     "isOpen"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DayProps",
    "value": [
     "filter",
     "getDayCX",
     "isHoliday",
     "isSelected",
     "renderDayNumber"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DropdownContainerProps",
    "value": [
     "height",
     "maxWidth",
     "showArrow",
     "style",
     "width"
    ]
   },
   {
    "typeRef": "@epam/uui-components:DropSpotRenderParams",
    "value": [
     "eventHandlers"
    ]
   },
   {
    "typeRef": "@epam/uui-components:HeaderCellContentProps",
    "value": [
     "onResize",
     "onResizeEnd",
     "onResizeStart",
     "toggleSort"
    ]
   },
   {
    "typeRef": "@epam/uui-components:InputAddonProps",
    "value": [
     "content"
    ]
   },
   {
    "typeRef": "@epam/uui-components:IProgressBarProps",
    "value": [
     "hideLabel",
     "label",
     "progress"
    ]
   },
   {
    "typeRef": "@epam/uui-components:IScrollSpyApi",
    "value": [
     "currentActive",
     "scrollToElement",
     "setRef"
    ]
   },
   {
    "typeRef": "@epam/uui-components:IScrollSpyProps",
    "value": [
     "elements",
     "initialActive",
     "options"
    ]
   },
   {
    "typeRef": "@epam/uui-components:MainMenuDropdownProps",
    "value": [
     "renderBody"
    ]
   },
   {
    "typeRef": "@epam/uui-components:MainMenuLogoProps",
    "value": [
     "link",
     "logoBgColor",
     "logoUrl",
     "onClick",
     "onContextMenu",
     "showArrow"
    ]
   },
   {
    "typeRef": "@epam/uui-components:MainMenuProps",
    "value": [
     "Burger",
     "MainMenuDropdown",
     "alwaysShowBurger",
     "appLogoBgColor",
     "appLogoUrl",
     "children",
     "customerLogoBgColor",
     "customerLogoHref",
     "customerLogoLink",
     "customerLogoUrl",
     "customerLogoWidth",
     "externalGap",
     "isTransparent",
     "items",
     "logoHref",
     "logoLink",
     "logoWidth",
     "onLogoClick",
     "renderBurger",
     "serverBadge",
     "tooltipTechInfo"
    ]
   },
   {
    "typeRef": "@epam/uui-components:MonthSelectionProps",
    "value": [
     "selectedDate"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PaginatorParams",
    "value": [
     "goToNext",
     "goToPrev",
     "isFirst",
     "isLast",
     "pages",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerBindingHelper",
    "value": [
     "applyValueToDataSourceState",
     "dataSourceStateToValue"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerBodyBaseProps",
    "value": [
     "fixedBodyPosition",
     "onKeyDown",
     "renderNotFound",
     "rows",
     "scheduleUpdate",
     "search",
     "showSearch"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerBodyValue",
    "value": [
     "displayedDate",
     "selectedDate",
     "view"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerInputBaseProps",
    "value": [
     "portalTarget"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerModalArrayProps",
    "value": [
     "initialValue",
     "initialValue",
     "selectionMode",
     "valueType",
     "valueType"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerModalOptions",
    "value": [
     "disallowClickOutside",
     "renderFilter",
     "renderFooter"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerModalScalarProps",
    "value": [
     "initialValue",
     "initialValue",
     "selectionMode",
     "valueType",
     "valueType"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PickerTogglerProps",
    "value": [
     "autoFocus",
     "cancelIcon",
     "closePickerBody",
     "disableClear",
     "disableSearch",
     "dropdownIcon",
     "entityName",
     "getName",
     "isSingleLine",
     "maxItems",
     "minCharsToSearch",
     "onKeyDown",
     "pickerMode",
     "renderItem",
     "searchPosition"
    ]
   },
   {
    "typeRef": "@epam/uui-components:PortalProps",
    "value": [
     "key",
     "target"
    ]
   },
   {
    "typeRef": "@epam/uui-components:RadioGroupItem",
    "value": [
     "id",
     "name",
     "renderName"
    ]
   },
   {
    "typeRef": "@epam/uui-components:RadioGroupProps",
    "value": [
     "RadioInput",
     "items",
     "radioInputProps"
    ]
   },
   {
    "typeRef": "@epam/uui-components:RadioInputProps",
    "value": [
     "icon",
     "id",
     "renderLabel",
     "tabIndex"
    ]
   },
   {
    "typeRef": "@epam/uui-components:RangeSliderState",
    "value": [
     "activeHandle"
    ]
   },
   {
    "typeRef": "@epam/uui-components:RangeSliderValue",
    "value": [
     "from",
     "to"
    ]
   },
   {
    "typeRef": "@epam/uui-components:RatingProps",
    "value": [
     "Tooltip",
     "emptyStarIcon",
     "filledStarIcon",
     "hideTooltip",
     "hint"
    ]
   },
   {
    "typeRef": "@epam/uui-components:RichTextViewProps",
    "value": [
     "htmlContent"
    ]
   },
   {
    "typeRef": "@epam/uui-components:ScrollbarProps",
    "value": [
     "disableScroll",
     "hasBottomShadow",
     "hasTopShadow",
     "renderView"
    ]
   },
   {
    "typeRef": "@epam/uui-components:SinglePickerProps",
    "value": [
     "selectionMode",
     "valueType",
     "valueType"
    ]
   },
   {
    "typeRef": "@epam/uui-components:SliderBaseState",
    "value": [
     "isActive",
     "valueWidth"
    ]
   },
   {
    "typeRef": "@epam/uui-components:SnackbarProps",
    "value": [
     "closeIcon",
     "notifications"
    ]
   },
   {
    "typeRef": "@epam/uui-components:SwitchProps",
    "value": [
     "id"
    ]
   },
   {
    "typeRef": "@epam/uui-components:TimePickerBodyProps",
    "value": [
     "addIcon",
     "format",
     "minutesStep",
     "subtractIcon"
    ]
   },
   {
    "typeRef": "@epam/uui-components:TooltipState",
    "value": [
     "isOpen"
    ]
   },
   {
    "typeRef": "@epam/uui-components:TreeListItem",
    "value": [
     "data",
     "id",
     "name",
     "parentId"
    ]
   },
   {
    "typeRef": "@epam/uui-components:TreeProps",
    "value": [
     "getSearchFields",
     "items",
     "renderRow",
     "search"
    ]
   },
   {
    "typeRef": "@epam/uui-components:UsePickerInputProps",
    "value": [
     "shouldShowBody",
     "toggleModalOpening"
    ]
   },
   {
    "typeRef": "@epam/uui-components:VirtualListRenderRowsParams",
    "value": [
     "estimatedHeight",
     "listContainerRef",
     "offsetY",
     "scrollShadows"
    ]
   },
   {
    "typeRef": "@epam/uui-components:YearSelectionProps",
    "value": [
     "selectedDate"
    ]
   },
   {
    "typeRef": "@epam/uui:AccordionMods",
    "value": [
     "mode",
     "padding"
    ]
   },
   {
    "typeRef": "@epam/uui:BadgeMods",
    "value": [
     "color",
     "fill",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:BurgerButtonMods",
    "value": [
     "indentLevel",
     "type"
    ]
   },
   {
    "typeRef": "@epam/uui:BurgerGroupHeaderProps",
    "value": [
     "caption"
    ]
   },
   {
    "typeRef": "@epam/uui:ButtonMods",
    "value": [
     "color",
     "mode",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:CheckboxMods",
    "value": [
     "mode",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:ColumnsConfigurationModalProps",
    "value": [
     "columns",
     "columnsConfig",
     "defaultConfig",
     "getSearchFields",
     "renderItem"
    ]
   },
   {
    "typeRef": "@epam/uui:ConfirmationModalWindowProps",
    "value": [
     "bodyContent",
     "caption",
     "hideCancelButton"
    ]
   },
   {
    "typeRef": "@epam/uui:DataPickerBodyProps",
    "value": [
     "editMode",
     "maxHeight",
     "searchSize",
     "selectionMode"
    ]
   },
   {
    "typeRef": "@epam/uui:DataPickerRowProps",
    "value": [
     "alignActions",
     "borderBottom",
     "padding",
     "renderItem",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:DataRowsContainerProps",
    "value": [
     "headerRef",
     "renderRow",
     "rows"
    ]
   },
   {
    "typeRef": "@epam/uui:DataTableCellMods",
    "value": [
     "border"
    ]
   },
   {
    "typeRef": "@epam/uui:DataTableHeaderCellMods",
    "value": [
     "textCase"
    ]
   },
   {
    "typeRef": "@epam/uui:DataTableHeaderRowMods",
    "value": [
     "textCase"
    ]
   },
   {
    "typeRef": "@epam/uui:DataTableMods",
    "value": [
     "border",
     "headerTextCase",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:DataTableProps",
    "value": [
     "columns",
     "filters",
     "getRows",
     "onCopy",
     "onScroll",
     "renderColumnsConfigurationModal",
     "renderNoResultsBlock",
     "renderRow",
     "showColumnsConfig"
    ]
   },
   {
    "typeRef": "@epam/uui:DataTableRowMods",
    "value": [
     "borderBottom"
    ]
   },
   {
    "typeRef": "@epam/uui:DatePickerBodyProps",
    "value": [
     "getDayCX",
     "isHoliday"
    ]
   },
   {
    "typeRef": "@epam/uui:DefaultNotificationProps",
    "value": [
     "actions"
    ]
   },
   {
    "typeRef": "@epam/uui:DropdownContainerMods",
    "value": [
     "padding",
     "vPadding"
    ]
   },
   {
    "typeRef": "@epam/uui:DropMarkerProps",
    "value": [
     "enableBlocker"
    ]
   },
   {
    "typeRef": "@epam/uui:DropSpotProps",
    "value": [
     "accept",
     "cx",
     "infoText",
     "onUploadFiles",
     "single"
    ]
   },
   {
    "typeRef": "@epam/uui:FileCardItem",
    "value": [
     "abortXHR",
     "progress"
    ]
   },
   {
    "typeRef": "@epam/uui:FileCardProps",
    "value": [
     "file",
     "width"
    ]
   },
   {
    "typeRef": "@epam/uui:FiltersPanelProps",
    "value": [
     "filters",
     "setTableState",
     "size",
     "tableState"
    ]
   },
   {
    "typeRef": "@epam/uui:HighlightRange",
    "value": [
     "from",
     "isHighlighted",
     "to"
    ]
   },
   {
    "typeRef": "@epam/uui:IconButtonMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/uui:IDropdownMenuContainer",
    "value": [
     "closeOnKey"
    ]
   },
   {
    "typeRef": "@epam/uui:IDropdownMenuItemProps",
    "value": [
     "indent",
     "isActive",
     "isSelected"
    ]
   },
   {
    "typeRef": "@epam/uui:IHasEditMode",
    "value": [
     "mode"
    ]
   },
   {
    "typeRef": "@epam/uui:IndeterminateBarMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:ITextPlaceholderProps",
    "value": [
     "isNotAnimated",
     "wordsCount"
    ]
   },
   {
    "typeRef": "@epam/uui:LinkButtonMods",
    "value": [
     "color",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:MainMenuAvatarProps",
    "value": [
     "avatarUrl",
     "icon"
    ]
   },
   {
    "typeRef": "@epam/uui:MainMenuButtonMods",
    "value": [
     "type"
    ]
   },
   {
    "typeRef": "@epam/uui:MainMenuIconProps",
    "value": [
     "icon"
    ]
   },
   {
    "typeRef": "@epam/uui:ModalWindowMods",
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": "@epam/uui:MultiSwitchProps",
    "value": [
     "color",
     "items"
    ]
   },
   {
    "typeRef": "@epam/uui:NotificationCardProps",
    "value": [
     "color",
     "icon"
    ]
   },
   {
    "typeRef": "@epam/uui:PanelMods",
    "value": [
     "margin",
     "shadow"
    ]
   },
   {
    "typeRef": "@epam/uui:PickerItemProps",
    "value": [
     "avatarUrl",
     "dataSourceState",
     "icon",
     "subtitle",
     "title"
    ]
   },
   {
    "typeRef": "@epam/uui:PickerListItemProps",
    "value": [
     "getName"
    ]
   },
   {
    "typeRef": "@epam/uui:PickerListProps",
    "value": [
     "noOptionsMessage",
     "renderModalToggler"
    ]
   },
   {
    "typeRef": "@epam/uui:PickerTogglerMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:PresetsPanelProps",
    "value": [
     "tableState"
    ]
   },
   {
    "typeRef": "@epam/uui:ProgressBarMods",
    "value": [
     "size",
     "striped"
    ]
   },
   {
    "typeRef": "@epam/uui:RadioInputMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:RangeDatePickerBodyProps",
    "value": [
     "focusPart",
     "isHoliday",
     "renderFooter",
     "renderHeader"
    ]
   },
   {
    "typeRef": "@epam/uui:RangeDatePickerProps",
    "value": [
     "getPlaceholder"
    ]
   },
   {
    "typeRef": "@epam/uui:RangeDatePickerValue",
    "value": [
     "from",
     "to"
    ]
   },
   {
    "typeRef": "@epam/uui:RichTextViewMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:RowMods",
    "value": [
     "borderBottom",
     "columnGap",
     "margin",
     "padding",
     "rowGap",
     "spacing",
     "topShadow",
     "vPadding"
    ]
   },
   {
    "typeRef": "@epam/uui:RowSizeMod",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:SizeMod",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:SwitchMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:TabButtonMods",
    "value": [
     "size",
     "withNotify"
    ]
   },
   {
    "typeRef": "@epam/uui:TagMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:TextAreaMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:TextInputMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:TextMods",
    "value": [
     "color",
     "font",
     "size"
    ]
   },
   {
    "typeRef": "@epam/uui:TextSettings",
    "value": [
     "fontSize",
     "lineHeight"
    ]
   },
   {
    "typeRef": "@epam/uui:TimePickerProps",
    "value": [
     "format",
     "minutesStep"
    ]
   },
   {
    "typeRef": "@epam/promo:AlertMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/promo:BadgeMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/promo:ButtonMods",
    "value": [
     "color",
     "fill"
    ]
   },
   {
    "typeRef": "@epam/promo:DropdownContainerMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/promo:ErrorHandlerProps",
    "value": [
     "getErrorInfo",
     "onNotificationError"
    ]
   },
   {
    "typeRef": "@epam/promo:IconButtonMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/promo:LinkButtonMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/promo:ModalWindowMods",
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": "@epam/promo:MultiSwitchMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/promo:NotificationCardMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/promo:PanelMods",
    "value": [
     "background",
     "margin",
     "shadow"
    ]
   },
   {
    "typeRef": "@epam/promo:RatingMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/promo:RichTextViewMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/promo:RowMods",
    "value": [
     "background"
    ]
   },
   {
    "typeRef": "@epam/promo:RowSizeMod",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/promo:ScrollBarsMods",
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": "@epam/promo:TextMods",
    "value": [
     "color",
     "font"
    ]
   },
   {
    "typeRef": "@epam/loveship:AlertMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/loveship:BadgeMods",
    "value": [
     "color",
     "fill",
     "shape",
     "size"
    ]
   },
   {
    "typeRef": "@epam/loveship:ButtonMods",
    "value": [
     "color",
     "fill",
     "shape",
     "size"
    ]
   },
   {
    "typeRef": "@epam/loveship:CheckboxMods",
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": "@epam/loveship:DropdownContainerMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/loveship:EditMode",
    "value": [
     "mode"
    ]
   },
   {
    "typeRef": "@epam/loveship:ErrorConfig",
    "value": [
     "getInfo"
    ]
   },
   {
    "typeRef": "@epam/loveship:ErrorPageProps",
    "value": [
     "errorPageConfig",
     "onNotificationError",
     "theme"
    ]
   },
   {
    "typeRef": "@epam/loveship:FontMod",
    "value": [
     "font"
    ]
   },
   {
    "typeRef": "@epam/loveship:IconButtonMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/loveship:LinkButtonMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/loveship:MakeMeItemProps",
    "value": [
     "api"
    ]
   },
   {
    "typeRef": "@epam/loveship:MakeMeUser",
    "value": [
     "avatarUrl",
     "email",
     "externalId",
     "jobTitle",
     "name"
    ]
   },
   {
    "typeRef": "@epam/loveship:ModalWindowMods",
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": "@epam/loveship:MultiSwitchMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/loveship:NotificationCardMods",
    "value": [
     "color"
    ]
   },
   {
    "typeRef": "@epam/loveship:PanelMods",
    "value": [
     "background",
     "margin",
     "shadow"
    ]
   },
   {
    "typeRef": "@epam/loveship:RadioInputMods",
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": "@epam/loveship:RatingMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/loveship:RichTextViewMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/loveship:RowMods",
    "value": [
     "background",
     "spacing",
     "type"
    ]
   },
   {
    "typeRef": "@epam/loveship:RowSizeMod",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/loveship:ScrollBarsMods",
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": "@epam/loveship:SizeMod",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/loveship:SliderRatingProps",
    "value": [
     "from",
     "getHandlerIcon",
     "getScaleIcon",
     "renderTooltip",
     "size",
     "tooltipColor",
     "withoutNa"
    ]
   },
   {
    "typeRef": "@epam/loveship:SnackbarCardProps",
    "value": [
     "snackType"
    ]
   },
   {
    "typeRef": "@epam/loveship:TabButtonMods",
    "value": [
     "theme"
    ]
   },
   {
    "typeRef": "@epam/loveship:TagMods",
    "value": [
     "fill"
    ]
   },
   {
    "typeRef": "@epam/loveship:TextInputMods",
    "value": [
     "size"
    ]
   },
   {
    "typeRef": "@epam/loveship:TextMods",
    "value": [
     "color",
     "font"
    ]
   },
   {
    "typeRef": "@epam/uui-editor:LinkElement",
    "value": [
     "href",
     "type"
    ]
   },
   {
    "typeRef": "@epam/uui-editor:PlaceholderPluginParams",
    "value": [
     "items"
    ]
   },
   {
    "typeRef": "@epam/uui-editor:PlateProps",
    "value": [
     "align",
     "url",
     "width"
    ]
   },
   {
    "typeRef": "@epam/uui-editor:SlateImageSize",
    "value": [
     "height",
     "width"
    ]
   },
   {
    "typeRef": "@epam/uui-editor:SlateProps",
    "value": [
     "data"
    ]
   },
   {
    "typeRef": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
    "value": [
     "className",
     "renderOnTop",
     "timelineController"
    ]
   },
   {
    "typeRef": "@epam/uui-timeline:Item",
    "value": [
     "color",
     "fillType",
     "from",
     "height",
     "maxPxPerDay",
     "minPixPerDay",
     "opacity",
     "priority",
     "to"
    ]
   },
   {
    "typeRef": "@epam/uui-timeline:Stage",
    "value": [
     "color",
     "endDate",
     "eventName",
     "name",
     "startDate"
    ]
   },
   {
    "typeRef": "@epam/uui-timeline:TimelineControllerOptions",
    "value": [
     "isHoliday",
     "maxScale",
     "minScale",
     "minVisibleDate",
     "minWidth"
    ]
   },
   {
    "typeRef": "@epam/uui-timeline:TimelineEventsBarProps",
    "value": [
     "stages",
     "timelineController"
    ]
   },
   {
    "typeRef": "@epam/uui-timeline:TimelineNavProps",
    "value": [
     "timelineController"
    ]
   },
   {
    "typeRef": "@epam/uui-timeline:TimelineScaleProps",
    "value": [
     "isDraggable",
     "isScaleChangeOnWheel",
     "shiftPercent"
    ]
   }
  ]
 },
 "missingTypeComment": {
  "totals": {
   "amountTypes": 509
  },
  "value": [
   "@epam/uui-core:AcceptDropParams",
   "@epam/uui-core:AnalyticsEvent",
   "@epam/uui-core:ApiCallErrorType",
   "@epam/uui-core:ApiCallInfo",
   "@epam/uui-core:ApiCallOptions",
   "@epam/uui-core:ApiContextProps",
   "@epam/uui-core:ApiExtensions",
   "@epam/uui-core:ApiRecoveryReason",
   "@epam/uui-core:ApiStatus",
   "@epam/uui-core:ApplyFilterOptions",
   "@epam/uui-core:ApplySearchOptions",
   "@epam/uui-core:ApplySortOptions",
   "@epam/uui-core:ArrayDataSourceProps",
   "@epam/uui-core:ArrayElement",
   "@epam/uui-core:ArrayListViewProps",
   "@epam/uui-core:ArrayPickerProps",
   "@epam/uui-core:AsyncDataSourceProps",
   "@epam/uui-core:AsyncListViewProps",
   "@epam/uui-core:BaseArrayListViewProps",
   "@epam/uui-core:BaseDatePickerProps",
   "@epam/uui-core:BaseListViewProps",
   "@epam/uui-core:BaseRangeDatePickerProps",
   "@epam/uui-core:BatchPromiseOptions",
   "@epam/uui-core:BlockTypes",
   "@epam/uui-core:ButtonBaseCoreProps",
   "@epam/uui-core:ButtonCoreProps",
   "@epam/uui-core:ButtonSemanticProps",
   "@epam/uui-core:CascadeSelection",
   "@epam/uui-core:CheckboxCoreProps",
   "@epam/uui-core:ClassValue",
   "@epam/uui-core:ColumnsConfig",
   "@epam/uui-core:CommonContexts",
   "@epam/uui-core:ContextProviderProps",
   "@epam/uui-core:CX",
   "@epam/uui-core:DataColumnProps",
   "@epam/uui-core:DataQuery",
   "@epam/uui-core:DataQueryFilter",
   "@epam/uui-core:DataQueryFilterCondition",
   "@epam/uui-core:DataQueryRange",
   "@epam/uui-core:DataSourceListCounts",
   "@epam/uui-core:DataSourceListProps",
   "@epam/uui-core:DataTableCellOptions",
   "@epam/uui-core:DataTableCellProps",
   "@epam/uui-core:DataTableColumnsConfigOptions",
   "@epam/uui-core:DataTableConfigModalParams",
   "@epam/uui-core:DataTableHeaderCellProps",
   "@epam/uui-core:DataTableHeaderRowProps",
   "@epam/uui-core:DataTableRowProps",
   "@epam/uui-core:DataTableSelectedCellData",
   "@epam/uui-core:DataTableState",
   "@epam/uui-core:DatePickerCoreProps",
   "@epam/uui-core:DndActorProps",
   "@epam/uui-core:DndActorRenderParams",
   "@epam/uui-core:DndContextState",
   "@epam/uui-core:DragGhostProps",
   "@epam/uui-core:DropdownBodyProps",
   "@epam/uui-core:DropdownProps",
   "@epam/uui-core:DropdownState",
   "@epam/uui-core:DropParams",
   "@epam/uui-core:DropPosition",
   "@epam/uui-core:FileUploadOptions",
   "@epam/uui-core:FileUploadResponse",
   "@epam/uui-core:FilterPredicate",
   "@epam/uui-core:FilterPredicateName",
   "@epam/uui-core:FiltersConfig",
   "@epam/uui-core:FlexCellProps",
   "@epam/uui-core:FlexRowProps",
   "@epam/uui-core:FormProps",
   "@epam/uui-core:FormSaveResponse",
   "@epam/uui-core:FormState",
   "@epam/uui-core:IAdaptiveItem",
   "@epam/uui-core:IAnalyticableClick",
   "@epam/uui-core:IAnalyticableOnChange",
   "@epam/uui-core:IAnalyticsContext",
   "@epam/uui-core:IAnalyticsListener",
   "@epam/uui-core:IApiContext",
   "@epam/uui-core:IBaseContext",
   "@epam/uui-core:ICanBeFixed",
   "@epam/uui-core:ICanBeRequired",
   "@epam/uui-core:ICheckable",
   "@epam/uui-core:IColumnConfig",
   "@epam/uui-core:IContextProviderSsrProps",
   "@epam/uui-core:IdAndName",
   "@epam/uui-core:IDataSource",
   "@epam/uui-core:IDataSourceView",
   "@epam/uui-core:IDndActor",
   "@epam/uui-core:IDndContext",
   "@epam/uui-core:IDropdownBodyProps",
   "@epam/uui-core:IErrorContext",
   "@epam/uui-core:IFilterConfig",
   "@epam/uui-core:IFilterItemBodyProps",
   "@epam/uui-core:IFilterPredicate",
   "@epam/uui-core:IFormApi",
   "@epam/uui-core:IHasChildren",
   "@epam/uui-core:IHasForwardedRef",
   "@epam/uui-core:IHasIcon",
   "@epam/uui-core:IHasPlaceholder",
   "@epam/uui-core:IHasRawProps",
   "@epam/uui-core:IHasTabIndex",
   "@epam/uui-core:IHistory4",
   "@epam/uui-core:ILayoutContext",
   "@epam/uui-core:ILens",
   "@epam/uui-core:ILockContext",
   "@epam/uui-core:IMap",
   "@epam/uui-core:IModal",
   "@epam/uui-core:IModalContext",
   "@epam/uui-core:INotification",
   "@epam/uui-core:INotificationContext",
   "@epam/uui-core:IPresetsApi",
   "@epam/uui-core:IProcessRequest",
   "@epam/uui-core:IRouterContext",
   "@epam/uui-core:ISkin",
   "@epam/uui-core:ITablePreset",
   "@epam/uui-core:ITableState",
   "@epam/uui-core:ItemsComparator",
   "@epam/uui-core:ITree",
   "@epam/uui-core:IUserSettingsContext",
   "@epam/uui-core:LabeledInputCoreProps",
   "@epam/uui-core:LayoutLayer",
   "@epam/uui-core:LazyDataSourceApiRequestOptions",
   "@epam/uui-core:LazyDataSourceProps",
   "@epam/uui-core:LazyListViewProps",
   "@epam/uui-core:Link",
   "@epam/uui-core:ListApiResponse",
   "@epam/uui-core:ListApiSettings",
   "@epam/uui-core:LoadingStatus",
   "@epam/uui-core:LoadTreeOptions",
   "@epam/uui-core:Metadata",
   "@epam/uui-core:ModalBlockerProps",
   "@epam/uui-core:ModalComponentProps",
   "@epam/uui-core:ModalFooterCoreProps",
   "@epam/uui-core:ModalHeaderCoreProps",
   "@epam/uui-core:ModalOperation",
   "@epam/uui-core:ModalWindowProps",
   "@epam/uui-core:NotificationOperation",
   "@epam/uui-core:NotificationParams",
   "@epam/uui-core:PickerBaseOptions",
   "@epam/uui-core:PickerBaseProps",
   "@epam/uui-core:PickerBindingProps",
   "@epam/uui-core:PickerBindingValueType",
   "@epam/uui-core:PickerFilterConfig",
   "@epam/uui-core:PickerFooterProps",
   "@epam/uui-core:RangeDatePickerCoreProps",
   "@epam/uui-core:RangeDatePickerInputType",
   "@epam/uui-core:RangeDatePickerPresets",
   "@epam/uui-core:RangeDatePickerPresetValue",
   "@epam/uui-core:RangeDatePickerValue",
   "@epam/uui-core:RenderCellProps",
   "@epam/uui-core:RenderEditorProps",
   "@epam/uui-core:ScrollAlign",
   "@epam/uui-core:ScrollToConfig",
   "@epam/uui-core:SearchResultItem",
   "@epam/uui-core:SinglePickerProps",
   "@epam/uui-core:SkinContextComponentProps",
   "@epam/uui-core:SortDirection",
   "@epam/uui-core:SortingOption",
   "@epam/uui-core:SpinnerCoreProps",
   "@epam/uui-core:StatefulProps",
   "@epam/uui-core:TableFiltersConfig",
   "@epam/uui-core:TextInputCoreProps",
   "@epam/uui-core:TimePickerValue",
   "@epam/uui-core:TMouseCoords",
   "@epam/uui-core:TooltipCoreProps",
   "@epam/uui-core:TreeNodeInfo",
   "@epam/uui-core:TreeParams",
   "@epam/uui-core:UseFormProps",
   "@epam/uui-core:UseTableStateHookParams",
   "@epam/uui-core:UseUuiErrorOptions",
   "@epam/uui-core:UseUuiErrorProps",
   "@epam/uui-core:UseUuiServicesProps",
   "@epam/uui-core:UuiContexts",
   "@epam/uui-core:UuiErrorInfo",
   "@epam/uui-core:UuiRecoveryErrorInfo",
   "@epam/uui-core:UuiServicesProps",
   "@epam/uui-core:ValidationMode",
   "@epam/uui-core:VirtualListRange",
   "@epam/uui-core:VPanelProps",
   "@epam/uui-components:AccordionProps",
   "@epam/uui-components:AccordionState",
   "@epam/uui-components:AdaptiveItemProps",
   "@epam/uui-components:AdaptivePanelProps",
   "@epam/uui-components:AnchorProps",
   "@epam/uui-components:ArrayPickerProps",
   "@epam/uui-components:AvatarProps",
   "@epam/uui-components:AvatarStackProps",
   "@epam/uui-components:BaseRatingProps",
   "@epam/uui-components:BaseTimePickerProps",
   "@epam/uui-components:BlockerProps",
   "@epam/uui-components:BurgerProps",
   "@epam/uui-components:ButtonBaseProps",
   "@epam/uui-components:ButtonProps",
   "@epam/uui-components:CalendarPresetsProps",
   "@epam/uui-components:CalendarProps",
   "@epam/uui-components:CarouselProps",
   "@epam/uui-components:CarouselState",
   "@epam/uui-components:CheckboxGroupProps",
   "@epam/uui-components:CheckboxProps",
   "@epam/uui-components:ColumnsConfigurationRowProps",
   "@epam/uui-components:ControlGroupProps",
   "@epam/uui-components:ControlIconProps",
   "@epam/uui-components:DataSourceKeyboardParams",
   "@epam/uui-components:DataTableSelectionProviderProps",
   "@epam/uui-components:DatePickerBodyBaseOptions",
   "@epam/uui-components:DatePickerBodyBaseProps",
   "@epam/uui-components:DatePickerState",
   "@epam/uui-components:DayProps",
   "@epam/uui-components:DragHandleProps",
   "@epam/uui-components:DropdownContainerProps",
   "@epam/uui-components:DropSpotRenderParams",
   "@epam/uui-components:FlexSpacerProps",
   "@epam/uui-components:HeaderCellContentProps",
   "@epam/uui-components:IconButtonBaseProps",
   "@epam/uui-components:InputAddonProps",
   "@epam/uui-components:IProgressBarProps",
   "@epam/uui-components:IRenderInputProps",
   "@epam/uui-components:IScrollSpyApi",
   "@epam/uui-components:IScrollSpyProps",
   "@epam/uui-components:LabeledInputProps",
   "@epam/uui-components:MainMenuCustomElementProps",
   "@epam/uui-components:MainMenuDropdownProps",
   "@epam/uui-components:MainMenuLogoProps",
   "@epam/uui-components:MainMenuProps",
   "@epam/uui-components:MonthSelectionProps",
   "@epam/uui-components:NumericInputProps",
   "@epam/uui-components:PaginatorParams",
   "@epam/uui-components:PaginatorProps",
   "@epam/uui-components:PickerBindingHelper",
   "@epam/uui-components:PickerBindingProps",
   "@epam/uui-components:PickerBindingValueType",
   "@epam/uui-components:PickerBodyBaseProps",
   "@epam/uui-components:PickerBodyValue",
   "@epam/uui-components:PickerInputBaseProps",
   "@epam/uui-components:PickerListBaseProps",
   "@epam/uui-components:PickerModalArrayProps",
   "@epam/uui-components:PickerModalOptions",
   "@epam/uui-components:PickerModalScalarProps",
   "@epam/uui-components:PickerTogglerProps",
   "@epam/uui-components:PortalProps",
   "@epam/uui-components:PositionValues",
   "@epam/uui-components:RadioGroupItem",
   "@epam/uui-components:RadioGroupProps",
   "@epam/uui-components:RadioInputProps",
   "@epam/uui-components:RangeSliderState",
   "@epam/uui-components:RangeSliderValue",
   "@epam/uui-components:RatingProps",
   "@epam/uui-components:RichTextViewProps",
   "@epam/uui-components:ScrollbarProps",
   "@epam/uui-components:ScrollbarsApi",
   "@epam/uui-components:SelectionContextState",
   "@epam/uui-components:SinglePickerProps",
   "@epam/uui-components:SliderBaseProps",
   "@epam/uui-components:SliderBaseState",
   "@epam/uui-components:SnackbarProps",
   "@epam/uui-components:SpinnerProps",
   "@epam/uui-components:SwitchProps",
   "@epam/uui-components:TextAreaProps",
   "@epam/uui-components:TextInputProps",
   "@epam/uui-components:TextProps",
   "@epam/uui-components:TimePickerBodyProps",
   "@epam/uui-components:TooltipProps",
   "@epam/uui-components:TooltipState",
   "@epam/uui-components:TreeListItem",
   "@epam/uui-components:TreeProps",
   "@epam/uui-components:UsePickerInputProps",
   "@epam/uui-components:UsePickerListProps",
   "@epam/uui-components:UsePickerModalProps",
   "@epam/uui-components:ViewType",
   "@epam/uui-components:VirtualListProps",
   "@epam/uui-components:VirtualListRenderRowsParams",
   "@epam/uui-components:YearSelectionProps",
   "@epam/uui:AccordionMods",
   "@epam/uui:AlertProps",
   "@epam/uui:BadgeColor",
   "@epam/uui:BadgeFill",
   "@epam/uui:BadgeMods",
   "@epam/uui:BadgeProps",
   "@epam/uui:BadgeSize",
   "@epam/uui:BurgerButtonMods",
   "@epam/uui:BurgerGroupHeaderProps",
   "@epam/uui:BurgerMods",
   "@epam/uui:BurgerSearchProps",
   "@epam/uui:ButtonColor",
   "@epam/uui:ButtonMode",
   "@epam/uui:ButtonMods",
   "@epam/uui:ButtonProps",
   "@epam/uui:ButtonSemanticColor",
   "@epam/uui:CheckboxMods",
   "@epam/uui:CheckboxProps",
   "@epam/uui:ColorMod",
   "@epam/uui:ColumnsConfigurationModalProps",
   "@epam/uui:ConfirmationModalWindowProps",
   "@epam/uui:ControlSize",
   "@epam/uui:DataPickerBodyProps",
   "@epam/uui:DataPickerRowProps",
   "@epam/uui:DataRowsContainerProps",
   "@epam/uui:DataTableCellMods",
   "@epam/uui:DataTableHeaderCellMods",
   "@epam/uui:DataTableHeaderRowMods",
   "@epam/uui:DataTableMods",
   "@epam/uui:DataTableProps",
   "@epam/uui:DataTableRowMods",
   "@epam/uui:DatePickerBodyProps",
   "@epam/uui:DatePickerProps",
   "@epam/uui:DefaultNotificationProps",
   "@epam/uui:DropdownContainerMods",
   "@epam/uui:DropdownContainerProps",
   "@epam/uui:DropMarkerProps",
   "@epam/uui:DropSpotProps",
   "@epam/uui:EpamBadgeSemanticColor",
   "@epam/uui:FileCardItem",
   "@epam/uui:FileCardProps",
   "@epam/uui:FillStyle",
   "@epam/uui:FiltersPanelProps",
   "@epam/uui:FlexCellMods",
   "@epam/uui:FlexRowProps",
   "@epam/uui:FontStyle",
   "@epam/uui:GlobalMenuProps",
   "@epam/uui:HighlightRange",
   "@epam/uui:IconButtonMods",
   "@epam/uui:IconButtonProps",
   "@epam/uui:IconColor",
   "@epam/uui:IDropdownMenuContainer",
   "@epam/uui:IDropdownMenuItemProps",
   "@epam/uui:IHasEditMode",
   "@epam/uui:IndeterminateBarMods",
   "@epam/uui:InputType",
   "@epam/uui:ITextPlaceholderProps",
   "@epam/uui:LabeledInputMods",
   "@epam/uui:LinkButtonColorType",
   "@epam/uui:LinkButtonMods",
   "@epam/uui:LinkButtonProps",
   "@epam/uui:MainMenuAvatarProps",
   "@epam/uui:MainMenuButtonMods",
   "@epam/uui:MainMenuIconProps",
   "@epam/uui:MainMenuMods",
   "@epam/uui:MainMenuSearchProps",
   "@epam/uui:ModalFooterProps",
   "@epam/uui:ModalHeaderProps",
   "@epam/uui:ModalWindowMods",
   "@epam/uui:ModalWindowProps",
   "@epam/uui:MultiSwitchProps",
   "@epam/uui:NotificationCardProps",
   "@epam/uui:NumericInputMods",
   "@epam/uui:NumericInputProps",
   "@epam/uui:PanelMods",
   "@epam/uui:PickerInputProps",
   "@epam/uui:PickerItemProps",
   "@epam/uui:PickerListItemProps",
   "@epam/uui:PickerListProps",
   "@epam/uui:PickerModalProps",
   "@epam/uui:pickerPart",
   "@epam/uui:PickerTogglerMods",
   "@epam/uui:PresetsPanelProps",
   "@epam/uui:ProgressBarMods",
   "@epam/uui:RadioInputMods",
   "@epam/uui:RadioInputProps",
   "@epam/uui:RangeDatePickerBodyProps",
   "@epam/uui:RangeDatePickerProps",
   "@epam/uui:RangeDatePickerValue",
   "@epam/uui:RichTextViewMods",
   "@epam/uui:RowMods",
   "@epam/uui:RowSize",
   "@epam/uui:RowSizeMod",
   "@epam/uui:SemanticColor",
   "@epam/uui:SizeMod",
   "@epam/uui:SpinnerProps",
   "@epam/uui:SwitchMods",
   "@epam/uui:TabButtonMods",
   "@epam/uui:TabButtonProps",
   "@epam/uui:TagMods",
   "@epam/uui:TagProps",
   "@epam/uui:TagSize",
   "@epam/uui:TextAreaMods",
   "@epam/uui:TextAreaProps",
   "@epam/uui:TextInputMods",
   "@epam/uui:TextInputProps",
   "@epam/uui:TextMods",
   "@epam/uui:TextPlaceholderProps",
   "@epam/uui:TextProps",
   "@epam/uui:TextSettings",
   "@epam/uui:TextSize",
   "@epam/uui:TimePickerProps",
   "@epam/uui:TooltipMods",
   "@epam/uui:TooltipProps",
   "@epam/uui:UuiMultiSwitchColor",
   "@epam/uui:VerticalTabButtonProps",
   "@epam/promo:AlertMods",
   "@epam/promo:AlertProps",
   "@epam/promo:BadgeMods",
   "@epam/promo:BadgeProps",
   "@epam/promo:ButtonColor",
   "@epam/promo:ButtonMods",
   "@epam/promo:ButtonProps",
   "@epam/promo:ColorMod",
   "@epam/promo:ControlShape",
   "@epam/promo:ControlSize",
   "@epam/promo:DropdownContainerMods",
   "@epam/promo:EpamAdditionalColor",
   "@epam/promo:EpamColor",
   "@epam/promo:EpamGrayscaleColor",
   "@epam/promo:EpamPrimaryColor",
   "@epam/promo:ErrorHandlerProps",
   "@epam/promo:FillStyle",
   "@epam/promo:FontMod",
   "@epam/promo:FontStyle",
   "@epam/promo:IconButtonMods",
   "@epam/promo:IconButtonProps",
   "@epam/promo:IconColor",
   "@epam/promo:IconContainerColors",
   "@epam/promo:IconContainerMods",
   "@epam/promo:IHasEditMode",
   "@epam/promo:LinkButtonMods",
   "@epam/promo:LinkButtonProps",
   "@epam/promo:ModalWindowMods",
   "@epam/promo:MultiSwitchColor",
   "@epam/promo:MultiSwitchMods",
   "@epam/promo:MultiSwitchProps",
   "@epam/promo:NotificationCardMods",
   "@epam/promo:NotificationCardProps",
   "@epam/promo:PanelMods",
   "@epam/promo:RatingMods",
   "@epam/promo:RichTextViewMods",
   "@epam/promo:RowMods",
   "@epam/promo:RowSize",
   "@epam/promo:RowSizeMod",
   "@epam/promo:ScrollBarsMods",
   "@epam/promo:SizeMod",
   "@epam/promo:SliderMods",
   "@epam/uui:TextInputProps",
   "@epam/promo:TextMods",
   "@epam/promo:TextProps",
   "@epam/promo:TextSize",
   "@epam/promo:TooltipMods",
   "@epam/promo:TooltipProps",
   "@epam/promo:VirtualListMods",
   "@epam/loveship:AlertMods",
   "@epam/loveship:AlertProps",
   "@epam/loveship:BadgeMods",
   "@epam/loveship:BadgeProps",
   "@epam/loveship:ButtonColorType",
   "@epam/loveship:ButtonMods",
   "@epam/loveship:ButtonProps",
   "@epam/loveship:CheckboxMods",
   "@epam/loveship:ColorMod",
   "@epam/loveship:ControlShape",
   "@epam/loveship:ControlSize",
   "@epam/loveship:DropdownContainerMods",
   "@epam/loveship:EditMode",
   "@epam/loveship:EpamAdditionalColor",
   "@epam/loveship:EpamColor",
   "@epam/loveship:EpamGrayscaleColor",
   "@epam/loveship:EpamPrimaryColor",
   "@epam/loveship:ErrorConfig",
   "@epam/loveship:ErrorPageProps",
   "@epam/loveship:FillStyle",
   "@epam/loveship:FontMod",
   "@epam/loveship:FontStyle",
   "@epam/loveship:IconButtonMods",
   "@epam/loveship:IconButtonProps",
   "@epam/loveship:IconContainerMods",
   "@epam/loveship:LinkButtonMods",
   "@epam/loveship:LinkButtonProps",
   "@epam/loveship:MakeMeItemProps",
   "@epam/loveship:MakeMeUser",
   "@epam/loveship:ModalWindowMods",
   "@epam/loveship:MultiSwitchColor",
   "@epam/loveship:MultiSwitchMods",
   "@epam/loveship:MultiSwitchProps",
   "@epam/loveship:NotificationCardMods",
   "@epam/loveship:NotificationCardProps",
   "@epam/loveship:PanelMods",
   "@epam/loveship:RadioInputMods",
   "@epam/loveship:RadioInputProps",
   "@epam/loveship:RangeSliderMods",
   "@epam/loveship:RatingMods",
   "@epam/loveship:RichTextViewMods",
   "@epam/loveship:RowMods",
   "@epam/loveship:RowSize",
   "@epam/loveship:RowSizeMod",
   "@epam/loveship:ScrollBarsMods",
   "@epam/loveship:SizeMod",
   "@epam/loveship:SliderRatingProps",
   "@epam/loveship:SnackbarCardProps",
   "@epam/loveship:TabButtonMods",
   "@epam/loveship:TagMods",
   "@epam/loveship:TextInputMods",
   "@epam/loveship:TextMods",
   "@epam/loveship:TextProps",
   "@epam/loveship:TextSize",
   "@epam/loveship:TooltipMods",
   "@epam/loveship:TooltipProps",
   "@epam/loveship:VirtualListMods",
   "@epam/uui-editor:EditorValue",
   "@epam/uui-editor:IImageElement",
   "@epam/uui-editor:LinkElement",
   "@epam/uui-editor:PlaceholderPluginParams",
   "@epam/uui-editor:PlateImgAlign",
   "@epam/uui-editor:PlateProps",
   "@epam/uui-editor:SlateImageSize",
   "@epam/uui-editor:SlateImgAlign",
   "@epam/uui-editor:SlateProps",
   "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
   "@epam/uui-timeline:Item",
   "@epam/uui-timeline:Stage",
   "@epam/uui-timeline:TimelineControllerOptions",
   "@epam/uui-timeline:TimelineEventsBarProps",
   "@epam/uui-timeline:TimelineGridProps",
   "@epam/uui-timeline:TimelineNavProps",
   "@epam/uui-timeline:TimelineScaleProps"
  ]
 },
 "ignoredExports": {
  "totals": {
   "allExports": 740,
   "byModule": {
    "@epam/uui-core": 133,
    "@epam/uui-components": 106,
    "@epam/uui": 148,
    "@epam/promo": 127,
    "@epam/loveship": 139,
    "@epam/uui-editor": 62,
    "@epam/uui-timeline": 25
   }
  },
  "value": {
   "@epam/uui-core": {
    "ClassDeclaration": [
     "AnalyticsContext",
     "ApiCallError",
     "ApiContext",
     "ArrayDataSource",
     "ArrayListView",
     "AsyncDataSource",
     "AsyncListView",
     "BaseDataSource",
     "BaseListView",
     "Debouncer",
     "DndActor",
     "DndContext",
     "DragGhost",
     "ErrorContext",
     "GAListener",
     "HistoryAdaptedRouter",
     "LayoutContext",
     "LazyDataSource",
     "LazyListView",
     "LazyLoadedMap",
     "ListApiCache",
     "Lock",
     "LockContext",
     "ModalContext",
     "ModalOperationCancelled",
     "NextRouterAdapter",
     "NotificationContext",
     "Router6AdaptedRouter",
     "SkinContext",
     "StubAdaptedRouter",
     "Tree",
     "UuiError"
    ],
    "VariableDeclaration": [
     "applyColumnsConfig",
     "blankValidationState",
     "CascadeSelectionTypes",
     "clearEmptyValueFromRecord",
     "cx",
     "devLogger",
     "directionMode",
     "FAILED",
     "forwardRef",
     "getCalculatedValue",
     "getColumnsConfig",
     "getDecimalLength",
     "getMinMaxValidatedValue",
     "getSeparatedValue",
     "i18n",
     "IEditableDebouncer",
     "isClientSide",
     "isMobile",
     "labelMod",
     "Lens",
     "LOADED",
     "LOADING",
     "maxOrderStr",
     "minOrderStr",
     "mobilePopperModifier",
     "NOT_FOUND_RECORD",
     "parseIconViewbox",
     "PENDING",
     "queryToSearch",
     "ROOT_ID",
     "searchToQuery",
     "Stateful",
     "UNKNOWN",
     "urlParser",
     "useAppMobileHeight",
     "useColumnsConfig",
     "useForceUpdate",
     "useLayer",
     "useLayoutEffectSafeForSsr",
     "useTableState",
     "useTableStateImpl",
     "useUuiError",
     "useUuiServices",
     "UuiContext",
     "uuiContextTypes",
     "uuiDataTableHeaderCell",
     "uuiDndState",
     "uuiElement",
     "uuiMarkers",
     "uuiMod",
     "uuiScrollShadows",
     "uuiSkin",
     "validate"
    ],
    "FunctionDeclaration": [
     "arrayToMatrix",
     "batch",
     "blurFocusedElement",
     "closestTargetParentByCondition",
     "ContextProvider",
     "deleteCookie",
     "Form",
     "formatBytes",
     "getBeforeUnloadSingletone",
     "getBrowser",
     "getCookie",
     "getFilterPredicate",
     "getOffset",
     "getOrderBetween",
     "getOrderComparer",
     "getRouter6BlockFn",
     "getScreenSize",
     "getScrollParentOfEventTarget",
     "getSearchFilter",
     "handleSpaceKey",
     "isAnyParentHasClass",
     "isEventTargetInsideClickable",
     "isEventTargetInsideDraggable",
     "isEventTargetInsideInput",
     "isFocusReceiverInsideFocusLock",
     "isUrl",
     "mergeValidation",
     "parseStringToCSSProperties",
     "prependHttp",
     "preventDefaultIfTargetFocused",
     "releasePointerCaptureOnEventTarget",
     "runDataQuery",
     "setCookie",
     "simplifyPredicates",
     "skinComponent",
     "useArrayDataSource",
     "useAsyncDataSource",
     "useForm",
     "useLazyDataSource",
     "useList",
     "usePrevious",
     "useScrollShadows",
     "useUuiContext",
     "useUuiServicesSsr",
     "useVirtualList",
     "validateServerErrorState",
     "withMods"
    ],
    "EnumDeclaration": [
     "Browser"
    ]
   },
   "@epam/uui-components": {
    "ClassDeclaration": [
     "Accordion",
     "AnchorImpl",
     "BaseDatePicker",
     "BaseRangeDatePicker",
     "BaseRating",
     "BaseTimePicker",
     "Blocker",
     "Burger",
     "Button",
     "ButtonBase",
     "Calendar",
     "CalendarPresets",
     "Carousel",
     "Checkbox",
     "CheckboxGroup",
     "ControlGroup",
     "DataPickerRow",
     "DataTableHeaderCell",
     "DataTableHeaderRow",
     "DatePickerBodyBase",
     "Day",
     "DragHandle",
     "Dropdown",
     "DropSpot",
     "ErrorCatch",
     "IconButton",
     "InputAddon",
     "LabeledInput",
     "MainMenu",
     "MainMenuCustomElement",
     "MainMenuLogo",
     "ModalBlocker",
     "Modals",
     "ModalWindow",
     "MonthSelection",
     "Paginator",
     "PickerBodyBase",
     "RadioGroup",
     "RadioInput",
     "RangeSlider",
     "Rating",
     "RichTextView",
     "Slider",
     "SliderBase",
     "Snackbar",
     "Spinner",
     "Switch",
     "Text",
     "TextArea",
     "TimePickerBody",
     "UploadFileToggler",
     "VPanel",
     "YearSelection"
    ],
    "FunctionDeclaration": [
     "AdaptivePanel",
     "applyValueToDataSourceState",
     "dataSourceStateToValue",
     "DataTableCell",
     "DataTableSelectionProvider",
     "FlexSpacer",
     "NumericInput",
     "PortalRoot",
     "ScrollSpy",
     "Tooltip",
     "Tree",
     "useColumnsConfiguration",
     "usePicker",
     "usePickerInput",
     "usePickerList",
     "usePickerModal",
     "useScrollSpy"
    ],
    "VariableDeclaration": [
     "Anchor",
     "Avatar",
     "AvatarStack",
     "DataTableRow",
     "DataTableSelectionContext",
     "defaultFormat",
     "DropdownContainer",
     "FlexCell",
     "FlexRow",
     "handleDataSourceKeyboard",
     "i18n",
     "IconContainer",
     "PickerToggler",
     "Portal",
     "ProgressBar",
     "ScrollBars",
     "supportedDateFormats",
     "Svg",
     "TextInput",
     "toCustomDateFormat",
     "toCustomDateRangeFormat",
     "toValueDateFormat",
     "toValueDateRangeFormat",
     "uuiBurger",
     "uuiDatePickerBodyBase",
     "uuiDaySelection",
     "uuiInputElements",
     "uuiMainMenu",
     "uuiMonthSelection",
     "uuiNumericInput",
     "uuiPresets",
     "uuiSlider",
     "uuiTimePicker",
     "uuiYearSelection",
     "valueFormat",
     "VirtualList"
    ]
   },
   "@epam/uui": {
    "VariableDeclaration": [
     "Accordion",
     "Alert",
     "allButtonColors",
     "allButtonModes",
     "allButtonSemanticColors",
     "allEpamBadgeSemanticColors",
     "allFillStyles",
     "allFontStyles",
     "allIconColors",
     "allLinkButtonColors",
     "allRowSizes",
     "allSemanticColors",
     "allSizes",
     "allTextSizes",
     "Anchor",
     "Avatar",
     "AvatarStack",
     "Badge",
     "Blocker",
     "Burger",
     "BurgerButton",
     "Button",
     "Calendar",
     "Checkbox",
     "CheckboxGroup",
     "ColumnHeaderDropdown",
     "ControlGroup",
     "DataPickerFooter",
     "DataPickerHeader",
     "DataTableHeaderRow",
     "DataTableRow",
     "defaultPredicates",
     "DropdownContainer",
     "DropdownMenuBody",
     "DropdownMenuButton",
     "ErrorAlert",
     "ErrorNotification",
     "FileCard",
     "FiltersPanel",
     "FlexCell",
     "FlexRow",
     "getHighlightedSearchMatches",
     "getHighlightRanges",
     "GlobalMenu",
     "HintAlert",
     "HintNotification",
     "i18n",
     "IconButton",
     "IconContainer",
     "IndeterminateBar",
     "IndicatorBar",
     "InputAddon",
     "LabeledInput",
     "LinkButton",
     "MainMenu",
     "MainMenuAvatar",
     "MainMenuButton",
     "MainMenuIcon",
     "MainMenuSearch",
     "MobileDropdownWrapper",
     "ModalBlocker",
     "ModalWindow",
     "MultiSwitch",
     "NotificationCard",
     "NumericInput",
     "Panel",
     "PickerToggler",
     "ProgressBar",
     "propsMods",
     "RadioGroup",
     "RadioInput",
     "rangeDatePickerPresets",
     "renderCell",
     "renderDropMarkers",
     "RichTextView",
     "ScrollBars",
     "SearchInput",
     "Spinner",
     "SuccessAlert",
     "SuccessNotification",
     "SvgCircleProgress",
     "Switch",
     "TabButton",
     "Tag",
     "Text",
     "TextArea",
     "TextInput",
     "TextPlaceholder",
     "Tooltip",
     "useColumnsWithFilters",
     "uuiDatePickerBody",
     "VerticalTabButton",
     "VirtualList",
     "WarningAlert",
     "WarningNotification"
    ],
    "FunctionDeclaration": [
     "applyBadgeMods",
     "applyButtonMods",
     "applyCheckboxMods",
     "applyDateSelectionMods",
     "applyInputAddonMods",
     "applyNumericInputMods",
     "applyProgressBarMods",
     "applySpinnerMods",
     "applySwitchMods",
     "applyTagMods",
     "applyTextAreaMods",
     "applyTextInputMods",
     "BurgerGroupHeader",
     "BurgerSearch",
     "ColumnsConfigurationModal",
     "DataRowsContainer",
     "DataTable",
     "DataTableCell",
     "Dropdown",
     "DropdownMenuHeader",
     "DropdownMenuSplitter",
     "DropdownMenuSwitchButton",
     "DropdownSubMenu",
     "DropMarker",
     "FilterItemBody",
     "FlexSpacer",
     "Form",
     "getTextClasses",
     "Paginator",
     "PickerInput",
     "PickerList",
     "PickerListItem",
     "PickerModal",
     "PresetsPanel",
     "useForm",
     "weekCount"
    ],
    "ClassDeclaration": [
     "ClearNotification",
     "ConfirmationModal",
     "DataPickerBody",
     "DataPickerRow",
     "DataTableHeaderCell",
     "DatePicker",
     "DatePickerBody",
     "DropSpot",
     "MainMenuDropdown",
     "ModalFooter",
     "ModalHeader",
     "PickerItem",
     "RangeDatePicker",
     "RangeDatePickerBody",
     "TimePicker"
    ],
    "EnumDeclaration": [
     "EditMode",
     "IDropdownControlKeys"
    ]
   },
   "@epam/promo": {
    "VariableDeclaration": [
     "Accordion",
     "Alert",
     "allBorderStyles",
     "allEpamAdditionalColors",
     "allEpamGrayscaleColors",
     "allEpamPrimaryColors",
     "allFillStyles",
     "allFontStyles",
     "allIconColors",
     "allIconContainerColors",
     "allRowSizes",
     "allSizes",
     "allTextSizes",
     "Anchor",
     "Avatar",
     "AvatarStack",
     "Badge",
     "Blocker",
     "Burger",
     "BurgerButton",
     "Button",
     "Calendar",
     "Checkbox",
     "CheckboxGroup",
     "commonControlColors",
     "ControlGroup",
     "ControlWrapper",
     "DataPickerFooter",
     "DataTableHeaderRow",
     "DataTableRow",
     "defaultPredicates",
     "DropdownContainer",
     "DropdownMenuBody",
     "DropdownMenuButton",
     "ErrorAlert",
     "ErrorNotification",
     "ErrorPage",
     "FileCard",
     "FiltersPanel",
     "FlexCell",
     "FlexRow",
     "getErrorPageConfig",
     "getRecoveryMessageConfig",
     "GlobalMenu",
     "HintAlert",
     "HintNotification",
     "i18n",
     "IconButton",
     "IconContainer",
     "IndeterminateBar",
     "IndicatorBar",
     "LabeledInput",
     "LinkButton",
     "MainMenu",
     "MainMenuAvatar",
     "MainMenuButton",
     "MainMenuIcon",
     "MainMenuSearch",
     "ModalBlocker",
     "ModalWindow",
     "MultiSwitch",
     "NotificationCard",
     "NumericInput",
     "Panel",
     "PickerToggler",
     "ProgressBar",
     "RadioGroup",
     "RadioInput",
     "Rating",
     "RichTextView",
     "ScrollBars",
     "SearchInput",
     "skinContext",
     "Slider",
     "Spinner",
     "SuccessAlert",
     "SuccessNotification",
     "SvgCircleProgress",
     "Switch",
     "TabButton",
     "Tag",
     "Text",
     "TextArea",
     "TextInput",
     "TextPlaceholder",
     "Tooltip",
     "VerticalTabButton",
     "VirtualList",
     "WarningAlert",
     "WarningNotification"
    ],
    "FunctionDeclaration": [
     "applyDropdownContainerMods",
     "applyIconContainerMods",
     "applySliderMods",
     "BurgerSearch",
     "ColumnsConfigurationModal",
     "DataTable",
     "DataTableCell",
     "Dropdown",
     "DropdownMenuHeader",
     "DropdownMenuSplitter",
     "DropdownMenuSwitchButton",
     "DropdownSubMenu",
     "DropMarker",
     "ErrorHandler",
     "FlexSpacer",
     "Form",
     "Paginator",
     "PickerInput",
     "PickerList",
     "PickerModal",
     "PresetsPanel",
     "useForm"
    ],
    "ClassDeclaration": [
     "ClearNotification",
     "ConfirmationModal",
     "DataPickerBody",
     "DataPickerRow",
     "DatePicker",
     "DropSpot",
     "MainMenuCustomElement",
     "MainMenuDropdown",
     "MainMenuLogo",
     "ModalFooter",
     "ModalHeader",
     "PickerItem",
     "RangeDatePicker",
     "TimePicker"
    ],
    "EnumDeclaration": [
     "EditMode"
    ]
   },
   "@epam/loveship": {
    "VariableDeclaration": [
     "Accordion",
     "Alert",
     "allBorderStyles",
     "allEpamAdditionalColors",
     "allEpamGrayscaleColors",
     "allEpamPrimaryColors",
     "allFillStyles",
     "allFontStyles",
     "allRowSizes",
     "allSizes",
     "allTextSizes",
     "Anchor",
     "Avatar",
     "AvatarStack",
     "Badge",
     "Blocker",
     "Burger",
     "BurgerButton",
     "Button",
     "Calendar",
     "Checkbox",
     "CheckboxGroup",
     "commonControlColors",
     "ControlGroup",
     "ControlWrapper",
     "DataPickerFooter",
     "DataTableHeaderRow",
     "DataTableRow",
     "defaultPredicates",
     "DropdownContainer",
     "DropdownMenuBody",
     "DropdownMenuButton",
     "ErrorAlert",
     "ErrorNotification",
     "FileCard",
     "FiltersPanel",
     "FlexCell",
     "FlexRow",
     "getDefaultErrorPageProps",
     "getTextWidth",
     "GlobalMenu",
     "HintAlert",
     "HintNotification",
     "i18n",
     "IconButton",
     "IconContainer",
     "IndeterminateBar",
     "IndicatorBar",
     "LabeledInput",
     "LinkButton",
     "MainMenu",
     "MainMenuAvatar",
     "MainMenuButton",
     "MainMenuIcon",
     "MainMenuSearch",
     "ModalBlocker",
     "ModalWindow",
     "MultiSwitch",
     "NotificationCard",
     "NumericInput",
     "Panel",
     "PickerToggler",
     "ProgressBar",
     "RadioGroup",
     "RadioInput",
     "RangeSlider",
     "Rating",
     "recoveryWordings",
     "RichTextView",
     "ScrollBars",
     "SearchInput",
     "skinContext",
     "Slider",
     "SnackbarCard",
     "Spinner",
     "SuccessAlert",
     "SuccessNotification",
     "SvgCircleProgress",
     "Switch",
     "TabButton",
     "Tag",
     "Text",
     "TextArea",
     "TextInput",
     "TextPlaceholder",
     "Tooltip",
     "VerticalTabButton",
     "VirtualList",
     "WarningAlert",
     "WarningNotification"
    ],
    "FunctionDeclaration": [
     "applyBadgeMods",
     "applyButtonMods",
     "applyCheckboxMods",
     "applyIconContainerMods",
     "applyRangeSliderMods",
     "applySliderMods",
     "applyTagMods",
     "applyTextInputMods",
     "ColumnsConfigurationModal",
     "DataTable",
     "DataTableCell",
     "Dropdown",
     "DropdownMenuHeader",
     "DropdownMenuSplitter",
     "DropdownMenuSwitchButton",
     "DropdownSubMenu",
     "DropMarker",
     "ErrorHandler",
     "FlexSpacer",
     "Form",
     "getIconClass",
     "Paginator",
     "PickerInput",
     "PickerList",
     "PickerModal",
     "PresetsPanel",
     "useForm"
    ],
    "ClassDeclaration": [
     "AvatarRow",
     "ClearNotification",
     "ConfirmationModal",
     "DataPickerBody",
     "DataPickerRow",
     "DatePicker",
     "DropSpot",
     "ErrorPage",
     "InstanceItem",
     "MainMenuCustomElement",
     "MainMenuDropdown",
     "MainMenuLogo",
     "MakeMeItem",
     "ModalFooter",
     "ModalHeader",
     "PickerItem",
     "RangeDatePicker",
     "SliderRating",
     "Snackbar",
     "TextOverflow",
     "TimePicker",
     "UploadFileToggler"
    ]
   },
   "@epam/uui-editor": {
    "VariableDeclaration": [
     "ATTACHMENT_PLUGIN_KEY",
     "ATTACHMENT_PLUGIN_TYPE",
     "attachmentPlugin",
     "baseMarksPlugin",
     "basePlugins",
     "codeBlockPlugin",
     "colorPlugin",
     "createDeserializer",
     "createSerializer",
     "defaultPlugins",
     "headerPlugin",
     "IFRAME_PLUGIN_KEY",
     "IFRAME_PLUGIN_TYPE",
     "iframePlugin",
     "IMAGE_PLUGIN_KEY",
     "IMAGE_PLUGIN_TYPE",
     "imagePlugin",
     "isEditorValueEmpty",
     "linkPlugin",
     "listPlugin",
     "migrateNode",
     "migrateSchema",
     "notePlugin",
     "noteTypes",
     "PARAGRAPH_TYPE",
     "paragraphPlugin",
     "placeholderPlugin",
     "QUOTE_PLUGIN_KEY",
     "quotePlugin",
     "SEPARATOR_KEY",
     "separatorPlugin",
     "superscriptPlugin",
     "tablePlugin",
     "TODO_ELEMENT_KEY",
     "toDoListPlugin",
     "uploadFilePlugin",
     "VIDEO_PLUGIN_KEY",
     "videoPlugin"
    ],
    "FunctionDeclaration": [
     "BoldButton",
     "CodeButton",
     "ColorButton",
     "getBlockDesirialiser",
     "getMarkDeserializer",
     "HeaderButton",
     "IframeButton",
     "ImageButton",
     "isImageSelected",
     "isPluginActive",
     "isTextSelected",
     "ItalicButton",
     "LinkButton",
     "ListButton",
     "NoteButton",
     "PlaceholderButton",
     "QuoteButton",
     "SeparatorButton",
     "SlateEditor",
     "SuperscriptButton",
     "TableButton",
     "ToDoListButton",
     "UnderlineButton",
     "VideoButton"
    ]
   },
   "@epam/uui-timeline": {
    "FunctionDeclaration": [
     "addDays",
     "addMs",
     "getHoursInFormatAMPM",
     "getleftXforCentering",
     "includeLastDay",
     "isWeekend",
     "renderBars",
     "roundDateToMidday"
    ],
    "VariableDeclaration": [
     "baseDate",
     "i18n",
     "months",
     "msPerDay",
     "msPerHour",
     "msPerMinute",
     "msPerYear",
     "scales",
     "scaleSteps"
    ],
    "ClassDeclaration": [
     "BaseTimelineCanvasComponent",
     "TimelineController",
     "TimelineEventsBar",
     "TimelineGrid",
     "TimelineNav",
     "TimelineScale",
     "TimelineTransform"
    ],
    "EnumDeclaration": [
     "Scales"
    ]
   }
  }
 },
 "includedExports": {
  "totals": {
   "allExports": 540,
   "byModule": {
    "@epam/uui-core": 208,
    "@epam/uui-components": 93,
    "@epam/uui": 116,
    "@epam/promo": 49,
    "@epam/loveship": 57,
    "@epam/uui-editor": 9,
    "@epam/uui-timeline": 8
   }
  },
  "value": {
   "@epam/uui-core": {
    "InterfaceDeclaration": [
     "AcceptDropParams",
     "ApiCallInfo",
     "ApiCallOptions",
     "ApiContextProps",
     "ApiExtensions",
     "ApplyFilterOptions",
     "ApplySearchOptions",
     "ApplySortOptions",
     "ArrayDataSourceProps",
     "ArrayListViewProps",
     "AsyncDataSourceProps",
     "AsyncListViewProps",
     "BaseArrayListViewProps",
     "BaseDatePickerProps",
     "BaseListViewProps",
     "BaseRangeDatePickerProps",
     "BatchPromiseOptions",
     "ButtonBaseCoreProps",
     "ButtonCoreProps",
     "ButtonSemanticProps",
     "CheckboxCoreProps",
     "CommonContexts",
     "ContextProviderProps",
     "DataColumnProps",
     "DataQuery",
     "DataQueryRange",
     "DataRowOptions",
     "DataRowPathItem",
     "DataSourceListProps",
     "DataSourceState",
     "DataTableCellOptions",
     "DataTableCellProps",
     "DataTableColumnsConfigOptions",
     "DataTableHeaderCellProps",
     "DataTableHeaderRowProps",
     "DataTableRowProps",
     "DataTableSelectedCellData",
     "DataTableState",
     "DatePickerCoreProps",
     "DndActorProps",
     "DndActorRenderParams",
     "DndContextState",
     "DragGhostProps",
     "DropdownBodyProps",
     "DropdownProps",
     "DropdownState",
     "DropParams",
     "FileUploadOptions",
     "FileUploadResponse",
     "FormProps",
     "FormSaveResponse",
     "FormState",
     "IAdaptiveItem",
     "IAnalyticableClick",
     "IAnalyticableOnChange",
     "IAnalyticsContext",
     "IAnalyticsListener",
     "IApiContext",
     "IBaseContext",
     "IBasicPickerToggler",
     "ICanBeInvalid",
     "ICanBeReadonly",
     "ICanBeRequired",
     "ICanFocus",
     "ICanRedirect",
     "IClickable",
     "IContextProviderSsrProps",
     "IdAndName",
     "IDataSource",
     "IDisableable",
     "IDndActor",
     "IDndContext",
     "IDropdownBodyProps",
     "IDropdownToggler",
     "IEditable",
     "IEditableDebouncerOptions",
     "IEditableDebouncerProps",
     "IErrorContext",
     "IFormApi",
     "IHasCaption",
     "IHasChildren",
     "IHasCX",
     "IHasDirection",
     "IHasForwardedRef",
     "IHasIcon",
     "IHasLabel",
     "IHasPlaceholder",
     "IHasTabIndex",
     "IHistory4",
     "ILayoutContext",
     "ILens",
     "ILockContext",
     "IMap",
     "IModal",
     "IModalContext",
     "INotification",
     "INotificationContext",
     "IPickerToggler",
     "IPresetsApi",
     "IRouterContext",
     "ISkin",
     "ITablePreset",
     "ITableState",
     "ITree",
     "IUserSettingsContext",
     "LabeledInputCoreProps",
     "LayoutLayer",
     "LazyDataSourceApiRequest",
     "LazyDataSourceApiRequestContext",
     "LazyDataSourceApiRequestOptions",
     "LazyDataSourceApiRequestRange",
     "LazyDataSourceApiResponse",
     "LazyDataSourceProps",
     "LazyListViewProps",
     "Link",
     "ListApiResponse",
     "ListApiSettings",
     "LoadTreeOptions",
     "Metadata",
     "ModalBlockerProps",
     "ModalComponentProps",
     "ModalFooterCoreProps",
     "ModalHeaderCoreProps",
     "ModalOperation",
     "ModalWindowProps",
     "NotificationOperation",
     "NotificationParams",
     "RangeDatePickerCoreProps",
     "RangeDatePickerValue",
     "RenderCellProps",
     "RenderEditorProps",
     "ScrollToConfig",
     "SortingOption",
     "SpinnerCoreProps",
     "StatefulProps",
     "TextInputCoreProps",
     "TimePickerValue",
     "TooltipCoreProps",
     "TreeNodeInfo",
     "TreeParams",
     "UseTableStateHookParams",
     "UseUuiErrorOptions",
     "UseUuiErrorProps",
     "UseUuiServicesProps",
     "UuiContexts",
     "UuiErrorInfo",
     "UuiServicesProps",
     "VirtualListRange",
     "VirtualListState"
    ],
    "TypeAliasDeclaration": [
     "AnalyticsEvent",
     "ApiCallErrorType",
     "ApiRecoveryReason",
     "ApiStatus",
     "ArrayElement",
     "ArrayPickerProps",
     "BlockTypes",
     "CascadeSelection",
     "ClassValue",
     "ColumnsConfig",
     "CX",
     "DataQueryFilter",
     "DataQueryFilterCondition",
     "DataRowProps",
     "DataSourceListCounts",
     "DataTableConfigModalParams",
     "DropdownPlacement",
     "DropPosition",
     "DropPositionOptions",
     "FilterPredicate",
     "FilterPredicateName",
     "FiltersConfig",
     "FlexCellProps",
     "FlexRowProps",
     "ICanBeFixed",
     "ICheckable",
     "IColumnConfig",
     "Icon",
     "IDataSourceView",
     "IFilterConfig",
     "IFilterItemBodyProps",
     "IFilterPredicate",
     "IHasRawProps",
     "IProcessRequest",
     "IRouter6",
     "ItemsComparator",
     "LazyDataSourceApi",
     "LazyLoadedMapLoadCallback",
     "LoadingStatus",
     "PickerBaseOptions",
     "PickerBaseProps",
     "PickerBindingProps",
     "PickerBindingValueType",
     "PickerFilterConfig",
     "PickerFooterProps",
     "RangeDatePickerInputType",
     "RangeDatePickerPresets",
     "RangeDatePickerPresetValue",
     "ScrollAlign",
     "SearchResultItem",
     "SinglePickerProps",
     "SkinContextComponentProps",
     "SortDirection",
     "TableFiltersConfig",
     "TMouseCoords",
     "UseFormProps",
     "UuiRecoveryErrorInfo",
     "ValidationMode",
     "VPanelProps"
    ]
   },
   "@epam/uui-components": {
    "TypeAliasDeclaration": [
     "AccordionProps",
     "AdaptiveItemProps",
     "ArrayPickerProps",
     "IRenderInputProps",
     "PickerBindingProps",
     "PickerBindingValueType",
     "PickerInputBaseProps",
     "PickerListBaseProps",
     "PickerModalArrayProps",
     "PickerModalScalarProps",
     "SinglePickerProps",
     "TextProps",
     "UsePickerInputProps",
     "UsePickerListProps",
     "UsePickerModalProps",
     "ViewType",
     "VirtualListProps"
    ],
    "InterfaceDeclaration": [
     "AccordionState",
     "AdaptivePanelProps",
     "AnchorProps",
     "AvatarProps",
     "AvatarStackProps",
     "BaseRatingProps",
     "BaseTimePickerProps",
     "BlockerProps",
     "BurgerProps",
     "ButtonBaseProps",
     "ButtonProps",
     "CalendarPresetsProps",
     "CalendarProps",
     "CarouselProps",
     "CarouselState",
     "CheckboxGroupProps",
     "CheckboxProps",
     "ColumnsConfigurationRowProps",
     "ControlGroupProps",
     "ControlIconProps",
     "DataSourceKeyboardParams",
     "DataTableSelectionProviderProps",
     "DatePickerBodyBaseOptions",
     "DatePickerBodyBaseProps",
     "DatePickerState",
     "DayProps",
     "DragHandleProps",
     "DropdownContainerProps",
     "DropSpotRenderParams",
     "FlexSpacerProps",
     "HeaderCellContentProps",
     "IconButtonBaseProps",
     "InputAddonProps",
     "IProgressBarProps",
     "IScrollSpyApi",
     "IScrollSpyProps",
     "LabeledInputProps",
     "MainMenuCustomElementProps",
     "MainMenuDropdownProps",
     "MainMenuLogoProps",
     "MainMenuProps",
     "MonthSelectionProps",
     "NumericInputProps",
     "PaginatorParams",
     "PaginatorProps",
     "PickerBindingHelper",
     "PickerBodyBaseProps",
     "PickerBodyValue",
     "PickerModalOptions",
     "PickerTogglerProps",
     "PortalProps",
     "PositionValues",
     "RadioGroupItem",
     "RadioGroupProps",
     "RadioInputProps",
     "RangeSliderState",
     "RangeSliderValue",
     "RatingProps",
     "RichTextViewProps",
     "ScrollbarProps",
     "ScrollbarsApi",
     "SelectionContextState",
     "SliderBaseProps",
     "SliderBaseState",
     "SnackbarProps",
     "SpinnerProps",
     "SwitchProps",
     "TextAreaProps",
     "TextInputProps",
     "TimePickerBodyProps",
     "TooltipProps",
     "TooltipState",
     "TreeListItem",
     "TreeProps",
     "VirtualListRenderRowsParams",
     "YearSelectionProps"
    ]
   },
   "@epam/uui": {
    "InterfaceDeclaration": [
     "AccordionMods",
     "AlertProps",
     "BadgeMods",
     "BurgerButtonMods",
     "BurgerGroupHeaderProps",
     "BurgerMods",
     "BurgerSearchProps",
     "ButtonMods",
     "CheckboxMods",
     "ColorMod",
     "ColumnsConfigurationModalProps",
     "ConfirmationModalWindowProps",
     "DataPickerBodyProps",
     "DataPickerRowProps",
     "DataRowsContainerProps",
     "DataTableCellMods",
     "DataTableHeaderCellMods",
     "DataTableHeaderRowMods",
     "DataTableMods",
     "DataTableProps",
     "DataTableRowMods",
     "DatePickerBodyProps",
     "DatePickerProps",
     "DefaultNotificationProps",
     "DropdownContainerMods",
     "DropdownContainerProps",
     "DropMarkerProps",
     "DropSpotProps",
     "FileCardItem",
     "FileCardProps",
     "FiltersPanelProps",
     "FlexRowProps",
     "GlobalMenuProps",
     "HighlightRange",
     "IconButtonMods",
     "IconButtonProps",
     "IDropdownMenuContainer",
     "IDropdownMenuItemProps",
     "IHasEditMode",
     "IndeterminateBarMods",
     "ITextPlaceholderProps",
     "LabeledInputMods",
     "LinkButtonMods",
     "MainMenuAvatarProps",
     "MainMenuButtonMods",
     "MainMenuIconProps",
     "MainMenuMods",
     "MainMenuSearchProps",
     "ModalFooterProps",
     "ModalHeaderProps",
     "ModalWindowMods",
     "MultiSwitchProps",
     "NotificationCardProps",
     "NumericInputMods",
     "PanelMods",
     "PickerItemProps",
     "PickerListItemProps",
     "PickerTogglerMods",
     "PresetsPanelProps",
     "ProgressBarMods",
     "RadioInputMods",
     "RangeDatePickerBodyProps",
     "RangeDatePickerProps",
     "RangeDatePickerValue",
     "RichTextViewMods",
     "RowMods",
     "RowSizeMod",
     "SizeMod",
     "SwitchMods",
     "TabButtonMods",
     "TagMods",
     "TextAreaMods",
     "TextInputMods",
     "TextInputProps",
     "TextMods",
     "TextSettings",
     "TimePickerProps",
     "TooltipMods"
    ],
    "TypeAliasDeclaration": [
     "BadgeColor",
     "BadgeFill",
     "BadgeProps",
     "BadgeSize",
     "ButtonColor",
     "ButtonMode",
     "ButtonProps",
     "ButtonSemanticColor",
     "CheckboxProps",
     "ControlSize",
     "EpamBadgeSemanticColor",
     "FillStyle",
     "FlexCellMods",
     "FontStyle",
     "IconColor",
     "InputType",
     "LinkButtonColorType",
     "LinkButtonProps",
     "ModalWindowProps",
     "NumericInputProps",
     "PickerInputProps",
     "PickerListProps",
     "PickerModalProps",
     "pickerPart",
     "RadioInputProps",
     "RowSize",
     "SemanticColor",
     "SpinnerProps",
     "TabButtonProps",
     "TagProps",
     "TagSize",
     "TextAreaProps",
     "TextPlaceholderProps",
     "TextProps",
     "TextSize",
     "TooltipProps",
     "UuiMultiSwitchColor",
     "VerticalTabButtonProps"
    ]
   },
   "@epam/promo": {
    "InterfaceDeclaration": [
     "AlertMods",
     "AlertProps",
     "BadgeMods",
     "ButtonMods",
     "ColorMod",
     "DropdownContainerMods",
     "ErrorHandlerProps",
     "FontMod",
     "IconButtonMods",
     "IconContainerMods",
     "IHasEditMode",
     "LinkButtonMods",
     "ModalWindowMods",
     "MultiSwitchMods",
     "NotificationCardMods",
     "PanelMods",
     "RatingMods",
     "RichTextViewMods",
     "RowMods",
     "RowSizeMod",
     "ScrollBarsMods",
     "SizeMod",
     "SliderMods",
     "TextInputProps",
     "TextMods",
     "TooltipMods",
     "VirtualListMods"
    ],
    "TypeAliasDeclaration": [
     "BadgeProps",
     "ButtonColor",
     "ButtonProps",
     "ControlShape",
     "ControlSize",
     "EpamAdditionalColor",
     "EpamColor",
     "EpamGrayscaleColor",
     "EpamPrimaryColor",
     "FillStyle",
     "FontStyle",
     "IconButtonProps",
     "IconColor",
     "IconContainerColors",
     "LinkButtonProps",
     "MultiSwitchColor",
     "MultiSwitchProps",
     "NotificationCardProps",
     "RowSize",
     "TextProps",
     "TextSize",
     "TooltipProps"
    ]
   },
   "@epam/loveship": {
    "InterfaceDeclaration": [
     "AlertMods",
     "AlertProps",
     "BadgeMods",
     "ButtonMods",
     "CheckboxMods",
     "ColorMod",
     "DropdownContainerMods",
     "EditMode",
     "ErrorConfig",
     "ErrorPageProps",
     "FontMod",
     "IconButtonMods",
     "IconContainerMods",
     "LinkButtonMods",
     "MakeMeItemProps",
     "MakeMeUser",
     "ModalWindowMods",
     "MultiSwitchMods",
     "NotificationCardMods",
     "PanelMods",
     "RadioInputMods",
     "RadioInputProps",
     "RangeSliderMods",
     "RatingMods",
     "RichTextViewMods",
     "RowMods",
     "RowSizeMod",
     "ScrollBarsMods",
     "SizeMod",
     "SliderRatingProps",
     "SnackbarCardProps",
     "TabButtonMods",
     "TagMods",
     "TextInputMods",
     "TextMods",
     "TooltipMods",
     "VirtualListMods"
    ],
    "TypeAliasDeclaration": [
     "BadgeProps",
     "ButtonColorType",
     "ButtonProps",
     "ControlShape",
     "ControlSize",
     "EpamAdditionalColor",
     "EpamColor",
     "EpamGrayscaleColor",
     "EpamPrimaryColor",
     "FillStyle",
     "FontStyle",
     "IconButtonProps",
     "LinkButtonProps",
     "MultiSwitchColor",
     "MultiSwitchProps",
     "NotificationCardProps",
     "RowSize",
     "TextProps",
     "TextSize",
     "TooltipProps"
    ]
   },
   "@epam/uui-editor": {
    "TypeAliasDeclaration": [
     "EditorValue",
     "PlateImgAlign",
     "SlateImageSize",
     "SlateImgAlign"
    ],
    "InterfaceDeclaration": [
     "IImageElement",
     "LinkElement",
     "PlaceholderPluginParams",
     "PlateProps",
     "SlateProps"
    ]
   },
   "@epam/uui-timeline": {
    "InterfaceDeclaration": [
     "BaseTimelineCanvasComponentProps",
     "Item",
     "Stage",
     "TimelineControllerOptions",
     "TimelineEventsBarProps",
     "TimelineGridProps",
     "TimelineNavProps",
     "TimelineScaleProps"
    ]
   }
  }
 },
 "references": {
  "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob": {
   "module": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "typeName": {
    "name": "Blob",
    "nameFull": "Blob"
   },
   "src": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "external": true
  },
  "../../../../node_modules/typescript/lib/lib.dom.d.ts:File": {
   "module": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "typeName": {
    "name": "File",
    "nameFull": "File"
   },
   "src": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "external": true
  },
  "@epam/loveship:AlertMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "AlertMods",
    "nameFull": "AlertMods"
   },
   "src": "loveship/components/overlays/Alert.tsx"
  },
  "@epam/loveship:AlertProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "src": "loveship/components/overlays/Alert.tsx"
  },
  "@epam/loveship:BadgeMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "src": "loveship/components/widgets/Badge.tsx"
  },
  "@epam/loveship:BadgeProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "src": "loveship/components/widgets/Badge.tsx"
  },
  "@epam/loveship:ButtonColorType": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonColorType",
    "nameFull": "ButtonColorType"
   },
   "src": "loveship/components/buttons/Button.tsx"
  },
  "@epam/loveship:ButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "src": "loveship/components/buttons/Button.tsx"
  },
  "@epam/loveship:ButtonProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "loveship/components/buttons/Button.tsx"
  },
  "@epam/loveship:CheckboxMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "CheckboxMods",
    "nameFull": "CheckboxMods"
   },
   "src": "loveship/components/inputs/Checkbox.tsx"
  },
  "@epam/loveship:ColorMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ControlShape": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ControlShape",
    "nameFull": "ControlShape"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ControlSize": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:DropdownContainerMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "src": "loveship/components/overlays/DropdownContainer.tsx"
  },
  "@epam/loveship:EditMode": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EditMode",
    "nameFull": "EditMode"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamAdditionalColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamAdditionalColor",
    "nameFull": "EpamAdditionalColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamColor",
    "nameFull": "EpamColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamGrayscaleColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamGrayscaleColor",
    "nameFull": "EpamGrayscaleColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamPrimaryColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamPrimaryColor",
    "nameFull": "EpamPrimaryColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ErrorConfig": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ErrorConfig",
    "nameFull": "ErrorConfig"
   },
   "src": "loveship/components/app/ErrorHandler.tsx"
  },
  "@epam/loveship:ErrorPageProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ErrorPageProps",
    "nameFull": "ErrorPageProps"
   },
   "src": "loveship/components/app/ErrorHandler.tsx"
  },
  "@epam/loveship:FillStyle": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:FontMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FontMod",
    "nameFull": "FontMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:FontStyle": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:IconButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "src": "loveship/components/buttons/IconButton.tsx"
  },
  "@epam/loveship:IconButtonProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "src": "loveship/components/buttons/IconButton.tsx"
  },
  "@epam/loveship:IconContainerMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconContainerMods",
    "nameFull": "IconContainerMods"
   },
   "src": "loveship/components/layout/IconContainer.tsx"
  },
  "@epam/loveship:LinkButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "src": "loveship/components/buttons/LinkButton.tsx"
  },
  "@epam/loveship:LinkButtonProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "src": "loveship/components/buttons/LinkButton.tsx"
  },
  "@epam/loveship:MakeMeItemProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MakeMeItemProps",
    "nameFull": "MakeMeItemProps"
   },
   "src": "loveship/components/dev/MakeMeItem.tsx"
  },
  "@epam/loveship:MakeMeUser": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MakeMeUser",
    "nameFull": "MakeMeUser"
   },
   "src": "loveship/components/dev/MakeMeItem.tsx"
  },
  "@epam/loveship:ModalWindowMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "src": "loveship/components/overlays/ModalWindow.tsx"
  },
  "@epam/loveship:MultiSwitchColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchColor",
    "nameFull": "MultiSwitchColor"
   },
   "src": "loveship/components/inputs/MultiSwitch.tsx"
  },
  "@epam/loveship:MultiSwitchMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchMods",
    "nameFull": "MultiSwitchMods"
   },
   "src": "loveship/components/inputs/MultiSwitch.tsx"
  },
  "@epam/loveship:MultiSwitchProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "src": "loveship/components/inputs/MultiSwitch.tsx"
  },
  "@epam/loveship:NotificationCardMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "NotificationCardMods",
    "nameFull": "NotificationCardMods"
   },
   "src": "loveship/components/overlays/NotificationCard.tsx"
  },
  "@epam/loveship:NotificationCardProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "src": "loveship/components/overlays/NotificationCard.tsx"
  },
  "@epam/loveship:PanelMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "src": "loveship/components/layout/FlexItems/Panel.tsx"
  },
  "@epam/loveship:RadioInputMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RadioInputMods",
    "nameFull": "RadioInputMods"
   },
   "src": "loveship/components/inputs/RadioInput.tsx"
  },
  "@epam/loveship:RadioInputProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "src": "loveship/components/inputs/RadioInput.tsx"
  },
  "@epam/loveship:RangeSliderMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RangeSliderMods",
    "nameFull": "RangeSliderMods"
   },
   "src": "loveship/components/inputs/Slider/RangeSlider.tsx"
  },
  "@epam/loveship:RatingMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RatingMods",
    "nameFull": "RatingMods"
   },
   "src": "loveship/components/inputs/Rating.tsx"
  },
  "@epam/loveship:RichTextViewMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "src": "loveship/components/typography/RichTextView.tsx"
  },
  "@epam/loveship:RowMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "src": "loveship/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/loveship:RowSize": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:RowSizeMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ScrollBarsMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ScrollBarsMods",
    "nameFull": "ScrollBarsMods"
   },
   "src": "loveship/components/layout/ScrollBars.tsx"
  },
  "@epam/loveship:SizeMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:SliderRatingProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SliderRatingProps",
    "nameFull": "SliderRatingProps<TValue>"
   },
   "src": "loveship/components/inputs/SliderRating.tsx"
  },
  "@epam/loveship:SnackbarCardProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SnackbarCardProps",
    "nameFull": "SnackbarCardProps"
   },
   "src": "loveship/components/overlays/SnackbarCard.tsx"
  },
  "@epam/loveship:TabButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TabButtonMods",
    "nameFull": "TabButtonMods"
   },
   "src": "loveship/components/buttons/TabButton.tsx"
  },
  "@epam/loveship:TagMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TagMods",
    "nameFull": "TagMods"
   },
   "src": "loveship/components/widgets/Tag.tsx"
  },
  "@epam/loveship:TextInputMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextInputMods",
    "nameFull": "TextInputMods"
   },
   "src": "loveship/components/inputs/TextInput.tsx"
  },
  "@epam/loveship:TextMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "src": "loveship/components/typography/Text.tsx"
  },
  "@epam/loveship:TextProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "loveship/components/typography/Text.tsx"
  },
  "@epam/loveship:TextSize": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:TooltipMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "src": "loveship/components/overlays/Tooltip.tsx"
  },
  "@epam/loveship:TooltipProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "loveship/components/overlays/Tooltip.tsx"
  },
  "@epam/loveship:VirtualListMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "VirtualListMods",
    "nameFull": "VirtualListMods"
   },
   "src": "loveship/components/layout/VirtualList.tsx"
  },
  "@epam/promo:AlertMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "AlertMods",
    "nameFull": "AlertMods"
   },
   "src": "epam-promo/components/overlays/Alert.tsx"
  },
  "@epam/promo:AlertProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "src": "epam-promo/components/overlays/Alert.tsx"
  },
  "@epam/promo:BadgeMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "src": "epam-promo/components/widgets/Badge.tsx"
  },
  "@epam/promo:BadgeProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "src": "epam-promo/components/widgets/Badge.tsx"
  },
  "@epam/promo:ButtonColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonColor",
    "nameFull": "ButtonColor"
   },
   "src": "epam-promo/components/buttons/Button.tsx"
  },
  "@epam/promo:ButtonMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "src": "epam-promo/components/buttons/Button.tsx"
  },
  "@epam/promo:ButtonProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "epam-promo/components/buttons/Button.tsx"
  },
  "@epam/promo:ColorMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ControlShape": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ControlShape",
    "nameFull": "ControlShape"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ControlSize": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:DropdownContainerMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "src": "epam-promo/components/overlays/DropdownContainer.tsx"
  },
  "@epam/promo:EpamAdditionalColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamAdditionalColor",
    "nameFull": "EpamAdditionalColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:EpamColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamColor",
    "nameFull": "EpamColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:EpamGrayscaleColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamGrayscaleColor",
    "nameFull": "EpamGrayscaleColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:EpamPrimaryColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamPrimaryColor",
    "nameFull": "EpamPrimaryColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ErrorHandlerProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ErrorHandlerProps",
    "nameFull": "ErrorHandlerProps"
   },
   "src": "epam-promo/components/errors/ErrorHandler.tsx"
  },
  "@epam/promo:FillStyle": {
   "module": "@epam/promo",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:FontMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "FontMod",
    "nameFull": "FontMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:FontStyle": {
   "module": "@epam/promo",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:IHasEditMode": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IHasEditMode",
    "nameFull": "IHasEditMode"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:IconButtonMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "src": "epam-promo/components/buttons/IconButton.tsx"
  },
  "@epam/promo:IconButtonProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "src": "epam-promo/components/buttons/IconButton.tsx"
  },
  "@epam/promo:IconColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconColor",
    "nameFull": "IconColor"
   },
   "src": "epam-promo/components/buttons/IconButton.tsx"
  },
  "@epam/promo:IconContainerColors": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconContainerColors",
    "nameFull": "IconContainerColors"
   },
   "src": "epam-promo/components/layout/IconContainer.tsx"
  },
  "@epam/promo:IconContainerMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconContainerMods",
    "nameFull": "IconContainerMods"
   },
   "src": "epam-promo/components/layout/IconContainer.tsx"
  },
  "@epam/promo:LinkButtonMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "src": "epam-promo/components/buttons/LinkButton.tsx"
  },
  "@epam/promo:LinkButtonProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "src": "epam-promo/components/buttons/LinkButton.tsx"
  },
  "@epam/promo:ModalWindowMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "src": "epam-promo/components/overlays/ModalWindow.tsx"
  },
  "@epam/promo:MultiSwitchColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchColor",
    "nameFull": "MultiSwitchColor"
   },
   "src": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  "@epam/promo:MultiSwitchMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchMods",
    "nameFull": "MultiSwitchMods"
   },
   "src": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  "@epam/promo:MultiSwitchProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "src": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  "@epam/promo:NotificationCardMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "NotificationCardMods",
    "nameFull": "NotificationCardMods"
   },
   "src": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  "@epam/promo:NotificationCardProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "src": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  "@epam/promo:PanelMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "src": "epam-promo/components/layout/FlexItems/Panel.tsx"
  },
  "@epam/promo:RatingMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RatingMods",
    "nameFull": "RatingMods"
   },
   "src": "epam-promo/components/inputs/Rating.tsx"
  },
  "@epam/promo:RichTextViewMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "src": "epam-promo/components/typography/RichTextView.tsx"
  },
  "@epam/promo:RowMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "src": "epam-promo/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/promo:RowSize": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:RowSizeMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ScrollBarsMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ScrollBarsMods",
    "nameFull": "ScrollBarsMods"
   },
   "src": "epam-promo/components/layout/ScrollBars.tsx"
  },
  "@epam/promo:SizeMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:SliderMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "SliderMods",
    "nameFull": "SliderMods"
   },
   "src": "epam-promo/components/inputs/Slider/Slider.tsx"
  },
  "@epam/promo:TextMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "src": "epam-promo/components/typography/Text.tsx"
  },
  "@epam/promo:TextProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "epam-promo/components/typography/Text.tsx"
  },
  "@epam/promo:TextSize": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:TooltipMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "src": "epam-promo/components/overlays/Tooltip.tsx"
  },
  "@epam/promo:TooltipProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "epam-promo/components/overlays/Tooltip.tsx"
  },
  "@epam/promo:VirtualListMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "VirtualListMods",
    "nameFull": "VirtualListMods"
   },
   "src": "epam-promo/components/layout/VirtualList.tsx"
  },
  "@epam/uui-components:AccordionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AccordionProps",
    "nameFull": "AccordionProps"
   },
   "src": "uui-components/src/layout/Accordion.tsx"
  },
  "@epam/uui-components:AccordionState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AccordionState",
    "nameFull": "AccordionState"
   },
   "src": "uui-components/src/layout/Accordion.tsx"
  },
  "@epam/uui-components:AdaptiveItemProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AdaptiveItemProps",
    "nameFull": "AdaptiveItemProps<T>"
   },
   "src": "uui-components/src/adaptivePanel/types.ts"
  },
  "@epam/uui-components:AdaptivePanelProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AdaptivePanelProps",
    "nameFull": "AdaptivePanelProps"
   },
   "src": "uui-components/src/adaptivePanel/types.ts"
  },
  "@epam/uui-components:AnchorProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AnchorProps",
    "nameFull": "AnchorProps"
   },
   "src": "uui-components/src/navigation/Anchor.tsx"
  },
  "@epam/uui-components:ArrayPickerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ArrayPickerProps",
    "nameFull": "ArrayPickerProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:AvatarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AvatarProps",
    "nameFull": "AvatarProps"
   },
   "src": "uui-components/src/widgets/Avatar.tsx"
  },
  "@epam/uui-components:AvatarStackProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AvatarStackProps",
    "nameFull": "AvatarStackProps"
   },
   "src": "uui-components/src/widgets/AvatarStack.tsx"
  },
  "@epam/uui-components:BaseRatingProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseRatingProps",
    "nameFull": "BaseRatingProps<TValue>"
   },
   "src": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  "@epam/uui-components:BaseTimePickerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseTimePickerProps",
    "nameFull": "BaseTimePickerProps"
   },
   "src": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  "@epam/uui-components:BaseVirtualListProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseVirtualListProps",
    "nameFull": "BaseVirtualListProps<ScrollContainer>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:BlockerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BlockerProps",
    "nameFull": "BlockerProps"
   },
   "src": "uui-components/src/layout/Blocker.tsx"
  },
  "@epam/uui-components:BurgerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BurgerProps",
    "nameFull": "BurgerProps"
   },
   "src": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  "@epam/uui-components:ButtonBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ButtonBaseProps",
    "nameFull": "ButtonBaseProps"
   },
   "src": "uui-components/src/buttons/ButtonBase.tsx"
  },
  "@epam/uui-components:ButtonProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "uui-components/src/buttons/Button.tsx"
  },
  "@epam/uui-components:CalendarPresetsProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CalendarPresetsProps",
    "nameFull": "CalendarPresetsProps"
   },
   "src": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
  },
  "@epam/uui-components:CalendarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CalendarProps",
    "nameFull": "CalendarProps<TSelection>"
   },
   "src": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  "@epam/uui-components:CarouselProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CarouselProps",
    "nameFull": "CarouselProps"
   },
   "src": "uui-components/src/widgets/Carousel.tsx"
  },
  "@epam/uui-components:CarouselState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CarouselState",
    "nameFull": "CarouselState"
   },
   "src": "uui-components/src/widgets/Carousel.tsx"
  },
  "@epam/uui-components:CheckboxGroupProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CheckboxGroupProps",
    "nameFull": "CheckboxGroupProps<TValue>"
   },
   "src": "uui-components/src/layout/CheckboxGroup.tsx"
  },
  "@epam/uui-components:CheckboxProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CheckboxProps",
    "nameFull": "CheckboxProps"
   },
   "src": "uui-components/src/inputs/Checkbox.tsx"
  },
  "@epam/uui-components:ColumnsConfigurationRowProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ColumnsConfigurationRowProps",
    "nameFull": "ColumnsConfigurationRowProps"
   },
   "src": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  "@epam/uui-components:ControlGroupProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ControlGroupProps",
    "nameFull": "ControlGroupProps"
   },
   "src": "uui-components/src/layout/ControlGroup.tsx"
  },
  "@epam/uui-components:ControlIconProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ControlIconProps",
    "nameFull": "ControlIconProps"
   },
   "src": "uui-components/src/layout/IconContainer.tsx"
  },
  "@epam/uui-components:DataSourceKeyboardParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DataSourceKeyboardParams",
    "nameFull": "DataSourceKeyboardParams"
   },
   "src": "uui-components/src/pickers/KeyboardUtils.tsx"
  },
  "@epam/uui-components:DataTableSelectionProviderProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DataTableSelectionProviderProps",
    "nameFull": "DataTableSelectionProviderProps<TItem, TId, TFilter>"
   },
   "src": "uui-components/src/table/tableCellsSelection/DataTableSelectionProvider.tsx"
  },
  "@epam/uui-components:DatePickerBodyBaseOptions": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerBodyBaseOptions",
    "nameFull": "DatePickerBodyBaseOptions"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:DatePickerBodyBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerBodyBaseProps",
    "nameFull": "DatePickerBodyBaseProps<TSelection>"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:DatePickerState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerState",
    "nameFull": "DatePickerState"
   },
   "src": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
  },
  "@epam/uui-components:DayProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DayProps",
    "nameFull": "DayProps"
   },
   "src": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  "@epam/uui-components:DragHandleProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DragHandleProps",
    "nameFull": "DragHandleProps"
   },
   "src": "uui-components/src/dnd/DragHandle.tsx"
  },
  "@epam/uui-components:DropSpotRenderParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropSpotRenderParams",
    "nameFull": "DropSpotRenderParams"
   },
   "src": "uui-components/src/widgets/DropSpot.tsx"
  },
  "@epam/uui-components:DropSpotState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropSpotState",
    "nameFull": "DropSpotState"
   },
   "src": "uui-components/src/widgets/DropSpot.tsx"
  },
  "@epam/uui-components:DropdownContainerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropdownContainerProps",
    "nameFull": "DropdownContainerProps"
   },
   "src": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  "@epam/uui-components:FlexSpacerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "FlexSpacerProps",
    "nameFull": "FlexSpacerProps"
   },
   "src": "uui-components/src/layout/flexItems/FlexSpacer.tsx"
  },
  "@epam/uui-components:GeneralAccordionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "GeneralAccordionProps",
    "nameFull": "GeneralAccordionProps"
   },
   "src": "uui-components/src/layout/Accordion.tsx"
  },
  "@epam/uui-components:GroupedDataColumnProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "GroupedDataColumnProps",
    "nameFull": "GroupedDataColumnProps"
   },
   "src": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  "@epam/uui-components:HeaderCellContentProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "HeaderCellContentProps",
    "nameFull": "HeaderCellContentProps"
   },
   "src": "uui-components/src/table/DataTableHeaderCell.tsx"
  },
  "@epam/uui-components:IProgressBarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IProgressBarProps",
    "nameFull": "IProgressBarProps"
   },
   "src": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
  },
  "@epam/uui-components:IRenderInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IRenderInputProps",
    "nameFull": "IRenderInputProps"
   },
   "src": "uui-components/src/inputs/TextInput.tsx"
  },
  "@epam/uui-components:IScrollSpyApi": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IScrollSpyApi",
    "nameFull": "IScrollSpyApi"
   },
   "src": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  "@epam/uui-components:IScrollSpyProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IScrollSpyProps",
    "nameFull": "IScrollSpyProps"
   },
   "src": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  "@epam/uui-components:IconButtonBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IconButtonBaseProps",
    "nameFull": "IconButtonBaseProps"
   },
   "src": "uui-components/src/buttons/IconButton.tsx"
  },
  "@epam/uui-components:InputAddonProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "InputAddonProps",
    "nameFull": "InputAddonProps"
   },
   "src": "uui-components/src/inputs/InputAddon.tsx"
  },
  "@epam/uui-components:LabeledInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "LabeledInputProps",
    "nameFull": "LabeledInputProps"
   },
   "src": "uui-components/src/layout/LabeledInput.tsx"
  },
  "@epam/uui-components:MainMenuCustomElementProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuCustomElementProps",
    "nameFull": "MainMenuCustomElementProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenuCustomElement.tsx"
  },
  "@epam/uui-components:MainMenuDropdownProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuDropdownProps",
    "nameFull": "MainMenuDropdownProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  "@epam/uui-components:MainMenuLogoProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuLogoProps",
    "nameFull": "MainMenuLogoProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  "@epam/uui-components:MainMenuProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuProps",
    "nameFull": "MainMenuProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  "@epam/uui-components:MonthSelectionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MonthSelectionProps",
    "nameFull": "MonthSelectionProps"
   },
   "src": "uui-components/src/inputs/DatePicker/MonthSelection.tsx"
  },
  "@epam/uui-components:NumericInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "NumericInputProps",
    "nameFull": "NumericInputProps"
   },
   "src": "uui-components/src/inputs/NumericInput.tsx"
  },
  "@epam/uui-components:PaginatorParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PaginatorParams",
    "nameFull": "PaginatorParams"
   },
   "src": "uui-components/src/widgets/Paginator.tsx"
  },
  "@epam/uui-components:PaginatorProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PaginatorProps",
    "nameFull": "PaginatorProps"
   },
   "src": "uui-components/src/widgets/Paginator.tsx"
  },
  "@epam/uui-components:PickerBindingHelper": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingHelper",
    "nameFull": "PickerBindingHelper<TItem, TId>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:PickerBindingProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingProps",
    "nameFull": "PickerBindingProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:PickerBindingValueType": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingValueType",
    "nameFull": "PickerBindingValueType"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:PickerBodyBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBodyBaseProps",
    "nameFull": "PickerBodyBaseProps"
   },
   "src": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  "@epam/uui-components:PickerBodyValue": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBodyValue",
    "nameFull": "PickerBodyValue<TSelection>"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:PickerInputBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerInputBaseProps",
    "nameFull": "PickerInputBaseProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerListBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerListBaseProps",
    "nameFull": "PickerListBaseProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerModalArrayProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalArrayProps",
    "nameFull": "PickerModalArrayProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerModalOptions": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalOptions",
    "nameFull": "PickerModalOptions<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerModalScalarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalScalarProps",
    "nameFull": "PickerModalScalarProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerTogglerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerTogglerProps",
    "nameFull": "PickerTogglerProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/PickerToggler.tsx"
  },
  "@epam/uui-components:PortalProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PortalProps",
    "nameFull": "PortalProps"
   },
   "src": "uui-components/src/overlays/Portal.tsx"
  },
  "@epam/uui-components:PositionValues": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PositionValues",
    "nameFull": "PositionValues"
   },
   "src": "uui-components/src/layout/ScrollBars.tsx"
  },
  "@epam/uui-components:RadioGroupItem": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioGroupItem",
    "nameFull": "RadioGroupItem<TValue>"
   },
   "src": "uui-components/src/layout/RadioGroup.tsx"
  },
  "@epam/uui-components:RadioGroupProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioGroupProps",
    "nameFull": "RadioGroupProps<TValue>"
   },
   "src": "uui-components/src/layout/RadioGroup.tsx"
  },
  "@epam/uui-components:RadioInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "src": "uui-components/src/inputs/RadioInput.tsx"
  },
  "@epam/uui-components:RangeSliderState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RangeSliderState",
    "nameFull": "RangeSliderState"
   },
   "src": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  "@epam/uui-components:RangeSliderValue": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RangeSliderValue",
    "nameFull": "RangeSliderValue"
   },
   "src": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  "@epam/uui-components:RatingProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RatingProps",
    "nameFull": "RatingProps"
   },
   "src": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  "@epam/uui-components:RichTextViewProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RichTextViewProps",
    "nameFull": "RichTextViewProps"
   },
   "src": "uui-components/src/RichTextView.tsx"
  },
  "@epam/uui-components:ScrollbarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ScrollbarProps",
    "nameFull": "ScrollbarProps"
   },
   "src": "uui-components/src/layout/ScrollBars.tsx"
  },
  "@epam/uui-components:ScrollbarsApi": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ScrollbarsApi",
    "nameFull": "ScrollbarsApi"
   },
   "src": "uui-components/src/layout/ScrollBars.tsx"
  },
  "@epam/uui-components:SelectionContextState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SelectionContextState",
    "nameFull": "SelectionContextState<TItem, TId, TFilter>"
   },
   "src": "uui-components/src/table/tableCellsSelection/DataTableSelectionContext.ts"
  },
  "@epam/uui-components:SelectionManager": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SelectionManager",
    "nameFull": "SelectionManager<TItem, TId, TFilter>"
   },
   "src": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  "@epam/uui-components:SinglePickerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SinglePickerProps",
    "nameFull": "SinglePickerProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:SliderBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SliderBaseProps",
    "nameFull": "SliderBaseProps<TSelection>"
   },
   "src": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  "@epam/uui-components:SliderBaseState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SliderBaseState",
    "nameFull": "SliderBaseState"
   },
   "src": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  "@epam/uui-components:SnackbarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SnackbarProps",
    "nameFull": "SnackbarProps"
   },
   "src": "uui-components/src/overlays/Snackbar.tsx"
  },
  "@epam/uui-components:SpinnerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SpinnerProps",
    "nameFull": "SpinnerProps"
   },
   "src": "uui-components/src/widgets/Spinner.tsx"
  },
  "@epam/uui-components:SwitchProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SwitchProps",
    "nameFull": "SwitchProps"
   },
   "src": "uui-components/src/inputs/Switch.tsx"
  },
  "@epam/uui-components:TextAreaProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextAreaProps",
    "nameFull": "TextAreaProps"
   },
   "src": "uui-components/src/inputs/TextArea.tsx"
  },
  "@epam/uui-components:TextInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextInputProps",
    "nameFull": "TextInputProps"
   },
   "src": "uui-components/src/inputs/TextInput.tsx"
  },
  "@epam/uui-components:TextProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "uui-components/src/Text.tsx"
  },
  "@epam/uui-components:TimePickerBodyProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TimePickerBodyProps",
    "nameFull": "TimePickerBodyProps"
   },
   "src": "uui-components/src/inputs/TimePickerBody.tsx"
  },
  "@epam/uui-components:TooltipProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "uui-components/src/overlays/Tooltip.tsx"
  },
  "@epam/uui-components:TooltipState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TooltipState",
    "nameFull": "TooltipState"
   },
   "src": "uui-components/src/overlays/Tooltip.tsx"
  },
  "@epam/uui-components:TreeListItem": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TreeListItem",
    "nameFull": "TreeListItem"
   },
   "src": "uui-components/src/layout/Tree.tsx"
  },
  "@epam/uui-components:TreeProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TreeProps",
    "nameFull": "TreeProps<TItem>"
   },
   "src": "uui-components/src/layout/Tree.tsx"
  },
  "@epam/uui-components:UsePickerInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerInputProps",
    "nameFull": "UsePickerInputProps<TItem, TId, TProps>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:UsePickerListProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerListProps",
    "nameFull": "UsePickerListProps<TItem, TId, TProps>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:UsePickerModalProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerModalProps",
    "nameFull": "UsePickerModalProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:ViewType": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ViewType",
    "nameFull": "ViewType"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:VirtualListProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListProps",
    "nameFull": "VirtualListProps<List, ScrollContainer>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:VirtualListRenderRows": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListRenderRows",
    "nameFull": "VirtualListRenderRows<List>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:VirtualListRenderRowsParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListRenderRowsParams",
    "nameFull": "VirtualListRenderRowsParams<List>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:YearSelectionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "YearSelectionProps",
    "nameFull": "YearSelectionProps"
   },
   "src": "uui-components/src/inputs/DatePicker/YearSelection.tsx"
  },
  "@epam/uui-core:AcceptDropParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AcceptDropParams",
    "nameFull": "AcceptDropParams<TSrcData, TDstData>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:AnalyticsEvent": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AnalyticsEvent",
    "nameFull": "AnalyticsEvent"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:ApiCallErrorType": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallErrorType",
    "nameFull": "ApiCallErrorType"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:ApiCallInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallInfo",
    "nameFull": "ApiCallInfo"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiCallOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallOptions",
    "nameFull": "ApiCallOptions"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiContextProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiContextProps",
    "nameFull": "ApiContextProps"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:ApiExtensions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiExtensions",
    "nameFull": "ApiExtensions<TApi>"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiRecoveryReason": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiRecoveryReason",
    "nameFull": "ApiRecoveryReason"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiStatus": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiStatus",
    "nameFull": "ApiStatus"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApplyFilterOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplyFilterOptions",
    "nameFull": "ApplyFilterOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:ApplySearchOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplySearchOptions",
    "nameFull": "ApplySearchOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:ApplySortOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplySortOptions",
    "nameFull": "ApplySortOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:ArrayDataSourceProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayDataSourceProps",
    "nameFull": "ArrayDataSourceProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/ArrayDataSource.tsx"
  },
  "@epam/uui-core:ArrayElement": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayElement",
    "nameFull": "ArrayElement<ArrayType>"
   },
   "src": "uui-core/src/data/lenses/types.ts"
  },
  "@epam/uui-core:ArrayListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayListViewProps",
    "nameFull": "ArrayListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  "@epam/uui-core:ArrayPickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayPickerProps",
    "nameFull": "ArrayPickerProps<TId, TItem>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:AsyncDataSourceProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AsyncDataSourceProps",
    "nameFull": "AsyncDataSourceProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/AsyncDataSource.tsx"
  },
  "@epam/uui-core:AsyncListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AsyncListViewProps",
    "nameFull": "AsyncListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/AsyncListView.ts"
  },
  "@epam/uui-core:BaseArrayListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseArrayListViewProps",
    "nameFull": "BaseArrayListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  "@epam/uui-core:BaseDatePickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseDatePickerProps",
    "nameFull": "BaseDatePickerProps"
   },
   "src": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  "@epam/uui-core:BaseListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseListViewProps",
    "nameFull": "BaseListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:BaseRangeDatePickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseRangeDatePickerProps",
    "nameFull": "BaseRangeDatePickerProps"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:BatchPromiseOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BatchPromiseOptions",
    "nameFull": "BatchPromiseOptions"
   },
   "src": "uui-core/src/helpers/batch.ts"
  },
  "@epam/uui-core:BlockTypes": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BlockTypes",
    "nameFull": "BlockTypes"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:ButtonBaseCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonBaseCoreProps",
    "nameFull": "ButtonBaseCoreProps"
   },
   "src": "uui-core/src/types/components/Button.ts"
  },
  "@epam/uui-core:ButtonCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonCoreProps",
    "nameFull": "ButtonCoreProps"
   },
   "src": "uui-core/src/types/components/Button.ts"
  },
  "@epam/uui-core:ButtonSemanticProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonSemanticProps",
    "nameFull": "ButtonSemanticProps"
   },
   "src": "uui-core/src/types/components/Button.ts"
  },
  "@epam/uui-core:CX": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CX",
    "nameFull": "CX"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:CascadeSelection": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CascadeSelection",
    "nameFull": "CascadeSelection"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:CheckboxCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CheckboxCoreProps",
    "nameFull": "CheckboxCoreProps"
   },
   "src": "uui-core/src/types/components/Checkbox.ts"
  },
  "@epam/uui-core:ClassValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ClassValue",
    "nameFull": "ClassValue"
   },
   "src": "uui-core/src/helpers/cx.ts"
  },
  "@epam/uui-core:ColumnsConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ColumnsConfig",
    "nameFull": "ColumnsConfig"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:CommonContexts": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CommonContexts",
    "nameFull": "CommonContexts<TApi, TAppContext>"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ContextProviderProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ContextProviderProps",
    "nameFull": "ContextProviderProps<TApi, TAppContext>"
   },
   "src": "uui-core/src/services/ContextProvider.tsx"
  },
  "@epam/uui-core:CustomFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CustomFilterConfig",
    "nameFull": "CustomFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataColumnProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataColumnProps",
    "nameFull": "DataColumnProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataQuery": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQuery",
    "nameFull": "DataQuery<T>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataQueryFilter": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryFilter",
    "nameFull": "DataQueryFilter<T>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataQueryFilterCondition": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryFilterCondition",
    "nameFull": "DataQueryFilterCondition<TField>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataQueryRange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryRange",
    "nameFull": "DataQueryRange"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataRowOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataRowOptions",
    "nameFull": "DataRowOptions<TItem, TId>"
   },
   "src": "uui-core/src/types/dataRows.ts"
  },
  "@epam/uui-core:DataRowPathItem": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataRowPathItem",
    "nameFull": "DataRowPathItem<TId, TItem>"
   },
   "src": "uui-core/src/types/dataRows.ts"
  },
  "@epam/uui-core:DataRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataRowProps",
    "nameFull": "DataRowProps<TItem, TId>"
   },
   "src": "uui-core/src/types/dataRows.ts"
  },
  "@epam/uui-core:DataSourceListCounts": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceListCounts",
    "nameFull": "DataSourceListCounts"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:DataSourceListProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceListProps",
    "nameFull": "DataSourceListProps"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:DataSourceState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceState",
    "nameFull": "DataSourceState<TFilter, TId>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:DataTableCellOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableCellOptions",
    "nameFull": "DataTableCellOptions<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableCellProps",
    "nameFull": "DataTableCellProps<TItem, TId, TCellValue>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableColumnsConfigOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableColumnsConfigOptions",
    "nameFull": "DataTableColumnsConfigOptions"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableConfigModalParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableConfigModalParams",
    "nameFull": "DataTableConfigModalParams"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableHeaderCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableHeaderCellProps",
    "nameFull": "DataTableHeaderCellProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableHeaderRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableHeaderRowProps",
    "nameFull": "DataTableHeaderRowProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableRowProps",
    "nameFull": "DataTableRowProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableSelectedCellData": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableSelectedCellData",
    "nameFull": "DataTableSelectedCellData<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableState",
    "nameFull": "DataTableState<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DatePickerCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePickerCoreProps",
    "nameFull": "DatePickerCoreProps"
   },
   "src": "uui-core/src/types/components/datePicker/DatePicker.ts"
  },
  "@epam/uui-core:DatePickerFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePickerFilterConfig",
    "nameFull": "DatePickerFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DndActorProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndActorProps",
    "nameFull": "DndActorProps<TSrcData, TDstData>"
   },
   "src": "uui-core/src/services/dnd/DndActor.tsx"
  },
  "@epam/uui-core:DndActorRenderParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndActorRenderParams",
    "nameFull": "DndActorRenderParams"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DndContextState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndContextState",
    "nameFull": "DndContextState"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:DragGhostProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DragGhostProps",
    "nameFull": "DragGhostProps"
   },
   "src": "uui-core/src/services/dnd/DragGhost.tsx"
  },
  "@epam/uui-core:DropParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropParams",
    "nameFull": "DropParams<TSrcData, TDstData>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DropPosition": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropPosition",
    "nameFull": "DropPosition"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DropPositionOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropPositionOptions",
    "nameFull": "DropPositionOptions<__type>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DropdownBodyProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownBodyProps",
    "nameFull": "DropdownBodyProps"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:DropdownPlacement": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownPlacement",
    "nameFull": "DropdownPlacement"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:DropdownProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownProps",
    "nameFull": "DropdownProps"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:DropdownState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownState",
    "nameFull": "DropdownState"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:FileUploadOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FileUploadOptions",
    "nameFull": "FileUploadOptions"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:FileUploadResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FileUploadResponse",
    "nameFull": "FileUploadResponse"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:FilterConfigBase": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterConfigBase",
    "nameFull": "FilterConfigBase<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:FilterPredicate": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterPredicate",
    "nameFull": "FilterPredicate<TField>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:FilterPredicateName": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterPredicateName",
    "nameFull": "FilterPredicateName"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:FiltersConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FiltersConfig",
    "nameFull": "FiltersConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:FlexCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCellProps",
    "nameFull": "FlexCellProps"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:FlexRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRowProps",
    "nameFull": "FlexRowProps"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:FormProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormProps",
    "nameFull": "FormProps<T>"
   },
   "src": "uui-core/src/data/forms/Form.tsx"
  },
  "@epam/uui-core:FormSaveResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormSaveResponse",
    "nameFull": "FormSaveResponse<T>"
   },
   "src": "uui-core/src/data/forms/Form.tsx"
  },
  "@epam/uui-core:FormState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormState",
    "nameFull": "FormState<T>"
   },
   "src": "uui-core/src/data/forms/useForm.ts"
  },
  "@epam/uui-core:IAdaptiveItem": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAdaptiveItem",
    "nameFull": "IAdaptiveItem"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IAnalyticableClick": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticableClick",
    "nameFull": "IAnalyticableClick"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IAnalyticableOnChange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticableOnChange",
    "nameFull": "IAnalyticableOnChange<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IAnalyticsContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticsContext",
    "nameFull": "IAnalyticsContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IAnalyticsListener": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticsListener",
    "nameFull": "IAnalyticsListener"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IApiContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IApiContext",
    "nameFull": "IApiContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IBaseContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IBaseContext",
    "nameFull": "IBaseContext<TState>"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IBasicPickerToggler": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IBasicPickerToggler",
    "nameFull": "IBasicPickerToggler"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:ICanBeFixed": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeFixed",
    "nameFull": "ICanBeFixed"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ICanBeInvalid": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeInvalid",
    "nameFull": "ICanBeInvalid"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanBeReadonly": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeReadonly",
    "nameFull": "ICanBeReadonly"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanBeRequired": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeRequired",
    "nameFull": "ICanBeRequired"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanFocus": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanFocus",
    "nameFull": "ICanFocus<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanRedirect": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanRedirect",
    "nameFull": "ICanRedirect"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICheckable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICheckable",
    "nameFull": "ICheckable"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IClickable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IClickable",
    "nameFull": "IClickable"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IColumnConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IColumnConfig",
    "nameFull": "IColumnConfig"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IContextProviderSsrProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IContextProviderSsrProps",
    "nameFull": "IContextProviderSsrProps<TApi, TAppContext>"
   },
   "src": "uui-core/src/ssr/useUuiServicesSsr.tsx"
  },
  "@epam/uui-core:IDataSource": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDataSource",
    "nameFull": "IDataSource<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:IDataSourceView": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDataSourceView",
    "nameFull": "IDataSourceView<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:IDisableable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDisableable",
    "nameFull": "IDisableable"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IDndActor": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDndActor",
    "nameFull": "IDndActor<TSrcData, TDstData>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:IDndContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDndContext",
    "nameFull": "IDndContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IDropdownBodyProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDropdownBodyProps",
    "nameFull": "IDropdownBodyProps"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:IDropdownToggler": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDropdownToggler",
    "nameFull": "IDropdownToggler"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:IEditable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IEditable",
    "nameFull": "IEditable<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IEditableDebouncerOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IEditableDebouncerOptions",
    "nameFull": "IEditableDebouncerOptions"
   },
   "src": "uui-core/src/helpers/IEditableDebouncer.ts"
  },
  "@epam/uui-core:IEditableDebouncerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IEditableDebouncerProps",
    "nameFull": "IEditableDebouncerProps<T>"
   },
   "src": "uui-core/src/helpers/IEditableDebouncer.ts"
  },
  "@epam/uui-core:IErrorContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IErrorContext",
    "nameFull": "IErrorContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterConfig",
    "nameFull": "IFilterConfig"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IFilterItemBodyProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterItemBodyProps",
    "nameFull": "IFilterItemBodyProps<TFilter>"
   },
   "src": "uui-core/src/types/components/filterItemBody.ts"
  },
  "@epam/uui-core:IFilterPredicate": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterPredicate",
    "nameFull": "IFilterPredicate"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IFormApi": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFormApi",
    "nameFull": "IFormApi<T>"
   },
   "src": "uui-core/src/data/forms/Form.tsx"
  },
  "@epam/uui-core:IHasCX": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasCX",
    "nameFull": "IHasCX"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasCaption": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasCaption",
    "nameFull": "IHasCaption"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasChildren": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasChildren",
    "nameFull": "IHasChildren"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasDirection": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasDirection",
    "nameFull": "IHasDirection"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasForwardedRef": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasForwardedRef",
    "nameFull": "IHasForwardedRef<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasIcon": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasIcon",
    "nameFull": "IHasIcon"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasLabel": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasLabel",
    "nameFull": "IHasLabel"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasPlaceholder": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasPlaceholder",
    "nameFull": "IHasPlaceholder"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasRawProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasRawProps",
    "nameFull": "IHasRawProps<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasTabIndex": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasTabIndex",
    "nameFull": "IHasTabIndex"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHistory4": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHistory4",
    "nameFull": "IHistory4"
   },
   "src": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  "@epam/uui-core:ILayoutContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILayoutContext",
    "nameFull": "ILayoutContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ILens": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILens",
    "nameFull": "ILens<TFocused>"
   },
   "src": "uui-core/src/data/lenses/types.ts"
  },
  "@epam/uui-core:ILockContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILockContext",
    "nameFull": "ILockContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IMap": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IMap",
    "nameFull": "IMap<TKey, TValue>"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:IModal": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IModal",
    "nameFull": "IModal<TResult>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IModalContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IModalContext",
    "nameFull": "IModalContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:INotification": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "INotification",
    "nameFull": "INotification"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:INotificationContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "INotificationContext",
    "nameFull": "INotificationContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IPickerToggler": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IPickerToggler",
    "nameFull": "IPickerToggler<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:IPresetsApi": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IPresetsApi",
    "nameFull": "IPresetsApi<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IProcessRequest": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IProcessRequest",
    "nameFull": "IProcessRequest"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:IRouter6": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IRouter6",
    "nameFull": "IRouter6"
   },
   "src": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  "@epam/uui-core:IRouterContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IRouterContext",
    "nameFull": "IRouterContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ISkin": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ISkin",
    "nameFull": "ISkin"
   },
   "src": "uui-core/src/services/SkinContext.ts"
  },
  "@epam/uui-core:ITablePreset": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITablePreset",
    "nameFull": "ITablePreset<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ITableState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITableState",
    "nameFull": "ITableState<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ITree": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITree",
    "nameFull": "ITree<TItem, TId>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:IUserSettingsContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IUserSettingsContext",
    "nameFull": "IUserSettingsContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:Icon": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Icon",
    "nameFull": "Icon<any>"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:IdAndName": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IdAndName",
    "nameFull": "IdAndName"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:ItemsComparator": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ItemsComparator",
    "nameFull": "ItemsComparator<TItem>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:LabeledInputCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInputCoreProps",
    "nameFull": "LabeledInputCoreProps"
   },
   "src": "uui-core/src/types/components/LabeledInput.tsx"
  },
  "@epam/uui-core:LayoutLayer": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LayoutLayer",
    "nameFull": "LayoutLayer"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:LazyDataSourceApi": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApi",
    "nameFull": "LazyDataSourceApi<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequest": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequest",
    "nameFull": "LazyDataSourceApiRequest<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequestContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequestContext",
    "nameFull": "LazyDataSourceApiRequestContext<TItem, TId>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequestOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequestOptions",
    "nameFull": "LazyDataSourceApiRequestOptions<TItem, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequestRange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequestRange",
    "nameFull": "LazyDataSourceApiRequestRange"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiResponse",
    "nameFull": "LazyDataSourceApiResponse<TItem>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceProps",
    "nameFull": "LazyDataSourceProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/LazyDataSource.tsx"
  },
  "@epam/uui-core:LazyListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyListViewProps",
    "nameFull": "LazyListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/LazyListView.ts"
  },
  "@epam/uui-core:LazyLoadedMapLoadCallback": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyLoadedMapLoadCallback",
    "nameFull": "LazyLoadedMapLoadCallback<TKey, TValue>"
   },
   "src": "uui-core/src/helpers/LazyLoadedMap.ts"
  },
  "@epam/uui-core:Link": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Link",
    "nameFull": "Link"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:ListApiResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ListApiResponse",
    "nameFull": "ListApiResponse<TItem>"
   },
   "src": "uui-core/src/data/processing/ListApiCache.tsx"
  },
  "@epam/uui-core:ListApiSettings": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ListApiSettings",
    "nameFull": "ListApiSettings<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/ListApiCache.tsx"
  },
  "@epam/uui-core:LoadTreeOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LoadTreeOptions",
    "nameFull": "LoadTreeOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:LoadingStatus": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LoadingStatus",
    "nameFull": "LoadingStatus"
   },
   "src": "uui-core/src/helpers/LazyLoadedMap.ts"
  },
  "@epam/uui-core:Metadata": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Metadata",
    "nameFull": "Metadata<T>"
   },
   "src": "uui-core/src/types/validation.ts"
  },
  "@epam/uui-core:ModalBlockerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlockerProps",
    "nameFull": "ModalBlockerProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:ModalComponentProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalComponentProps",
    "nameFull": "ModalComponentProps<TParameters, TResult>"
   },
   "src": "uui-core/src/services/ModalContext.ts"
  },
  "@epam/uui-core:ModalFooterCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooterCoreProps",
    "nameFull": "ModalFooterCoreProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:ModalHeaderCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeaderCoreProps",
    "nameFull": "ModalHeaderCoreProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:ModalOperation": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalOperation",
    "nameFull": "ModalOperation"
   },
   "src": "uui-core/src/services/ModalContext.ts"
  },
  "@epam/uui-core:ModalWindowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindowProps",
    "nameFull": "ModalWindowProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:NotificationOperation": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NotificationOperation",
    "nameFull": "NotificationOperation"
   },
   "src": "uui-core/src/services/NotificationContext.tsx"
  },
  "@epam/uui-core:NotificationParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NotificationParams",
    "nameFull": "NotificationParams"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:NumericFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NumericFilterConfig",
    "nameFull": "NumericFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:PickerBaseOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBaseOptions",
    "nameFull": "PickerBaseOptions<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerBaseProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBaseProps",
    "nameFull": "PickerBaseProps<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerBindingProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBindingProps",
    "nameFull": "PickerBindingProps<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerBindingValueType": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBindingValueType",
    "nameFull": "PickerBindingValueType"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerFilterConfig",
    "nameFull": "PickerFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:PickerFooterProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerFooterProps",
    "nameFull": "PickerFooterProps<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:RangeDatePickerCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerCoreProps",
    "nameFull": "RangeDatePickerCoreProps"
   },
   "src": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerFilterConfig",
    "nameFull": "RangeDatePickerFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:RangeDatePickerInputType": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerInputType",
    "nameFull": "RangeDatePickerInputType"
   },
   "src": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerPresetValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerPresetValue",
    "nameFull": "RangeDatePickerPresetValue"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerPresets": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerPresets",
    "nameFull": "RangeDatePickerPresets"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerValue",
    "nameFull": "RangeDatePickerValue"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:RenderCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RenderCellProps",
    "nameFull": "RenderCellProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:RenderEditorProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RenderEditorProps",
    "nameFull": "RenderEditorProps<TItem, TId, TCellValue>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ScrollAlign": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ScrollAlign",
    "nameFull": "ScrollAlign"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:ScrollToConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ScrollToConfig",
    "nameFull": "ScrollToConfig"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:SearchResultItem": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SearchResultItem",
    "nameFull": "SearchResultItem<TItem>"
   },
   "src": "uui-core/src/data/processing/views/LazyListView.ts"
  },
  "@epam/uui-core:SinglePickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SinglePickerProps",
    "nameFull": "SinglePickerProps<TId, TItem>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:SkinContextComponentProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SkinContextComponentProps",
    "nameFull": "SkinContextComponentProps<TProps, TSemanticProps>"
   },
   "src": "uui-core/src/services/SkinContext.ts"
  },
  "@epam/uui-core:SortDirection": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SortDirection",
    "nameFull": "SortDirection"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:SortingOption": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SortingOption",
    "nameFull": "SortingOption<T>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:SpinnerCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SpinnerCoreProps",
    "nameFull": "SpinnerCoreProps"
   },
   "src": "uui-core/src/types/components/Spinner.ts"
  },
  "@epam/uui-core:StatefulProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "StatefulProps",
    "nameFull": "StatefulProps<T>"
   },
   "src": "uui-core/src/data/Stateful.tsx"
  },
  "@epam/uui-core:TMouseCoords": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TMouseCoords",
    "nameFull": "TMouseCoords"
   },
   "src": "uui-core/src/services/dnd/DndContext.tsx"
  },
  "@epam/uui-core:TableFiltersConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TableFiltersConfig",
    "nameFull": "TableFiltersConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:TextInputCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInputCoreProps",
    "nameFull": "TextInputCoreProps"
   },
   "src": "uui-core/src/types/components/TextInput.ts"
  },
  "@epam/uui-core:TimePickerValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TimePickerValue",
    "nameFull": "TimePickerValue"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:TooltipCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TooltipCoreProps",
    "nameFull": "TooltipCoreProps"
   },
   "src": "uui-core/src/types/components/Tooltip.ts"
  },
  "@epam/uui-core:TreeNodeInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TreeNodeInfo",
    "nameFull": "TreeNodeInfo"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:TreeParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TreeParams",
    "nameFull": "TreeParams<TItem, TId>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:UseFormProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseFormProps",
    "nameFull": "UseFormProps<T>"
   },
   "src": "uui-core/src/data/forms/useForm.ts"
  },
  "@epam/uui-core:UseTableStateHookBaseParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseTableStateHookBaseParams",
    "nameFull": "UseTableStateHookBaseParams<TFilter, TViewState>"
   },
   "src": "uui-core/src/hooks/useTableState/useTableState.ts"
  },
  "@epam/uui-core:UseTableStateHookParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseTableStateHookParams",
    "nameFull": "UseTableStateHookParams<TFilter, TViewState>"
   },
   "src": "uui-core/src/hooks/useTableState/useTableState.ts"
  },
  "@epam/uui-core:UseUuiErrorOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiErrorOptions",
    "nameFull": "UseUuiErrorOptions"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:UseUuiErrorProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiErrorProps",
    "nameFull": "UseUuiErrorProps"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:UseUuiServicesProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiServicesProps",
    "nameFull": "UseUuiServicesProps<TApi, TAppContext>"
   },
   "src": "uui-core/src/hooks/useUuiServices.ts"
  },
  "@epam/uui-core:UuiContexts": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiContexts",
    "nameFull": "UuiContexts"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:UuiErrorInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiErrorInfo",
    "nameFull": "UuiErrorInfo"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:UuiRecoveryErrorInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiRecoveryErrorInfo",
    "nameFull": "UuiRecoveryErrorInfo"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:UuiServicesProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiServicesProps",
    "nameFull": "UuiServicesProps<TApi>"
   },
   "src": "uui-core/src/hooks/useUuiServices.ts"
  },
  "@epam/uui-core:VPanelProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VPanelProps",
    "nameFull": "VPanelProps"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ValidationMode": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ValidationMode",
    "nameFull": "ValidationMode"
   },
   "src": "uui-core/src/data/validation/validate.ts"
  },
  "@epam/uui-core:VirtualListRange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VirtualListRange",
    "nameFull": "VirtualListRange"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:VirtualListState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VirtualListState",
    "nameFull": "VirtualListState"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-editor:EditorValue": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "EditorValue",
    "nameFull": "EditorValue"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:IImageElement": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "IImageElement",
    "nameFull": "IImageElement"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:LinkElement": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "LinkElement",
    "nameFull": "LinkElement"
   },
   "src": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
  },
  "@epam/uui-editor:PlaceholderPluginParams": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlaceholderPluginParams",
    "nameFull": "PlaceholderPluginParams"
   },
   "src": "uui-editor/src/plugins/placeholderPlugin/placeholderPlugin.tsx"
  },
  "@epam/uui-editor:PlateImgAlign": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlateImgAlign",
    "nameFull": "PlateImgAlign"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:PlateProps": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlateProps",
    "nameFull": "PlateProps"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:SlateImageSize": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateImageSize",
    "nameFull": "SlateImageSize"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:SlateImgAlign": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateImgAlign",
    "nameFull": "SlateImgAlign"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:SlateProps": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateProps",
    "nameFull": "SlateProps"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-timeline:BaseTimelineCanvasComponentProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "BaseTimelineCanvasComponentProps",
    "nameFull": "BaseTimelineCanvasComponentProps"
   },
   "src": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  "@epam/uui-timeline:Item": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "Item",
    "nameFull": "Item"
   },
   "src": "uui-timeline/src/renderBars.ts"
  },
  "@epam/uui-timeline:Stage": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "Stage",
    "nameFull": "Stage"
   },
   "src": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  "@epam/uui-timeline:TimelineControllerOptions": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineControllerOptions",
    "nameFull": "TimelineControllerOptions"
   },
   "src": "uui-timeline/src/TimelineController.ts"
  },
  "@epam/uui-timeline:TimelineEventsBarProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineEventsBarProps",
    "nameFull": "TimelineEventsBarProps"
   },
   "src": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  "@epam/uui-timeline:TimelineGridProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineGridProps",
    "nameFull": "TimelineGridProps"
   },
   "src": "uui-timeline/src/TimelineGrid.tsx"
  },
  "@epam/uui-timeline:TimelineNavProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineNavProps",
    "nameFull": "TimelineNavProps"
   },
   "src": "uui-timeline/src/TimelineNav.tsx"
  },
  "@epam/uui-timeline:TimelineScaleProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineScaleProps",
    "nameFull": "TimelineScaleProps"
   },
   "src": "uui-timeline/src/TimelineScale.tsx"
  },
  "@epam/uui:AccordionMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "AccordionMods",
    "nameFull": "AccordionMods"
   },
   "src": "uui/components/layout/Accordion.tsx"
  },
  "@epam/uui:AlertProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "src": "uui/components/overlays/Alert.tsx"
  },
  "@epam/uui:BadgeColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeColor",
    "nameFull": "BadgeColor"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeFill": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeFill",
    "nameFull": "BadgeFill"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeSize",
    "nameFull": "BadgeSize"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BaseRowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BaseRowMods",
    "nameFull": "BaseRowMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:BurgerButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerButtonMods",
    "nameFull": "BurgerButtonMods"
   },
   "src": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
  },
  "@epam/uui:BurgerGroupHeaderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerGroupHeaderProps",
    "nameFull": "BurgerGroupHeaderProps"
   },
   "src": "uui/components/navigation/MainMenu/Burger/BurgerGroupHeader.tsx"
  },
  "@epam/uui:BurgerMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerMods",
    "nameFull": "BurgerMods"
   },
   "src": "uui/components/navigation/MainMenu/Burger/Burger.tsx"
  },
  "@epam/uui:BurgerSearchProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerSearchProps",
    "nameFull": "BurgerSearchProps"
   },
   "src": "uui/components/navigation/MainMenu/Burger/BurgerSearch.tsx"
  },
  "@epam/uui:ButtonColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonColor",
    "nameFull": "ButtonColor"
   },
   "src": "uui/components/buttons/Button/Button.tsx"
  },
  "@epam/uui:ButtonMode": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonMode",
    "nameFull": "ButtonMode"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:ButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "src": "uui/components/buttons/Button/Button.tsx"
  },
  "@epam/uui:ButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "uui/components/buttons/Button/Button.tsx"
  },
  "@epam/uui:ButtonSemanticColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonSemanticColor",
    "nameFull": "ButtonSemanticColor"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:CheckboxMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "CheckboxMods",
    "nameFull": "CheckboxMods"
   },
   "src": "uui/components/inputs/Checkbox.tsx"
  },
  "@epam/uui:CheckboxProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "CheckboxProps",
    "nameFull": "CheckboxProps"
   },
   "src": "uui/components/inputs/Checkbox.tsx"
  },
  "@epam/uui:ColorMod": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:ColumnsConfigurationModalProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ColumnsConfigurationModalProps",
    "nameFull": "ColumnsConfigurationModalProps<TItem, TId, TFilter>"
   },
   "src": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
  },
  "@epam/uui:ConfirmationModalWindowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ConfirmationModalWindowProps",
    "nameFull": "ConfirmationModalWindowProps"
   },
   "src": "uui/components/overlays/ConfirmationModal.tsx"
  },
  "@epam/uui:ControlSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:DataPickerBodyProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataPickerBodyProps",
    "nameFull": "DataPickerBodyProps"
   },
   "src": "uui/components/pickers/DataPickerBody.tsx"
  },
  "@epam/uui:DataPickerRowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataPickerRowProps",
    "nameFull": "DataPickerRowProps<TItem, TId>"
   },
   "src": "uui/components/pickers/DataPickerRow.tsx"
  },
  "@epam/uui:DataRowsContainerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataRowsContainerProps",
    "nameFull": "DataRowsContainerProps<TItem, TId, List>"
   },
   "src": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
  },
  "@epam/uui:DataTableCellMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableCellMods",
    "nameFull": "DataTableCellMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableHeaderCellMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableHeaderCellMods",
    "nameFull": "DataTableHeaderCellMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableHeaderRowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableHeaderRowMods",
    "nameFull": "DataTableHeaderRowMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableMods",
    "nameFull": "DataTableMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableProps",
    "nameFull": "DataTableProps<TItem, TId, TFilter>"
   },
   "src": "uui/components/tables/DataTable.tsx"
  },
  "@epam/uui:DataTableRowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableRowMods",
    "nameFull": "DataTableRowMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DatePickerBodyProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DatePickerBodyProps",
    "nameFull": "DatePickerBodyProps"
   },
   "src": "uui/components/datePickers/DatePickerBody.tsx"
  },
  "@epam/uui:DatePickerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DatePickerProps",
    "nameFull": "DatePickerProps"
   },
   "src": "uui/components/datePickers/DatePicker.tsx"
  },
  "@epam/uui:DefaultNotificationProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DefaultNotificationProps",
    "nameFull": "DefaultNotificationProps"
   },
   "src": "uui/components/overlays/NotificationCard.tsx"
  },
  "@epam/uui:DropMarkerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropMarkerProps",
    "nameFull": "DropMarkerProps"
   },
   "src": "uui/components/dnd/DropMarker.tsx"
  },
  "@epam/uui:DropSpotProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropSpotProps",
    "nameFull": "DropSpotProps"
   },
   "src": "uui/components/fileUpload/DropSpot.tsx"
  },
  "@epam/uui:DropdownContainerMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "src": "uui/components/overlays/DropdownContainer.tsx"
  },
  "@epam/uui:DropdownContainerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropdownContainerProps",
    "nameFull": "DropdownContainerProps"
   },
   "src": "uui/components/overlays/DropdownContainer.tsx"
  },
  "@epam/uui:EpamBadgeSemanticColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "EpamBadgeSemanticColor",
    "nameFull": "EpamBadgeSemanticColor"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:FileCardItem": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FileCardItem",
    "nameFull": "FileCardItem"
   },
   "src": "uui/components/fileUpload/FileCard.tsx"
  },
  "@epam/uui:FileCardProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FileCardProps",
    "nameFull": "FileCardProps"
   },
   "src": "uui/components/fileUpload/FileCard.tsx"
  },
  "@epam/uui:FillStyle": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:FiltersPanelProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FiltersPanelProps",
    "nameFull": "FiltersPanelProps<TFilter>"
   },
   "src": "uui/components/filters/FiltersPanel.tsx"
  },
  "@epam/uui:FlexCellMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FlexCellMods",
    "nameFull": "FlexCellMods"
   },
   "src": "uui/components/layout/FlexItems/FlexCell.tsx"
  },
  "@epam/uui:FlexRowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FlexRowProps",
    "nameFull": "FlexRowProps"
   },
   "src": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/uui:FontStyle": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:GlobalMenuProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "GlobalMenuProps",
    "nameFull": "GlobalMenuProps"
   },
   "src": "uui/components/navigation/MainMenu/GlobalMenu.tsx"
  },
  "@epam/uui:HighlightRange": {
   "module": "@epam/uui",
   "typeName": {
    "name": "HighlightRange",
    "nameFull": "HighlightRange"
   },
   "src": "uui/components/pickers/highlight.tsx"
  },
  "@epam/uui:IDropdownMenuContainer": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IDropdownMenuContainer",
    "nameFull": "IDropdownMenuContainer"
   },
   "src": "uui/components/overlays/DropdownMenu.tsx"
  },
  "@epam/uui:IDropdownMenuItemProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IDropdownMenuItemProps",
    "nameFull": "IDropdownMenuItemProps"
   },
   "src": "uui/components/overlays/DropdownMenu.tsx"
  },
  "@epam/uui:IHasEditMode": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IHasEditMode",
    "nameFull": "IHasEditMode"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:ITextPlaceholderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ITextPlaceholderProps",
    "nameFull": "ITextPlaceholderProps"
   },
   "src": "uui/components/typography/TextPlaceholder.tsx"
  },
  "@epam/uui:IconButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "src": "uui/components/buttons/IconButton.tsx"
  },
  "@epam/uui:IconButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "src": "uui/components/buttons/IconButton.tsx"
  },
  "@epam/uui:IconColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconColor",
    "nameFull": "IconColor"
   },
   "src": "uui/components/buttons/IconButton.tsx"
  },
  "@epam/uui:IndeterminateBarMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IndeterminateBarMods",
    "nameFull": "IndeterminateBarMods"
   },
   "src": "uui/components/widgets/IndeterminateBar.tsx"
  },
  "@epam/uui:InputType": {
   "module": "@epam/uui",
   "typeName": {
    "name": "InputType",
    "nameFull": "InputType"
   },
   "src": "uui/components/datePickers/RangeDatePicker.tsx"
  },
  "@epam/uui:LabeledInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LabeledInputMods",
    "nameFull": "LabeledInputMods"
   },
   "src": "uui/components/layout/LabeledInput.tsx"
  },
  "@epam/uui:LinkButtonColorType": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonColorType",
    "nameFull": "LinkButtonColorType"
   },
   "src": "uui/components/buttons/LinkButton.tsx"
  },
  "@epam/uui:LinkButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "src": "uui/components/buttons/LinkButton.tsx"
  },
  "@epam/uui:LinkButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "src": "uui/components/buttons/LinkButton.tsx"
  },
  "@epam/uui:MainMenuAvatarProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuAvatarProps",
    "nameFull": "MainMenuAvatarProps"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
  },
  "@epam/uui:MainMenuButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuButtonMods",
    "nameFull": "MainMenuButtonMods"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuButton.tsx"
  },
  "@epam/uui:MainMenuIconProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuIconProps",
    "nameFull": "MainMenuIconProps"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuIcon.tsx"
  },
  "@epam/uui:MainMenuMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuMods",
    "nameFull": "MainMenuMods"
   },
   "src": "uui/components/navigation/MainMenu/MainMenu.tsx"
  },
  "@epam/uui:MainMenuSearchProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuSearchProps",
    "nameFull": "MainMenuSearchProps"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuSearch.tsx"
  },
  "@epam/uui:ModalFooterProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalFooterProps",
    "nameFull": "ModalFooterProps"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:ModalHeaderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalHeaderProps",
    "nameFull": "ModalHeaderProps"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:ModalWindowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:ModalWindowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalWindowProps",
    "nameFull": "ModalWindowProps"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:MultiSwitchProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "src": "uui/components/inputs/MultiSwitch.tsx"
  },
  "@epam/uui:NotificationCardProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "src": "uui/components/overlays/NotificationCard.tsx"
  },
  "@epam/uui:NumericInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "NumericInputMods",
    "nameFull": "NumericInputMods"
   },
   "src": "uui/components/inputs/NumericInput.tsx"
  },
  "@epam/uui:NumericInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "NumericInputProps",
    "nameFull": "NumericInputProps"
   },
   "src": "uui/components/inputs/NumericInput.tsx"
  },
  "@epam/uui:PanelMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "src": "uui/components/layout/FlexItems/Panel.tsx"
  },
  "@epam/uui:PickerInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerInputProps",
    "nameFull": "PickerInputProps"
   },
   "src": "uui/components/pickers/PickerInput.tsx"
  },
  "@epam/uui:PickerItemProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerItemProps",
    "nameFull": "PickerItemProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerItem.tsx"
  },
  "@epam/uui:PickerListItemProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerListItemProps",
    "nameFull": "PickerListItemProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerListItem.tsx"
  },
  "@epam/uui:PickerListProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerListProps",
    "nameFull": "PickerListProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerList.tsx"
  },
  "@epam/uui:PickerModalProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerModalProps",
    "nameFull": "PickerModalProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerModal.tsx"
  },
  "@epam/uui:PickerTogglerMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerTogglerMods",
    "nameFull": "PickerTogglerMods"
   },
   "src": "uui/components/pickers/PickerToggler.tsx"
  },
  "@epam/uui:PresetsPanelProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PresetsPanelProps",
    "nameFull": "PresetsPanelProps"
   },
   "src": "uui/components/filters/PresetPanel/PresetsPanel.tsx"
  },
  "@epam/uui:ProgressBarMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ProgressBarMods",
    "nameFull": "ProgressBarMods"
   },
   "src": "uui/components/widgets/ProgressBar.tsx"
  },
  "@epam/uui:RadioInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RadioInputMods",
    "nameFull": "RadioInputMods"
   },
   "src": "uui/components/inputs/RadioInput.tsx"
  },
  "@epam/uui:RadioInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "src": "uui/components/inputs/RadioInput.tsx"
  },
  "@epam/uui:RangeDatePickerBodyProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerBodyProps",
    "nameFull": "RangeDatePickerBodyProps<T>"
   },
   "src": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  "@epam/uui:RangeDatePickerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerProps",
    "nameFull": "RangeDatePickerProps"
   },
   "src": "uui/components/datePickers/RangeDatePicker.tsx"
  },
  "@epam/uui:RangeDatePickerValue": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerValue",
    "nameFull": "RangeDatePickerValue"
   },
   "src": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  "@epam/uui:RichTextViewMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "src": "uui/components/typography/RichTextView.tsx"
  },
  "@epam/uui:RowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "src": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/uui:RowSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:RowSizeMod": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:SemanticColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SemanticColor",
    "nameFull": "SemanticColor"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:SizeMod": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:SpinnerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SpinnerProps",
    "nameFull": "SpinnerProps"
   },
   "src": "uui/components/widgets/Spinner.tsx"
  },
  "@epam/uui:SwitchMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SwitchMods",
    "nameFull": "SwitchMods"
   },
   "src": "uui/components/inputs/Switch.tsx"
  },
  "@epam/uui:TabButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TabButtonMods",
    "nameFull": "TabButtonMods"
   },
   "src": "uui/components/buttons/TabButton.tsx"
  },
  "@epam/uui:TabButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TabButtonProps",
    "nameFull": "TabButtonProps"
   },
   "src": "uui/components/buttons/TabButton.tsx"
  },
  "@epam/uui:TableSizesAndPositionMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TableSizesAndPositionMods",
    "nameFull": "TableSizesAndPositionMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:TagMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagMods",
    "nameFull": "TagMods"
   },
   "src": "uui/components/widgets/Tag.tsx"
  },
  "@epam/uui:TagProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagProps",
    "nameFull": "TagProps"
   },
   "src": "uui/components/widgets/Tag.tsx"
  },
  "@epam/uui:TagSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagSize",
    "nameFull": "TagSize"
   },
   "src": "uui/components/widgets/Tag.tsx"
  },
  "@epam/uui:TextAreaMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextAreaMods",
    "nameFull": "TextAreaMods"
   },
   "src": "uui/components/inputs/TextArea.tsx"
  },
  "@epam/uui:TextAreaProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextAreaProps",
    "nameFull": "TextAreaProps"
   },
   "src": "uui/components/inputs/TextArea.tsx"
  },
  "@epam/uui:TextInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextInputMods",
    "nameFull": "TextInputMods"
   },
   "src": "uui/components/inputs/TextInput.tsx"
  },
  "@epam/uui:TextInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextInputProps",
    "nameFull": "TextInputProps"
   },
   "src": "uui/components/inputs/TextInput.tsx"
  },
  "@epam/uui:TextMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "src": "uui/components/typography/Text.tsx"
  },
  "@epam/uui:TextPlaceholderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextPlaceholderProps",
    "nameFull": "TextPlaceholderProps"
   },
   "src": "uui/components/typography/TextPlaceholder.tsx"
  },
  "@epam/uui:TextProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "uui/components/typography/Text.tsx"
  },
  "@epam/uui:TextSettings": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextSettings",
    "nameFull": "TextSettings"
   },
   "src": "uui/helpers/textLayout.tsx"
  },
  "@epam/uui:TextSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:TimePickerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TimePickerProps",
    "nameFull": "TimePickerProps"
   },
   "src": "uui/components/inputs/TimePicker.tsx"
  },
  "@epam/uui:TooltipMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "src": "uui/components/overlays/Tooltip.tsx"
  },
  "@epam/uui:TooltipProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "uui/components/overlays/Tooltip.tsx"
  },
  "@epam/uui:UuiMultiSwitchColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "UuiMultiSwitchColor",
    "nameFull": "UuiMultiSwitchColor"
   },
   "src": "uui/components/inputs/MultiSwitch.tsx"
  },
  "@epam/uui:VerticalTabButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "VerticalTabButtonProps",
    "nameFull": "VerticalTabButtonProps"
   },
   "src": "uui/components/buttons/VerticalTabButton.tsx"
  },
  "@epam/uui:pickerPart": {
   "module": "@epam/uui",
   "typeName": {
    "name": "pickerPart",
    "nameFull": "pickerPart"
   },
   "src": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  "node_modules/@types/react/index.d.ts:AllHTMLAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "AllHTMLAttributes",
    "nameFull": "AllHTMLAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:AriaAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "AriaAttributes",
    "nameFull": "AriaAttributes"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:Attributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "Attributes",
    "nameFull": "Attributes"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:ClassAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "ClassAttributes",
    "nameFull": "ClassAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:Component": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "Component",
    "nameFull": "Component<P, S, SS>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:ComponentLifecycle": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "ComponentLifecycle",
    "nameFull": "ComponentLifecycle<P, S, SS>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:DOMAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "DOMAttributes",
    "nameFull": "DOMAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:DeprecatedLifecycle": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "DeprecatedLifecycle",
    "nameFull": "DeprecatedLifecycle<P, S>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:HTMLAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "HTMLAttributes",
    "nameFull": "HTMLAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:InputHTMLAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "InputHTMLAttributes",
    "nameFull": "InputHTMLAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:NewLifecycle": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "NewLifecycle",
    "nameFull": "NewLifecycle<P, S, SS>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:PropsWithChildren": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "PropsWithChildren",
    "nameFull": "PropsWithChildren<P>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts:TElement": {
   "module": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts",
   "typeName": {
    "name": "TElement",
    "nameFull": "TElement"
   },
   "src": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts",
   "external": true
  },
  "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps": {
   "module": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "typeName": {
    "name": "ScrollbarProps",
    "nameFull": "ScrollbarProps"
   },
   "src": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "external": true
  },
  "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars": {
   "module": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "typeName": {
    "name": "Scrollbars",
    "nameFull": "Scrollbars"
   },
   "src": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "external": true
  },
  "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues": {
   "module": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "typeName": {
    "name": "positionValues",
    "nameFull": "positionValues"
   },
   "src": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "external": true
  }
 }
}