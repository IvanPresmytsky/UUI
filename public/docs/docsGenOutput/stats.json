{
 "missingPropComment": [
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "AcceptDropParams",
     "nameFull": "AcceptDropParams<TSrcData, TDstData>"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   "propNames": [
    "dstData",
    "offsetLeft",
    "offsetTop",
    "srcData",
    "targetHeight",
    "targetWidth"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiCallInfo",
     "nameFull": "ApiCallInfo"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "attemptsCount",
    "dismissError",
    "errorStatus",
    "finishedAt",
    "httpStatus",
    "method",
    "name",
    "options",
    "requestData",
    "responseData",
    "startedAt",
    "status",
    "url"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiCallOptions",
     "nameFull": "ApiCallOptions"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "errorHandling",
    "fetchOptions"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiContextProps",
     "nameFull": "ApiContextProps"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   "propNames": [
    "apiPingPath",
    "apiReloginPath",
    "apiServerUrl"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApiExtensions",
     "nameFull": "ApiExtensions<TApi>"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "withOptions"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApplyFilterOptions",
     "nameFull": "ApplyFilterOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   "propNames": [
    "filter",
    "getFilter"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApplySearchOptions",
     "nameFull": "ApplySearchOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   "propNames": [
    "getSearchFields",
    "search",
    "sortSearchByRelevance"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ApplySortOptions",
     "nameFull": "ApplySortOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   "propNames": [
    "sortBy",
    "sorting"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ArrayListViewProps",
     "nameFull": "ArrayListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/ArrayListView.ts"
   },
   "propNames": [
    "items"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ArrayPickerProps",
     "nameFull": "ArrayPickerProps<TId, TItem>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   "propNames": [
    "emptyValue",
    "selectionMode",
    "valueType"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "AsyncListViewProps",
     "nameFull": "AsyncListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/AsyncListView.ts"
   },
   "propNames": [
    "api"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BaseArrayListViewProps",
     "nameFull": "BaseArrayListViewProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/ArrayListView.ts"
   },
   "propNames": [
    "getFilter",
    "getSearchFields",
    "sortBy"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BaseDatePickerProps",
     "nameFull": "BaseDatePickerProps"
    },
    "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
   },
   "propNames": [
    "bodyCx",
    "iconPosition",
    "onBlur"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "BaseRangeDatePickerProps",
     "nameFull": "BaseRangeDatePickerProps"
    },
    "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
   },
   "propNames": [
    "bodyCx"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ButtonCoreProps",
     "nameFull": "ButtonCoreProps"
    },
    "source": "uui-core/src/types/components/Button.ts"
   },
   "propNames": [
    "count",
    "countPosition"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ButtonSemanticProps",
     "nameFull": "ButtonSemanticProps"
    },
    "source": "uui-core/src/types/components/Button.ts"
   },
   "propNames": [
    "type"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "CommonContexts",
     "nameFull": "CommonContexts<TApi, TAppContext>"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "api",
    "history",
    "uuiApp"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ContextProviderProps",
     "nameFull": "ContextProviderProps<TApi, TAppContext>"
    },
    "source": "uui-core/src/services/ContextProvider.tsx"
   },
   "propNames": [
    "gaCode",
    "history",
    "loadAppContext",
    "onInitCompleted"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataColumnProps",
     "nameFull": "DataColumnProps<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "canAcceptCopy",
    "canCopy",
    "justifyContent"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataQuery",
     "nameFull": "DataQuery<T>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   "propNames": [
    "filter",
    "range",
    "search",
    "sorting"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataQueryRange",
     "nameFull": "DataQueryRange"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   "propNames": [
    "count",
    "from"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataRowOptions",
     "nameFull": "DataRowOptions<TItem, TId>"
    },
    "source": "uui-core/src/types/dataRows.ts"
   },
   "propNames": [
    "pin"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataRowPathItem",
     "nameFull": "DataRowPathItem<TId, TItem>"
    },
    "source": "uui-core/src/types/dataRows.ts"
   },
   "propNames": [
    "id",
    "isLastChild",
    "value"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataRowProps",
     "nameFull": "DataRowProps<TItem, TId>"
    },
    "source": "uui-core/src/types/dataRows.ts"
   },
   "propNames": [
    "isPinned",
    "isUnknown"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataSourceListProps",
     "nameFull": "DataSourceListProps"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "selectAll"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataSourceState",
     "nameFull": "DataSourceState<TFilter, TId>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "checked",
    "filter",
    "focusedIndex",
    "folded",
    "page",
    "pageSize",
    "search",
    "selectedId",
    "sorting"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableCellProps",
     "nameFull": "DataTableCellProps<TItem, TId, TCellValue>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "renderUnknown"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableColumnsConfigOptions",
     "nameFull": "DataTableColumnsConfigOptions"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "allowColumnsReordering",
    "allowColumnsResizing"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableConfigModalParams",
     "nameFull": "DataTableConfigModalParams"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "columns"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableHeaderCellProps",
     "nameFull": "DataTableHeaderCellProps<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "column",
    "isFilterActive",
    "isFirstColumn",
    "isLastColumn",
    "key",
    "onDrop",
    "onSort",
    "renderFilter",
    "selectAll",
    "sortDirection"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableHeaderRowProps",
     "nameFull": "DataTableHeaderRowProps<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "columns",
    "onConfigButtonClick",
    "renderCell",
    "renderConfigButton",
    "selectAll"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableRowProps",
     "nameFull": "DataTableRowProps<TItem, TId>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "columns",
    "renderCell",
    "renderDropMarkers"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableSelectedCellData",
     "nameFull": "DataTableSelectedCellData<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "column",
    "row"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DataTableState",
     "nameFull": "DataTableState<TFilter, TViewState>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "columnsConfig",
    "filtersConfig",
    "presetId",
    "viewState"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DndActorProps",
     "nameFull": "DndActorProps<TSrcData, TDstData>"
    },
    "source": "uui-core/src/services/dnd/DndActor.tsx"
   },
   "propNames": [
    "render"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DndContextState",
     "nameFull": "DndContextState"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "ghostOffsetX",
    "ghostOffsetY",
    "ghostWidth",
    "isDragging",
    "renderGhost"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropdownProps",
     "nameFull": "DropdownProps"
    },
    "source": "uui-core/src/types/components/Dropdown.ts"
   },
   "propNames": [
    "boundaryElement",
    "closeBodyOnTogglerHidden",
    "closeDelay",
    "closeOnClickOutside",
    "closeOnMouseLeave",
    "closeOnTargetClick",
    "isNotUnfoldable",
    "modifiers",
    "onClose",
    "openOnClick",
    "openOnHover",
    "placement",
    "portalTarget",
    "renderBody",
    "renderTarget",
    "zIndex"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropdownState",
     "nameFull": "DropdownState"
    },
    "source": "uui-core/src/types/components/Dropdown.ts"
   },
   "propNames": [
    "bodyBoundingRect",
    "opened"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "DropParams",
     "nameFull": "DropParams<TSrcData, TDstData>"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   "propNames": [
    "position"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FileUploadOptions",
     "nameFull": "FileUploadOptions"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   "propNames": [
    "getXHR",
    "onProgress"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FileUploadResponse",
     "nameFull": "FileUploadResponse"
    },
    "source": "uui-core/src/services/ApiContext.ts"
   },
   "propNames": [
    "error",
    "extension",
    "id",
    "name",
    "path",
    "size",
    "type"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FilterPredicate",
     "nameFull": "FilterPredicate<TField>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   "propNames": [
    "eq",
    "gt",
    "gte",
    "in",
    "inRange",
    "isNull",
    "lt",
    "lte",
    "neq",
    "nin",
    "not",
    "notInRange"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FormSaveResponse",
     "nameFull": "FormSaveResponse<T>"
    },
    "source": "uui-core/src/data/forms/Form.tsx"
   },
   "propNames": [
    "form",
    "validation"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "FormState",
     "nameFull": "FormState<T>"
    },
    "source": "uui-core/src/data/forms/useForm.ts"
   },
   "propNames": [
    "form",
    "formHistory",
    "historyIndex",
    "isChanged",
    "isInProgress",
    "isInSaveMode",
    "lastSentForm",
    "serverValidationState",
    "validationState"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAdaptiveItem",
     "nameFull": "IAdaptiveItem"
    },
    "source": "uui-core/src/types/props.ts"
   },
   "propNames": [
    "collapsedContainer",
    "collapseToMore",
    "estimatedWidth",
    "priority",
    "showInBurgerMenu"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAnalyticsContext",
     "nameFull": "IAnalyticsContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "addListener",
    "sendEvent"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IAnalyticsListener",
     "nameFull": "IAnalyticsListener"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "sendEvent"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IApiContext",
     "nameFull": "IApiContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "getActiveCalls",
    "processRequest",
    "recoveryReason",
    "reset",
    "status",
    "uploadFile"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IBaseContext",
     "nameFull": "IBaseContext<TState>"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "destroyContext",
    "subscribe",
    "unsubscribe"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IBasicPickerToggler",
     "nameFull": "IBasicPickerToggler"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   "propNames": [
    "onClear"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IColumnConfig",
     "nameFull": "IColumnConfig"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "isVisible",
    "order",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IContextProviderSsrProps",
     "nameFull": "IContextProviderSsrProps<TApi, TAppContext>"
    },
    "source": "uui-core/src/ssr/useUuiServicesSsr.tsx"
   },
   "propNames": [
    "router"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IdAndName",
     "nameFull": "IdAndName"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   "propNames": [
    "id",
    "name"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDataSource",
     "nameFull": "IDataSource<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "getById",
    "getId",
    "getView",
    "setItem",
    "unsubscribeView",
    "useView"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDataSourceView",
     "nameFull": "IDataSourceView<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "_forceUpdate",
    "destroy",
    "getById",
    "getListProps",
    "getSelectedRows",
    "getSelectedRowsCount",
    "getVisibleRows",
    "loadData",
    "reload",
    "selectAll"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDndActor",
     "nameFull": "IDndActor<TSrcData, TDstData>"
    },
    "source": "uui-core/src/types/dnd.ts"
   },
   "propNames": [
    "canAcceptDrop",
    "dstData",
    "onDrop",
    "srcData"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDndContext",
     "nameFull": "IDndContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "dragData",
    "endDrag",
    "getMouseCoords",
    "isDragging",
    "startDrag"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IDropdownBodyProps",
     "nameFull": "IDropdownBodyProps"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   "propNames": [
    "arrowProps",
    "isOpen",
    "onClose",
    "scheduleUpdate",
    "togglerHeight",
    "togglerWidth"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IErrorContext",
     "nameFull": "IErrorContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "currentError",
    "discardError",
    "onError",
    "recover",
    "reportError"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IFilterConfig",
     "nameFull": "IFilterConfig"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "isVisible",
    "order"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IFilterItemBodyProps",
     "nameFull": "IFilterItemBodyProps<TFilter>"
    },
    "source": "uui-core/src/types/components/filterItemBody.ts"
   },
   "propNames": [
    "selectedPredicate"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IFilterPredicate",
     "nameFull": "IFilterPredicate"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "isDefault",
    "name",
    "predicate"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasChildren",
     "nameFull": "IHasChildren"
    },
    "source": "uui-core/src/types/props.ts"
   },
   "propNames": [
    "children"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHasDirection",
     "nameFull": "IHasDirection"
    },
    "source": "uui-core/src/types/props.ts"
   },
   "propNames": [
    "direction"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IHistory4",
     "nameFull": "IHistory4"
    },
    "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
   },
   "propNames": [
    "block",
    "createHref",
    "listen",
    "location",
    "push",
    "replace"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ILayoutContext",
     "nameFull": "ILayoutContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "getLayer",
    "getPortalRoot",
    "getPortalRootId",
    "releaseLayer"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ILens",
     "nameFull": "ILens<TFocused>"
    },
    "source": "uui-core/src/data/lenses/types.ts"
   },
   "propNames": [
    "default",
    "get",
    "index",
    "onChange",
    "prop",
    "set",
    "toProps",
    "update"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ILockContext",
     "nameFull": "ILockContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "acquire",
    "getCurrentLock",
    "release",
    "withLock"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IMap",
     "nameFull": "IMap<TKey, TValue>"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   "propNames": [
    "[Symbol.iterator]",
    "constructor",
    "delete",
    "get",
    "has",
    "set",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IModal",
     "nameFull": "IModal<TResult>"
    },
    "source": "uui-core/src/types/props.ts"
   },
   "propNames": [
    "abort",
    "isActive",
    "key",
    "success",
    "zIndex"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IModalContext",
     "nameFull": "IModalContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "closeAll",
    "getOperations",
    "isModalOperationActive",
    "show"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "INotification",
     "nameFull": "INotification"
    },
    "source": "uui-core/src/types/props.ts"
   },
   "propNames": [
    "clearTimer",
    "id",
    "key",
    "onClose",
    "onSuccess",
    "refreshTimer"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "INotificationContext",
     "nameFull": "INotificationContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "clearAll",
    "getNotifications",
    "remove",
    "show"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IPickerToggler",
     "nameFull": "IPickerToggler<TItem, TId>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   "propNames": [
    "selectedRowsCount",
    "selection"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IRouter6",
     "nameFull": "IRouter6"
    },
    "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
   },
   "propNames": [
    "createHref",
    "deleteBlocker",
    "getBlocker",
    "navigate",
    "state",
    "subscribe"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IRouterContext",
     "nameFull": "IRouterContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "block",
    "createHref",
    "getCurrentLink",
    "isActive",
    "listen",
    "redirect",
    "transfer"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ISkin",
     "nameFull": "ISkin"
    },
    "source": "uui-core/src/services/SkinContext.ts"
   },
   "propNames": [
    "Button",
    "Checkbox",
    "DatePicker",
    "FlexCell",
    "FlexRow",
    "IconButton",
    "LabeledInput",
    "ModalBlocker",
    "ModalFooter",
    "ModalHeader",
    "ModalWindow",
    "RangeDatePicker",
    "Spinner",
    "TextInput"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ITablePreset",
     "nameFull": "ITablePreset<TFilter, TViewState>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "columnsConfig",
    "filter",
    "filtersConfig",
    "id",
    "isReadonly",
    "name",
    "order",
    "sorting",
    "viewState"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ITree",
     "nameFull": "ITree<TItem, TId>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   "propNames": [
    "cascadeSelection",
    "clearStructure",
    "computeSubtotals",
    "filter",
    "forEach",
    "getById",
    "getChildren",
    "getChildrenByParentId",
    "getChildrenIdsByParentId",
    "getNodeInfo",
    "getParentIdsRecursive",
    "getParents",
    "getPathById",
    "getPathItem",
    "getRootIds",
    "getRootItems",
    "getTotalRecursiveCount",
    "isFlatList",
    "load",
    "loadMissing",
    "loadMissingIdsAndParents",
    "patch",
    "search",
    "sort"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "IUserSettingsContext",
     "nameFull": "IUserSettingsContext"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "get",
    "set"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LayoutLayer",
     "nameFull": "LayoutLayer"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   "propNames": [
    "depth",
    "id",
    "zIndex"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LazyDataSourceApiRequest",
     "nameFull": "LazyDataSourceApiRequest<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "ids",
    "page",
    "pageSize",
    "range"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LazyDataSourceApiRequestContext",
     "nameFull": "LazyDataSourceApiRequestContext<TItem, TId>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "parent",
    "parentId"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LazyDataSourceApiRequestOptions",
     "nameFull": "LazyDataSourceApiRequestOptions<TItem, TFilter>"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "filter",
    "search",
    "sorting"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LazyDataSourceApiRequestRange",
     "nameFull": "LazyDataSourceApiRequestRange"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "count",
    "from"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "Link",
     "nameFull": "Link"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   "propNames": [
    "hash",
    "key",
    "pathname",
    "query",
    "search",
    "state"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "LoadTreeOptions",
     "nameFull": "LoadTreeOptions<TItem, TId, TFilter>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   "propNames": [
    "isFolded",
    "loadAllChildren"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "Metadata",
     "nameFull": "Metadata<T>"
    },
    "source": "uui-core/src/types/validation.ts"
   },
   "propNames": [
    "all",
    "maxLength",
    "maxValue",
    "minValue",
    "props",
    "validators"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalBlockerProps",
     "nameFull": "ModalBlockerProps"
    },
    "source": "uui-core/src/types/components/Modals.ts"
   },
   "propNames": [
    "disableCloseByEsc",
    "disableFocusLock",
    "disallowClickOutside"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalComponentProps",
     "nameFull": "ModalComponentProps<TParameters, TResult>"
    },
    "source": "uui-core/src/services/ModalContext.ts"
   },
   "propNames": [
    "abort",
    "depth",
    "isActive",
    "key",
    "parameters",
    "success",
    "zIndex"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalFooterCoreProps",
     "nameFull": "ModalFooterCoreProps"
    },
    "source": "uui-core/src/types/components/Modals.ts"
   },
   "propNames": [
    "borderTop"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalHeaderCoreProps",
     "nameFull": "ModalHeaderCoreProps"
    },
    "source": "uui-core/src/types/components/Modals.ts"
   },
   "propNames": [
    "onClose",
    "title"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ModalOperation",
     "nameFull": "ModalOperation"
    },
    "source": "uui-core/src/services/ModalContext.ts"
   },
   "propNames": [
    "component",
    "props"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "NotificationOperation",
     "nameFull": "NotificationOperation"
    },
    "source": "uui-core/src/services/NotificationContext.tsx"
   },
   "propNames": [
    "component",
    "config",
    "props"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "NotificationParams",
     "nameFull": "NotificationParams"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "duration",
    "position"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerFilterConfig",
     "nameFull": "PickerFilterConfig<TFilter>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "dataSource",
    "getName",
    "renderRow",
    "type",
    "valueType"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "PickerFooterProps",
     "nameFull": "PickerFooterProps<TItem, TId>"
    },
    "source": "uui-core/src/types/pickers.ts"
   },
   "propNames": [
    "clearSelection",
    "disableClear",
    "selectionMode",
    "showSelected",
    "view"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerCoreProps",
     "nameFull": "RangeDatePickerCoreProps"
    },
    "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
   },
   "propNames": [
    "getPlaceholder",
    "rawProps"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerPresetValue",
     "nameFull": "RangeDatePickerPresetValue"
    },
    "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
   },
   "propNames": [
    "from",
    "order",
    "to"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RangeDatePickerValue",
     "nameFull": "RangeDatePickerValue"
    },
    "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
   },
   "propNames": [
    "from",
    "to"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "RenderEditorProps",
     "nameFull": "RenderEditorProps<TItem, TId, TCellValue>"
    },
    "source": "uui-core/src/types/tables.ts"
   },
   "propNames": [
    "mode",
    "rowProps"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "ScrollToConfig",
     "nameFull": "ScrollToConfig"
    },
    "source": "uui-core/src/types/dataSources.ts"
   },
   "propNames": [
    "align",
    "behavior",
    "index"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SearchResultItem",
     "nameFull": "SearchResultItem<TItem>"
    },
    "source": "uui-core/src/data/processing/views/LazyListView.ts"
   },
   "propNames": [
    "parents"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SkinContextComponentProps",
     "nameFull": "SkinContextComponentProps<TProps, TSemanticProps>"
    },
    "source": "uui-core/src/services/SkinContext.ts"
   },
   "propNames": [
    "usageContext"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "SortingOption",
     "nameFull": "SortingOption<T>"
    },
    "source": "uui-core/src/types/dataQuery.ts"
   },
   "propNames": [
    "direction",
    "field"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "StatefulProps",
     "nameFull": "StatefulProps<T>"
    },
    "source": "uui-core/src/data/Stateful.tsx"
   },
   "propNames": [
    "initialState",
    "render",
    "storage"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TimePickerValue",
     "nameFull": "TimePickerValue"
    },
    "source": "uui-core/src/types/objects.ts"
   },
   "propNames": [
    "hours",
    "minutes"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TMouseCoords",
     "nameFull": "TMouseCoords"
    },
    "source": "uui-core/src/services/dnd/DndContext.tsx"
   },
   "propNames": [
    "buttons",
    "mouseDownPageX",
    "mouseDownPageY",
    "mouseDx",
    "mouseDxSmooth",
    "mouseDy",
    "mouseDySmooth",
    "mousePageX",
    "mousePageY"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TreeNodeInfo",
     "nameFull": "TreeNodeInfo"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   "propNames": [
    "count"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "TreeParams",
     "nameFull": "TreeParams<TItem, TId>"
    },
    "source": "uui-core/src/data/processing/views/tree/ITree.ts"
   },
   "propNames": [
    "complexIds",
    "getId",
    "getParentId"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseUuiErrorOptions",
     "nameFull": "UseUuiErrorOptions"
    },
    "source": "uui-core/src/hooks/useUuiError.ts"
   },
   "propNames": [
    "errorConfig",
    "recoveryConfig"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseUuiErrorProps",
     "nameFull": "UseUuiErrorProps"
    },
    "source": "uui-core/src/hooks/useUuiError.ts"
   },
   "propNames": [
    "getErrorInfo",
    "options"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UseUuiServicesProps",
     "nameFull": "UseUuiServicesProps<TApi, TAppContext>"
    },
    "source": "uui-core/src/hooks/useUuiServices.ts"
   },
   "propNames": [
    "appContext",
    "router"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiContexts",
     "nameFull": "UuiContexts"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "uuiAnalytics",
    "uuiApi",
    "uuiDnD",
    "uuiErrors",
    "uuiLayout",
    "uuiLocks",
    "uuiModals",
    "uuiNotifications",
    "uuiRouter",
    "uuiSkin",
    "uuiUserSettings"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiErrorInfo",
     "nameFull": "UuiErrorInfo"
    },
    "source": "uui-core/src/types/contexts.ts"
   },
   "propNames": [
    "imageUrl",
    "mobileImageUrl",
    "status",
    "subtitle",
    "title"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiRecoveryErrorInfo",
     "nameFull": "UuiRecoveryErrorInfo"
    },
    "source": "uui-core/src/hooks/useUuiError.ts"
   },
   "propNames": [
    "subtitle",
    "title"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "UuiServicesProps",
     "nameFull": "UuiServicesProps<TApi>"
    },
    "source": "uui-core/src/hooks/useUuiServices.ts"
   },
   "propNames": [
    "apiDefinition",
    "skinContext"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-core",
    "typeName": {
     "name": "VPanelProps",
     "nameFull": "VPanelProps"
    },
    "source": "uui-core/src/types/props.ts"
   },
   "propNames": [
    "style"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AccordionState",
     "nameFull": "AccordionState"
    },
    "source": "uui-components/src/layout/Accordion.tsx"
   },
   "propNames": [
    "opened"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AdaptiveItemProps",
     "nameFull": "AdaptiveItemProps<T>"
    },
    "source": "uui-components/src/adaptivePanel/types.ts"
   },
   "propNames": [
    "collapsedContainer",
    "id",
    "priority",
    "render"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AdaptivePanelProps",
     "nameFull": "AdaptivePanelProps"
    },
    "source": "uui-components/src/adaptivePanel/types.ts"
   },
   "propNames": [
    "items"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ArrayPickerProps",
     "nameFull": "ArrayPickerProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   "propNames": [
    "emptyValue",
    "selectionMode",
    "valueType"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "AvatarStackProps",
     "nameFull": "AvatarStackProps"
    },
    "source": "uui-components/src/widgets/AvatarStack.tsx"
   },
   "propNames": [
    "avatarsCount",
    "avatarSize",
    "direction",
    "renderItem",
    "urlArray"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "BaseRatingProps",
     "nameFull": "BaseRatingProps<TValue>"
    },
    "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
   },
   "propNames": [
    "from",
    "renderRating",
    "step",
    "to"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "BaseTimePickerProps",
     "nameFull": "BaseTimePickerProps"
    },
    "source": "uui-components/src/inputs/BaseTimePicker.tsx"
   },
   "propNames": [
    "format",
    "id",
    "minutesStep",
    "rawProps",
    "renderTarget"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "BurgerProps",
     "nameFull": "BurgerProps"
    },
    "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
   },
   "propNames": [
    "bg",
    "burgerContentCx",
    "burgerIcon",
    "crossIcon",
    "logoUrl",
    "renderBurgerContent",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CalendarPresetsProps",
     "nameFull": "CalendarPresetsProps"
    },
    "source": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
   },
   "propNames": [
    "onPresetSet",
    "presets"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CalendarProps",
     "nameFull": "CalendarProps<TSelection>"
    },
    "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
   },
   "propNames": [
    "displayedDate",
    "filter",
    "getDayCX",
    "hideAnotherMonths",
    "isHoliday",
    "onValueChange",
    "renderDay",
    "value"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CarouselProps",
     "nameFull": "CarouselProps"
    },
    "source": "uui-components/src/widgets/Carousel.tsx"
   },
   "propNames": [
    "arrowIcon",
    "divideBy",
    "items",
    "renderItem"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CarouselState",
     "nameFull": "CarouselState"
    },
    "source": "uui-components/src/widgets/Carousel.tsx"
   },
   "propNames": [
    "activeSlide"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "CheckboxProps",
     "nameFull": "CheckboxProps"
    },
    "source": "uui-components/src/inputs/Checkbox.tsx"
   },
   "propNames": [
    "id",
    "renderLabel"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ColumnsConfigurationRowProps",
     "nameFull": "ColumnsConfigurationRowProps"
    },
    "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
   },
   "propNames": [
    "columnConfig",
    "isDndAllowed",
    "isPinned",
    "isPinnedAlways",
    "onCanAcceptDrop",
    "onDrop",
    "togglePin",
    "toggleVisibility"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DataSourceKeyboardParams",
     "nameFull": "DataSourceKeyboardParams"
    },
    "source": "uui-components/src/pickers/KeyboardUtils.tsx"
   },
   "propNames": [
    "editMode",
    "listView",
    "rows"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DataTableSelectionProviderProps",
     "nameFull": "DataTableSelectionProviderProps<TItem, TId, TFilter>"
    },
    "source": "uui-components/src/table/tableCellsSelection/DataTableSelectionProvider.tsx"
   },
   "propNames": [
    "columns",
    "onCopy",
    "rows"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DatePickerBodyBaseOptions",
     "nameFull": "DatePickerBodyBaseOptions"
    },
    "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
   },
   "propNames": [
    "changeIsOpen",
    "filter",
    "presets",
    "renderDay"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DatePickerBodyBaseProps",
     "nameFull": "DatePickerBodyBaseProps<TSelection>"
    },
    "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
   },
   "propNames": [
    "setDisplayedDateAndView",
    "setSelectedDate",
    "value"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DatePickerState",
     "nameFull": "DatePickerState"
    },
    "source": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
   },
   "propNames": [
    "inputValue",
    "isOpen"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DayProps",
     "nameFull": "DayProps"
    },
    "source": "uui-components/src/inputs/DatePicker/Day.tsx"
   },
   "propNames": [
    "filter",
    "getDayCX",
    "isHoliday",
    "isSelected",
    "renderDayNumber"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DropdownContainerProps",
     "nameFull": "DropdownContainerProps"
    },
    "source": "uui-components/src/overlays/DropdownContainer.tsx"
   },
   "propNames": [
    "height",
    "maxWidth",
    "showArrow",
    "style",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "DropSpotRenderParams",
     "nameFull": "DropSpotRenderParams"
    },
    "source": "uui-components/src/widgets/DropSpot.tsx"
   },
   "propNames": [
    "eventHandlers"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "HeaderCellContentProps",
     "nameFull": "HeaderCellContentProps"
    },
    "source": "uui-components/src/table/DataTableHeaderCell.tsx"
   },
   "propNames": [
    "onResize",
    "onResizeEnd",
    "onResizeStart",
    "toggleSort"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "InputAddonProps",
     "nameFull": "InputAddonProps"
    },
    "source": "uui-components/src/inputs/InputAddon.tsx"
   },
   "propNames": [
    "content"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IProgressBarProps",
     "nameFull": "IProgressBarProps"
    },
    "source": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
   },
   "propNames": [
    "hideLabel",
    "label",
    "progress"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IScrollSpyApi",
     "nameFull": "IScrollSpyApi"
    },
    "source": "uui-components/src/navigation/ScrollSpy.tsx"
   },
   "propNames": [
    "currentActive",
    "scrollToElement",
    "setRef"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "IScrollSpyProps",
     "nameFull": "IScrollSpyProps"
    },
    "source": "uui-components/src/navigation/ScrollSpy.tsx"
   },
   "propNames": [
    "elements",
    "initialActive",
    "options"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MainMenuDropdownProps",
     "nameFull": "MainMenuDropdownProps"
    },
    "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
   },
   "propNames": [
    "renderBody"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MainMenuLogoProps",
     "nameFull": "MainMenuLogoProps"
    },
    "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
   },
   "propNames": [
    "link",
    "logoBgColor",
    "logoUrl",
    "onClick",
    "onContextMenu",
    "showArrow"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MainMenuProps",
     "nameFull": "MainMenuProps"
    },
    "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
   },
   "propNames": [
    "alwaysShowBurger",
    "appLogoBgColor",
    "appLogoUrl",
    "Burger",
    "children",
    "customerLogoBgColor",
    "customerLogoHref",
    "customerLogoLink",
    "customerLogoUrl",
    "customerLogoWidth",
    "externalGap",
    "isTransparent",
    "items",
    "logoHref",
    "logoLink",
    "logoWidth",
    "MainMenuDropdown",
    "onLogoClick",
    "renderBurger",
    "serverBadge",
    "tooltipTechInfo"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "MonthSelectionProps",
     "nameFull": "MonthSelectionProps"
    },
    "source": "uui-components/src/inputs/DatePicker/MonthSelection.tsx"
   },
   "propNames": [
    "selectedDate"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PaginatorParams",
     "nameFull": "PaginatorParams"
    },
    "source": "uui-components/src/widgets/Paginator.tsx"
   },
   "propNames": [
    "goToNext",
    "goToPrev",
    "isFirst",
    "isLast",
    "pages",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBindingHelper",
     "nameFull": "PickerBindingHelper<TItem, TId>"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   "propNames": [
    "applyValueToDataSourceState",
    "dataSourceStateToValue"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBodyBaseProps",
     "nameFull": "PickerBodyBaseProps"
    },
    "source": "uui-components/src/pickers/PickerBodyBase.tsx"
   },
   "propNames": [
    "fixedBodyPosition",
    "onKeyDown",
    "renderNotFound",
    "rows",
    "scheduleUpdate",
    "search",
    "showSearch"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerBodyValue",
     "nameFull": "PickerBodyValue<TSelection>"
    },
    "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
   },
   "propNames": [
    "displayedDate",
    "selectedDate",
    "view"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerInputBaseProps",
     "nameFull": "PickerInputBaseProps<TItem, TId>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   "propNames": [
    "portalTarget"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerModalArrayProps",
     "nameFull": "PickerModalArrayProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   "propNames": [
    "initialValue",
    "selectionMode",
    "valueType"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerModalOptions",
     "nameFull": "PickerModalOptions<TItem, TId>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   "propNames": [
    "disallowClickOutside",
    "renderFilter",
    "renderFooter"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerModalScalarProps",
     "nameFull": "PickerModalScalarProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   "propNames": [
    "initialValue",
    "selectionMode",
    "valueType"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PickerTogglerProps",
     "nameFull": "PickerTogglerProps<TItem, TId>"
    },
    "source": "uui-components/src/pickers/PickerToggler.tsx"
   },
   "propNames": [
    "autoFocus",
    "cancelIcon",
    "closePickerBody",
    "disableClear",
    "disableSearch",
    "dropdownIcon",
    "entityName",
    "getName",
    "isSingleLine",
    "maxItems",
    "minCharsToSearch",
    "onKeyDown",
    "pickerMode",
    "renderItem",
    "searchPosition"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "PortalProps",
     "nameFull": "PortalProps"
    },
    "source": "uui-components/src/overlays/Portal.tsx"
   },
   "propNames": [
    "key",
    "target"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RadioGroupItem",
     "nameFull": "RadioGroupItem<TValue>"
    },
    "source": "uui-components/src/layout/RadioGroup.tsx"
   },
   "propNames": [
    "id",
    "name",
    "renderName"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RadioGroupProps",
     "nameFull": "RadioGroupProps<TValue>"
    },
    "source": "uui-components/src/layout/RadioGroup.tsx"
   },
   "propNames": [
    "items",
    "RadioInput",
    "radioInputProps"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RadioInputProps",
     "nameFull": "RadioInputProps"
    },
    "source": "uui-components/src/inputs/RadioInput.tsx"
   },
   "propNames": [
    "icon",
    "id",
    "renderLabel",
    "tabIndex"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RangeSliderState",
     "nameFull": "RangeSliderState"
    },
    "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
   },
   "propNames": [
    "activeHandle"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RangeSliderValue",
     "nameFull": "RangeSliderValue"
    },
    "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
   },
   "propNames": [
    "from",
    "to"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RatingProps",
     "nameFull": "RatingProps"
    },
    "source": "uui-components/src/inputs/Rating/Rating.tsx"
   },
   "propNames": [
    "emptyStarIcon",
    "filledStarIcon",
    "hideTooltip",
    "hint",
    "Tooltip"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "RichTextViewProps",
     "nameFull": "RichTextViewProps"
    },
    "source": "uui-components/src/RichTextView.tsx"
   },
   "propNames": [
    "htmlContent"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "ScrollbarProps",
     "nameFull": "ScrollbarProps"
    },
    "source": "uui-components/src/layout/ScrollBars.tsx"
   },
   "propNames": [
    "disableScroll",
    "hasBottomShadow",
    "hasTopShadow",
    "renderView"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SinglePickerProps",
     "nameFull": "SinglePickerProps<TId, TItem>"
    },
    "source": "uui-components/src/pickers/bindingHelpers.ts"
   },
   "propNames": [
    "selectionMode",
    "valueType"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SliderBaseState",
     "nameFull": "SliderBaseState"
    },
    "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
   },
   "propNames": [
    "isActive",
    "valueWidth"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SnackbarProps",
     "nameFull": "SnackbarProps"
    },
    "source": "uui-components/src/overlays/Snackbar.tsx"
   },
   "propNames": [
    "closeIcon",
    "notifications"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "SwitchProps",
     "nameFull": "SwitchProps"
    },
    "source": "uui-components/src/inputs/Switch.tsx"
   },
   "propNames": [
    "id"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TimePickerBodyProps",
     "nameFull": "TimePickerBodyProps"
    },
    "source": "uui-components/src/inputs/TimePickerBody.tsx"
   },
   "propNames": [
    "addIcon",
    "format",
    "minutesStep",
    "subtractIcon"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TooltipState",
     "nameFull": "TooltipState"
    },
    "source": "uui-components/src/overlays/Tooltip.tsx"
   },
   "propNames": [
    "isOpen"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TreeListItem",
     "nameFull": "TreeListItem"
    },
    "source": "uui-components/src/layout/Tree.tsx"
   },
   "propNames": [
    "data",
    "id",
    "name",
    "parentId"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "TreeProps",
     "nameFull": "TreeProps<TItem>"
    },
    "source": "uui-components/src/layout/Tree.tsx"
   },
   "propNames": [
    "getSearchFields",
    "items",
    "renderRow",
    "search"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "UsePickerInputProps",
     "nameFull": "UsePickerInputProps<TItem, TId, TProps>"
    },
    "source": "uui-components/src/pickers/hooks/types.ts"
   },
   "propNames": [
    "shouldShowBody",
    "toggleModalOpening"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "VirtualListRenderRowsParams",
     "nameFull": "VirtualListRenderRowsParams<List>"
    },
    "source": "uui-components/src/layout/VirtualList.tsx"
   },
   "propNames": [
    "estimatedHeight",
    "listContainerRef",
    "offsetY",
    "scrollShadows"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-components",
    "typeName": {
     "name": "YearSelectionProps",
     "nameFull": "YearSelectionProps"
    },
    "source": "uui-components/src/inputs/DatePicker/YearSelection.tsx"
   },
   "propNames": [
    "selectedDate"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "AccordionMods",
     "nameFull": "AccordionMods"
    },
    "source": "uui/components/layout/Accordion.tsx"
   },
   "propNames": [
    "mode",
    "padding"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "BadgeMods",
     "nameFull": "BadgeMods"
    },
    "source": "uui/components/widgets/Badge.tsx"
   },
   "propNames": [
    "color",
    "fill",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "BurgerButtonMods",
     "nameFull": "BurgerButtonMods"
    },
    "source": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
   },
   "propNames": [
    "indentLevel",
    "type"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "BurgerGroupHeaderProps",
     "nameFull": "BurgerGroupHeaderProps"
    },
    "source": "uui/components/navigation/MainMenu/Burger/BurgerGroupHeader.tsx"
   },
   "propNames": [
    "caption"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "ButtonMods",
     "nameFull": "ButtonMods"
    },
    "source": "uui/components/buttons/Button/Button.tsx"
   },
   "propNames": [
    "color",
    "mode",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "CheckboxMods",
     "nameFull": "CheckboxMods"
    },
    "source": "uui/components/inputs/Checkbox.tsx"
   },
   "propNames": [
    "mode",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "ColumnsConfigurationModalProps",
     "nameFull": "ColumnsConfigurationModalProps<TItem, TId, TFilter>"
    },
    "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
   },
   "propNames": [
    "columns",
    "columnsConfig",
    "defaultConfig",
    "getSearchFields",
    "renderItem"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "ConfirmationModalWindowProps",
     "nameFull": "ConfirmationModalWindowProps"
    },
    "source": "uui/components/overlays/ConfirmationModal.tsx"
   },
   "propNames": [
    "bodyContent",
    "caption",
    "hideCancelButton"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataPickerBodyProps",
     "nameFull": "DataPickerBodyProps"
    },
    "source": "uui/components/pickers/DataPickerBody.tsx"
   },
   "propNames": [
    "editMode",
    "maxHeight",
    "searchSize",
    "selectionMode"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataPickerRowProps",
     "nameFull": "DataPickerRowProps<TItem, TId>"
    },
    "source": "uui/components/pickers/DataPickerRow.tsx"
   },
   "propNames": [
    "alignActions",
    "borderBottom",
    "padding",
    "renderItem",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataRowsContainerProps",
     "nameFull": "DataRowsContainerProps<TItem, TId, List>"
    },
    "source": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
   },
   "propNames": [
    "headerRef",
    "renderRow",
    "rows"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableCellMods",
     "nameFull": "DataTableCellMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   "propNames": [
    "border"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableHeaderCellMods",
     "nameFull": "DataTableHeaderCellMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   "propNames": [
    "textCase"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableHeaderRowMods",
     "nameFull": "DataTableHeaderRowMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   "propNames": [
    "textCase"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableMods",
     "nameFull": "DataTableMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   "propNames": [
    "border",
    "headerTextCase",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableProps",
     "nameFull": "DataTableProps<TItem, TId, TFilter>"
    },
    "source": "uui/components/tables/DataTable.tsx"
   },
   "propNames": [
    "columns",
    "filters",
    "getRows",
    "onCopy",
    "onScroll",
    "renderColumnsConfigurationModal",
    "renderNoResultsBlock",
    "renderRow",
    "showColumnsConfig"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DataTableRowMods",
     "nameFull": "DataTableRowMods"
    },
    "source": "uui/components/tables/types.ts"
   },
   "propNames": [
    "borderBottom"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DatePickerBodyProps",
     "nameFull": "DatePickerBodyProps"
    },
    "source": "uui/components/datePickers/DatePickerBody.tsx"
   },
   "propNames": [
    "getDayCX",
    "isHoliday"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DefaultNotificationProps",
     "nameFull": "DefaultNotificationProps"
    },
    "source": "uui/components/overlays/NotificationCard.tsx"
   },
   "propNames": [
    "actions"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DropdownContainerMods",
     "nameFull": "DropdownContainerMods"
    },
    "source": "uui/components/overlays/DropdownContainer.tsx"
   },
   "propNames": [
    "padding",
    "vPadding"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DropMarkerProps",
     "nameFull": "DropMarkerProps"
    },
    "source": "uui/components/dnd/DropMarker.tsx"
   },
   "propNames": [
    "enableBlocker"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "DropSpotProps",
     "nameFull": "DropSpotProps"
    },
    "source": "uui/components/fileUpload/DropSpot.tsx"
   },
   "propNames": [
    "accept",
    "cx",
    "infoText",
    "onUploadFiles",
    "single"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "FileCardItem",
     "nameFull": "FileCardItem"
    },
    "source": "uui/components/fileUpload/FileCard.tsx"
   },
   "propNames": [
    "abortXHR",
    "progress"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "FileCardProps",
     "nameFull": "FileCardProps"
    },
    "source": "uui/components/fileUpload/FileCard.tsx"
   },
   "propNames": [
    "file",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "FiltersPanelProps",
     "nameFull": "FiltersPanelProps<TFilter>"
    },
    "source": "uui/components/filters/FiltersPanel.tsx"
   },
   "propNames": [
    "filters",
    "setTableState",
    "size",
    "tableState"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "HighlightRange",
     "nameFull": "HighlightRange"
    },
    "source": "uui/components/pickers/highlight.tsx"
   },
   "propNames": [
    "from",
    "isHighlighted",
    "to"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "IconButtonMods",
     "nameFull": "IconButtonMods"
    },
    "source": "uui/components/buttons/IconButton.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "IDropdownMenuContainer",
     "nameFull": "IDropdownMenuContainer"
    },
    "source": "uui/components/overlays/DropdownMenu.tsx"
   },
   "propNames": [
    "closeOnKey"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "IDropdownMenuItemProps",
     "nameFull": "IDropdownMenuItemProps"
    },
    "source": "uui/components/overlays/DropdownMenu.tsx"
   },
   "propNames": [
    "indent",
    "isActive",
    "isSelected"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "IHasEditMode",
     "nameFull": "IHasEditMode"
    },
    "source": "uui/components/types.ts"
   },
   "propNames": [
    "mode"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "IndeterminateBarMods",
     "nameFull": "IndeterminateBarMods"
    },
    "source": "uui/components/widgets/IndeterminateBar.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "ITextPlaceholderProps",
     "nameFull": "ITextPlaceholderProps"
    },
    "source": "uui/components/typography/TextPlaceholder.tsx"
   },
   "propNames": [
    "isNotAnimated",
    "wordsCount"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "LinkButtonMods",
     "nameFull": "LinkButtonMods"
    },
    "source": "uui/components/buttons/LinkButton.tsx"
   },
   "propNames": [
    "color",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuAvatarProps",
     "nameFull": "MainMenuAvatarProps"
    },
    "source": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
   },
   "propNames": [
    "avatarUrl",
    "icon"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuButtonMods",
     "nameFull": "MainMenuButtonMods"
    },
    "source": "uui/components/navigation/MainMenu/MainMenuButton.tsx"
   },
   "propNames": [
    "type"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "MainMenuIconProps",
     "nameFull": "MainMenuIconProps"
    },
    "source": "uui/components/navigation/MainMenu/MainMenuIcon.tsx"
   },
   "propNames": [
    "icon"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "ModalWindowMods",
     "nameFull": "ModalWindowMods"
    },
    "source": "uui/components/overlays/Modals.tsx"
   },
   "propNames": [
    "height",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "MultiSwitchProps",
     "nameFull": "MultiSwitchProps<TValue>"
    },
    "source": "uui/components/inputs/MultiSwitch.tsx"
   },
   "propNames": [
    "color",
    "items"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "NotificationCardProps",
     "nameFull": "NotificationCardProps"
    },
    "source": "uui/components/overlays/NotificationCard.tsx"
   },
   "propNames": [
    "color",
    "icon"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "PanelMods",
     "nameFull": "PanelMods"
    },
    "source": "uui/components/layout/FlexItems/Panel.tsx"
   },
   "propNames": [
    "margin",
    "shadow"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerItemProps",
     "nameFull": "PickerItemProps<TItem, TId>"
    },
    "source": "uui/components/pickers/PickerItem.tsx"
   },
   "propNames": [
    "avatarUrl",
    "dataSourceState",
    "icon",
    "subtitle",
    "title"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerListItemProps",
     "nameFull": "PickerListItemProps<TItem, TId>"
    },
    "source": "uui/components/pickers/PickerListItem.tsx"
   },
   "propNames": [
    "getName"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerListProps",
     "nameFull": "PickerListProps<TItem, TId>"
    },
    "source": "uui/components/pickers/PickerList.tsx"
   },
   "propNames": [
    "noOptionsMessage",
    "renderModalToggler"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "PickerTogglerMods",
     "nameFull": "PickerTogglerMods"
    },
    "source": "uui/components/pickers/PickerToggler.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "PresetsPanelProps",
     "nameFull": "PresetsPanelProps"
    },
    "source": "uui/components/filters/PresetPanel/PresetsPanel.tsx"
   },
   "propNames": [
    "tableState"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "ProgressBarMods",
     "nameFull": "ProgressBarMods"
    },
    "source": "uui/components/widgets/ProgressBar.tsx"
   },
   "propNames": [
    "size",
    "striped"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "RadioInputMods",
     "nameFull": "RadioInputMods"
    },
    "source": "uui/components/inputs/RadioInput.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "RangeDatePickerBodyProps",
     "nameFull": "RangeDatePickerBodyProps<T>"
    },
    "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
   },
   "propNames": [
    "focusPart",
    "isHoliday",
    "renderFooter",
    "renderHeader"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "RangeDatePickerProps",
     "nameFull": "RangeDatePickerProps"
    },
    "source": "uui/components/datePickers/RangeDatePicker.tsx"
   },
   "propNames": [
    "getPlaceholder"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "RangeDatePickerValue",
     "nameFull": "RangeDatePickerValue"
    },
    "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
   },
   "propNames": [
    "from",
    "to"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "RichTextViewMods",
     "nameFull": "RichTextViewMods"
    },
    "source": "uui/components/typography/RichTextView.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "RowMods",
     "nameFull": "RowMods"
    },
    "source": "uui/components/layout/FlexItems/FlexRow.tsx"
   },
   "propNames": [
    "borderBottom",
    "columnGap",
    "margin",
    "padding",
    "rowGap",
    "spacing",
    "topShadow",
    "vPadding"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "RowSizeMod",
     "nameFull": "RowSizeMod"
    },
    "source": "uui/components/types.ts"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "SizeMod",
     "nameFull": "SizeMod"
    },
    "source": "uui/components/types.ts"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "SwitchMods",
     "nameFull": "SwitchMods"
    },
    "source": "uui/components/inputs/Switch.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "TabButtonMods",
     "nameFull": "TabButtonMods"
    },
    "source": "uui/components/buttons/TabButton.tsx"
   },
   "propNames": [
    "size",
    "withNotify"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "TagMods",
     "nameFull": "TagMods"
    },
    "source": "uui/components/widgets/Tag.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextAreaMods",
     "nameFull": "TextAreaMods"
    },
    "source": "uui/components/inputs/TextArea.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextInputMods",
     "nameFull": "TextInputMods"
    },
    "source": "uui/components/inputs/TextInput.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextMods",
     "nameFull": "TextMods"
    },
    "source": "uui/components/typography/Text.tsx"
   },
   "propNames": [
    "color",
    "font",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "TextSettings",
     "nameFull": "TextSettings"
    },
    "source": "uui/helpers/textLayout.tsx"
   },
   "propNames": [
    "fontSize",
    "lineHeight"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui",
    "typeName": {
     "name": "TimePickerProps",
     "nameFull": "TimePickerProps"
    },
    "source": "uui/components/inputs/TimePicker.tsx"
   },
   "propNames": [
    "format",
    "minutesStep"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "AlertMods",
     "nameFull": "AlertMods"
    },
    "source": "epam-promo/components/overlays/Alert.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "BadgeMods",
     "nameFull": "BadgeMods"
    },
    "source": "epam-promo/components/widgets/Badge.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "ButtonMods",
     "nameFull": "ButtonMods"
    },
    "source": "epam-promo/components/buttons/Button.tsx"
   },
   "propNames": [
    "color",
    "fill"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "DropdownContainerMods",
     "nameFull": "DropdownContainerMods"
    },
    "source": "epam-promo/components/overlays/DropdownContainer.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "ErrorHandlerProps",
     "nameFull": "ErrorHandlerProps"
    },
    "source": "epam-promo/components/errors/ErrorHandler.tsx"
   },
   "propNames": [
    "getErrorInfo",
    "onNotificationError"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "IconButtonMods",
     "nameFull": "IconButtonMods"
    },
    "source": "epam-promo/components/buttons/IconButton.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "LinkButtonMods",
     "nameFull": "LinkButtonMods"
    },
    "source": "epam-promo/components/buttons/LinkButton.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "ModalWindowMods",
     "nameFull": "ModalWindowMods"
    },
    "source": "epam-promo/components/overlays/ModalWindow.tsx"
   },
   "propNames": [
    "height",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "MultiSwitchMods",
     "nameFull": "MultiSwitchMods"
    },
    "source": "epam-promo/components/inputs/MultiSwitch.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "NotificationCardMods",
     "nameFull": "NotificationCardMods"
    },
    "source": "epam-promo/components/overlays/NotificationCard.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "PanelMods",
     "nameFull": "PanelMods"
    },
    "source": "epam-promo/components/layout/FlexItems/Panel.tsx"
   },
   "propNames": [
    "background",
    "margin",
    "shadow"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "RatingMods",
     "nameFull": "RatingMods"
    },
    "source": "epam-promo/components/inputs/Rating.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "RichTextViewMods",
     "nameFull": "RichTextViewMods"
    },
    "source": "epam-promo/components/typography/RichTextView.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "RowMods",
     "nameFull": "RowMods"
    },
    "source": "epam-promo/components/layout/FlexItems/FlexRow.tsx"
   },
   "propNames": [
    "background"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "RowSizeMod",
     "nameFull": "RowSizeMod"
    },
    "source": "epam-promo/components/types.ts"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "ScrollBarsMods",
     "nameFull": "ScrollBarsMods"
    },
    "source": "epam-promo/components/layout/ScrollBars.tsx"
   },
   "propNames": [
    "theme"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/promo",
    "typeName": {
     "name": "TextMods",
     "nameFull": "TextMods"
    },
    "source": "epam-promo/components/typography/Text.tsx"
   },
   "propNames": [
    "color",
    "font"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "AlertMods",
     "nameFull": "AlertMods"
    },
    "source": "loveship/components/overlays/Alert.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "BadgeMods",
     "nameFull": "BadgeMods"
    },
    "source": "loveship/components/widgets/Badge.tsx"
   },
   "propNames": [
    "color",
    "fill",
    "shape",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ButtonMods",
     "nameFull": "ButtonMods"
    },
    "source": "loveship/components/buttons/Button.tsx"
   },
   "propNames": [
    "color",
    "fill",
    "shape",
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "CheckboxMods",
     "nameFull": "CheckboxMods"
    },
    "source": "loveship/components/inputs/Checkbox.tsx"
   },
   "propNames": [
    "theme"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "DropdownContainerMods",
     "nameFull": "DropdownContainerMods"
    },
    "source": "loveship/components/overlays/DropdownContainer.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "EditMode",
     "nameFull": "EditMode"
    },
    "source": "loveship/components/types.ts"
   },
   "propNames": [
    "mode"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ErrorConfig",
     "nameFull": "ErrorConfig"
    },
    "source": "loveship/components/app/ErrorHandler.tsx"
   },
   "propNames": [
    "getInfo"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ErrorPageProps",
     "nameFull": "ErrorPageProps"
    },
    "source": "loveship/components/app/ErrorHandler.tsx"
   },
   "propNames": [
    "errorPageConfig",
    "onNotificationError",
    "theme"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "FontMod",
     "nameFull": "FontMod"
    },
    "source": "loveship/components/types.ts"
   },
   "propNames": [
    "font"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "IconButtonMods",
     "nameFull": "IconButtonMods"
    },
    "source": "loveship/components/buttons/IconButton.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "LinkButtonMods",
     "nameFull": "LinkButtonMods"
    },
    "source": "loveship/components/buttons/LinkButton.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MakeMeItemProps",
     "nameFull": "MakeMeItemProps"
    },
    "source": "loveship/components/dev/MakeMeItem.tsx"
   },
   "propNames": [
    "api"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MakeMeUser",
     "nameFull": "MakeMeUser"
    },
    "source": "loveship/components/dev/MakeMeItem.tsx"
   },
   "propNames": [
    "avatarUrl",
    "email",
    "externalId",
    "jobTitle",
    "name"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ModalWindowMods",
     "nameFull": "ModalWindowMods"
    },
    "source": "loveship/components/overlays/ModalWindow.tsx"
   },
   "propNames": [
    "height",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "MultiSwitchMods",
     "nameFull": "MultiSwitchMods"
    },
    "source": "loveship/components/inputs/MultiSwitch.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "NotificationCardMods",
     "nameFull": "NotificationCardMods"
    },
    "source": "loveship/components/overlays/NotificationCard.tsx"
   },
   "propNames": [
    "color"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "PanelMods",
     "nameFull": "PanelMods"
    },
    "source": "loveship/components/layout/FlexItems/Panel.tsx"
   },
   "propNames": [
    "background",
    "margin",
    "shadow"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RadioInputMods",
     "nameFull": "RadioInputMods"
    },
    "source": "loveship/components/inputs/RadioInput.tsx"
   },
   "propNames": [
    "theme"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RatingMods",
     "nameFull": "RatingMods"
    },
    "source": "loveship/components/inputs/Rating.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RichTextViewMods",
     "nameFull": "RichTextViewMods"
    },
    "source": "loveship/components/typography/RichTextView.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RowMods",
     "nameFull": "RowMods"
    },
    "source": "loveship/components/layout/FlexItems/FlexRow.tsx"
   },
   "propNames": [
    "background",
    "spacing",
    "type"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "RowSizeMod",
     "nameFull": "RowSizeMod"
    },
    "source": "loveship/components/types.ts"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "ScrollBarsMods",
     "nameFull": "ScrollBarsMods"
    },
    "source": "loveship/components/layout/ScrollBars.tsx"
   },
   "propNames": [
    "theme"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "SizeMod",
     "nameFull": "SizeMod"
    },
    "source": "loveship/components/types.ts"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "SliderRatingProps",
     "nameFull": "SliderRatingProps<TValue>"
    },
    "source": "loveship/components/inputs/SliderRating.tsx"
   },
   "propNames": [
    "from",
    "getHandlerIcon",
    "getScaleIcon",
    "renderTooltip",
    "size",
    "tooltipColor",
    "withoutNa"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "SnackbarCardProps",
     "nameFull": "SnackbarCardProps"
    },
    "source": "loveship/components/overlays/SnackbarCard.tsx"
   },
   "propNames": [
    "snackType"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TabButtonMods",
     "nameFull": "TabButtonMods"
    },
    "source": "loveship/components/buttons/TabButton.tsx"
   },
   "propNames": [
    "theme"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TagMods",
     "nameFull": "TagMods"
    },
    "source": "loveship/components/widgets/Tag.tsx"
   },
   "propNames": [
    "fill"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TextInputMods",
     "nameFull": "TextInputMods"
    },
    "source": "loveship/components/inputs/TextInput.tsx"
   },
   "propNames": [
    "size"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/loveship",
    "typeName": {
     "name": "TextMods",
     "nameFull": "TextMods"
    },
    "source": "loveship/components/typography/Text.tsx"
   },
   "propNames": [
    "color",
    "font"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "LinkElement",
     "nameFull": "LinkElement"
    },
    "source": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
   },
   "propNames": [
    "href",
    "type"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "PlaceholderPluginParams",
     "nameFull": "PlaceholderPluginParams"
    },
    "source": "uui-editor/src/plugins/placeholderPlugin/placeholderPlugin.tsx"
   },
   "propNames": [
    "items"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "PlateProps",
     "nameFull": "PlateProps"
    },
    "source": "uui-editor/src/types.ts"
   },
   "propNames": [
    "align",
    "url",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "SlateImageSize",
     "nameFull": "SlateImageSize"
    },
    "source": "uui-editor/src/types.ts"
   },
   "propNames": [
    "height",
    "width"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-editor",
    "typeName": {
     "name": "SlateProps",
     "nameFull": "SlateProps"
    },
    "source": "uui-editor/src/types.ts"
   },
   "propNames": [
    "data"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "BaseTimelineCanvasComponentProps",
     "nameFull": "BaseTimelineCanvasComponentProps"
    },
    "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
   },
   "propNames": [
    "className",
    "renderOnTop",
    "timelineController"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "Item",
     "nameFull": "Item"
    },
    "source": "uui-timeline/src/renderBars.ts"
   },
   "propNames": [
    "color",
    "fillType",
    "from",
    "height",
    "maxPxPerDay",
    "minPixPerDay",
    "opacity",
    "priority",
    "to"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "Stage",
     "nameFull": "Stage"
    },
    "source": "uui-timeline/src/TimelineEventsBar.tsx"
   },
   "propNames": [
    "color",
    "endDate",
    "eventName",
    "name",
    "startDate"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineControllerOptions",
     "nameFull": "TimelineControllerOptions"
    },
    "source": "uui-timeline/src/TimelineController.ts"
   },
   "propNames": [
    "isHoliday",
    "maxScale",
    "minScale",
    "minVisibleDate",
    "minWidth"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineEventsBarProps",
     "nameFull": "TimelineEventsBarProps"
    },
    "source": "uui-timeline/src/TimelineEventsBar.tsx"
   },
   "propNames": [
    "stages",
    "timelineController"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineNavProps",
     "nameFull": "TimelineNavProps"
    },
    "source": "uui-timeline/src/TimelineNav.tsx"
   },
   "propNames": [
    "timelineController"
   ]
  },
  {
   "typeRef": {
    "module": "@epam/uui-timeline",
    "typeName": {
     "name": "TimelineScaleProps",
     "nameFull": "TimelineScaleProps"
    },
    "source": "uui-timeline/src/TimelineScale.tsx"
   },
   "propNames": [
    "isDraggable",
    "isScaleChangeOnWheel",
    "shiftPercent"
   ]
  }
 ],
 "missingTypeComment": [
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "srcData",
    "nameFull": "srcData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dstData",
    "nameFull": "dstData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "offsetLeft",
    "nameFull": "offsetLeft"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "offsetTop",
    "nameFull": "offsetTop"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "targetWidth",
    "nameFull": "targetWidth"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "targetHeight",
    "nameFull": "targetHeight"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AcceptDropParams",
    "nameFull": "AcceptDropParams<TSrcData, TDstData>"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AnalyticsEvent",
    "nameFull": "AnalyticsEvent"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallErrorType",
    "nameFull": "ApiCallErrorType"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "url",
    "nameFull": "url"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "method",
    "nameFull": "method"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "requestData",
    "nameFull": "requestData"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "status",
    "nameFull": "status"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "httpStatus",
    "nameFull": "httpStatus"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "responseData",
    "nameFull": "responseData"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "errorStatus",
    "nameFull": "errorStatus"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "startedAt",
    "nameFull": "startedAt"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "finishedAt",
    "nameFull": "finishedAt"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "attemptsCount",
    "nameFull": "attemptsCount"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dismissError",
    "nameFull": "dismissError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallInfo",
    "nameFull": "ApiCallInfo"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "fetchOptions",
    "nameFull": "fetchOptions"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "errorHandling",
    "nameFull": "errorHandling"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallOptions",
    "nameFull": "ApiCallOptions"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiReloginPath",
    "nameFull": "apiReloginPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiPingPath",
    "nameFull": "apiPingPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiServerUrl",
    "nameFull": "apiServerUrl"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiContextProps",
    "nameFull": "ApiContextProps"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "withOptions",
    "nameFull": "withOptions"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiExtensions",
    "nameFull": "ApiExtensions<TApi>"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiRecoveryReason",
    "nameFull": "ApiRecoveryReason"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiStatus",
    "nameFull": "ApiStatus"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getFilter",
    "nameFull": "getFilter"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplyFilterOptions",
    "nameFull": "ApplyFilterOptions<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortSearchByRelevance",
    "nameFull": "sortSearchByRelevance"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplySearchOptions",
    "nameFull": "ApplySearchOptions<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortBy",
    "nameFull": "sortBy"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplySortOptions",
    "nameFull": "ApplySortOptions<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "items",
    "nameFull": "items"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortBy",
    "nameFull": "sortBy"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getFilter",
    "nameFull": "getFilter"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayDataSourceProps",
    "nameFull": "ArrayDataSourceProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/ArrayDataSource.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayElement",
    "nameFull": "ArrayElement<ArrayType>"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "items",
    "nameFull": "items"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortBy",
    "nameFull": "sortBy"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getFilter",
    "nameFull": "getFilter"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayListViewProps",
    "nameFull": "ArrayListViewProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "emptyValue",
    "nameFull": "emptyValue"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayPickerProps",
    "nameFull": "ArrayPickerProps<TId, TItem>"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "api",
    "nameFull": "api"
   },
   "source": "uui-core/src/data/processing/views/AsyncListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortBy",
    "nameFull": "sortBy"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getFilter",
    "nameFull": "getFilter"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AsyncDataSourceProps",
    "nameFull": "AsyncDataSourceProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/AsyncDataSource.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "api",
    "nameFull": "api"
   },
   "source": "uui-core/src/data/processing/views/AsyncListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortBy",
    "nameFull": "sortBy"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getFilter",
    "nameFull": "getFilter"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AsyncListViewProps",
    "nameFull": "AsyncListViewProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/AsyncListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortBy",
    "nameFull": "sortBy"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getFilter",
    "nameFull": "getFilter"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseArrayListViewProps",
    "nameFull": "BaseArrayListViewProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "iconPosition",
    "nameFull": "iconPosition"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onBlur",
    "nameFull": "onBlur"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "bodyCx",
    "nameFull": "bodyCx"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseDatePickerProps",
    "nameFull": "BaseDatePickerProps"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseListViewProps",
    "nameFull": "BaseListViewProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "bodyCx",
    "nameFull": "bodyCx"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseRangeDatePickerProps",
    "nameFull": "BaseRangeDatePickerProps"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BatchPromiseOptions",
    "nameFull": "BatchPromiseOptions"
   },
   "source": "uui-core/src/helpers/batch.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BlockTypes",
    "nameFull": "BlockTypes"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonBaseCoreProps",
    "nameFull": "ButtonBaseCoreProps"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonCoreProps",
    "nameFull": "ButtonCoreProps"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonSemanticProps",
    "nameFull": "ButtonSemanticProps"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CascadeSelection",
    "nameFull": "CascadeSelection"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CheckboxCoreProps",
    "nameFull": "CheckboxCoreProps"
   },
   "source": "uui-core/src/types/components/Checkbox.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ClassValue",
    "nameFull": "ClassValue"
   },
   "source": "uui-core/src/helpers/cx.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ColumnsConfig",
    "nameFull": "ColumnsConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "withOptions",
    "nameFull": "withOptions"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "api",
    "nameFull": "api"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiApp",
    "nameFull": "uuiApp"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "history",
    "nameFull": "history"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "status",
    "nameFull": "status"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "recoveryReason",
    "nameFull": "recoveryReason"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getActiveCalls",
    "nameFull": "getActiveCalls"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reset",
    "nameFull": "reset"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "processRequest",
    "nameFull": "processRequest"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uploadFile",
    "nameFull": "uploadFile"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiApi",
    "nameFull": "uuiApi"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getCurrentLink",
    "nameFull": "getCurrentLink"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "redirect",
    "nameFull": "redirect"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "transfer",
    "nameFull": "transfer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "createHref",
    "nameFull": "createHref"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "listen",
    "nameFull": "listen"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "block",
    "nameFull": "block"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiRouter",
    "nameFull": "uuiRouter"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "show",
    "nameFull": "show"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeAll",
    "nameFull": "closeAll"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isModalOperationActive",
    "nameFull": "isModalOperationActive"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getOperations",
    "nameFull": "getOperations"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiModals",
    "nameFull": "uuiModals"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "endDrag",
    "nameFull": "endDrag"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dragData",
    "nameFull": "dragData"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getMouseCoords",
    "nameFull": "getMouseCoords"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiDnD",
    "nameFull": "uuiDnD"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "get",
    "nameFull": "get"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "set",
    "nameFull": "set"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiUserSettings",
    "nameFull": "uuiUserSettings"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sendEvent",
    "nameFull": "sendEvent"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "addListener",
    "nameFull": "addListener"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiAnalytics",
    "nameFull": "uuiAnalytics"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "currentError",
    "nameFull": "currentError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reportError",
    "nameFull": "reportError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onError",
    "nameFull": "onError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "discardError",
    "nameFull": "discardError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "recover",
    "nameFull": "recover"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiErrors",
    "nameFull": "uuiErrors"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "show",
    "nameFull": "show"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getNotifications",
    "nameFull": "getNotifications"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "remove",
    "nameFull": "remove"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearAll",
    "nameFull": "clearAll"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiNotifications",
    "nameFull": "uuiNotifications"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getLayer",
    "nameFull": "getLayer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "releaseLayer",
    "nameFull": "releaseLayer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPortalRoot",
    "nameFull": "getPortalRoot"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPortalRootId",
    "nameFull": "getPortalRootId"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiLayout",
    "nameFull": "uuiLayout"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "acquire",
    "nameFull": "acquire"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "release",
    "nameFull": "release"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "withLock",
    "nameFull": "withLock"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getCurrentLock",
    "nameFull": "getCurrentLock"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiLocks",
    "nameFull": "uuiLocks"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Button",
    "nameFull": "Button"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IconButton",
    "nameFull": "IconButton"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Checkbox",
    "nameFull": "Checkbox"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRow",
    "nameFull": "FlexRow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCell",
    "nameFull": "FlexCell"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Spinner",
    "nameFull": "Spinner"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInput",
    "nameFull": "TextInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindow",
    "nameFull": "ModalWindow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlocker",
    "nameFull": "ModalBlocker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeader",
    "nameFull": "ModalHeader"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooter",
    "nameFull": "ModalFooter"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInput",
    "nameFull": "LabeledInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePicker",
    "nameFull": "DatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePicker",
    "nameFull": "RangeDatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "skin",
    "nameFull": "skin"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setSkin",
    "nameFull": "setSkin"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Button",
    "nameFull": "Button"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IconButton",
    "nameFull": "IconButton"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Checkbox",
    "nameFull": "Checkbox"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRow",
    "nameFull": "FlexRow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCell",
    "nameFull": "FlexCell"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Spinner",
    "nameFull": "Spinner"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInput",
    "nameFull": "TextInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindow",
    "nameFull": "ModalWindow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlocker",
    "nameFull": "ModalBlocker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeader",
    "nameFull": "ModalHeader"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooter",
    "nameFull": "ModalFooter"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInput",
    "nameFull": "LabeledInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePicker",
    "nameFull": "DatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePicker",
    "nameFull": "RangeDatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiSkin",
    "nameFull": "uuiSkin"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CommonContexts",
    "nameFull": "CommonContexts<TApi, TAppContext>"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "loadAppContext",
    "nameFull": "loadAppContext"
   },
   "source": "uui-core/src/services/ContextProvider.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onInitCompleted",
    "nameFull": "onInitCompleted"
   },
   "source": "uui-core/src/services/ContextProvider.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "history",
    "nameFull": "history"
   },
   "source": "uui-core/src/services/ContextProvider.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "gaCode",
    "nameFull": "gaCode"
   },
   "source": "uui-core/src/services/ContextProvider.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiDefinition",
    "nameFull": "apiDefinition"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "skinContext",
    "nameFull": "skinContext"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiReloginPath",
    "nameFull": "apiReloginPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiPingPath",
    "nameFull": "apiPingPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiServerUrl",
    "nameFull": "apiServerUrl"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ContextProviderProps",
    "nameFull": "ContextProviderProps<TApi, TAppContext>"
   },
   "source": "uui-core/src/services/ContextProvider.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CX",
    "nameFull": "CX"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "justifyContent",
    "nameFull": "justifyContent"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canCopy",
    "nameFull": "canCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptCopy",
    "nameFull": "canAcceptCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataColumnProps",
    "nameFull": "DataColumnProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "range",
    "nameFull": "range"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQuery",
    "nameFull": "DataQuery<T>"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryFilter",
    "nameFull": "DataQueryFilter<T>"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryFilterCondition",
    "nameFull": "DataQueryFilterCondition<TField>"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryRange",
    "nameFull": "DataQueryRange"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "value",
    "nameFull": "value"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isLastChild",
    "nameFull": "isLastChild"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceListCounts",
    "nameFull": "DataSourceListCounts"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceListProps",
    "nameFull": "DataSourceListProps"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "checked",
    "nameFull": "checked"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "folded",
    "nameFull": "folded"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedId",
    "nameFull": "selectedId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "focusedIndex",
    "nameFull": "focusedIndex"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "page",
    "nameFull": "page"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pageSize",
    "nameFull": "pageSize"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columns",
    "nameFull": "columns"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderCell",
    "nameFull": "renderCell"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderDropMarkers",
    "nameFull": "renderDropMarkers"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "justifyContent",
    "nameFull": "justifyContent"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canCopy",
    "nameFull": "canCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptCopy",
    "nameFull": "canAcceptCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableCellOptions",
    "nameFull": "DataTableCellOptions<TItem, TId>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderUnknown",
    "nameFull": "renderUnknown"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columns",
    "nameFull": "columns"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderCell",
    "nameFull": "renderCell"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderDropMarkers",
    "nameFull": "renderDropMarkers"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "justifyContent",
    "nameFull": "justifyContent"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canCopy",
    "nameFull": "canCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptCopy",
    "nameFull": "canAcceptCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableCellProps",
    "nameFull": "DataTableCellProps<TItem, TId, TCellValue>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsReordering",
    "nameFull": "allowColumnsReordering"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsResizing",
    "nameFull": "allowColumnsResizing"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableColumnsConfigOptions",
    "nameFull": "DataTableColumnsConfigOptions"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableConfigModalParams",
    "nameFull": "DataTableConfigModalParams"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "justifyContent",
    "nameFull": "justifyContent"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canCopy",
    "nameFull": "canCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptCopy",
    "nameFull": "canAcceptCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "column",
    "nameFull": "column"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isFirstColumn",
    "nameFull": "isFirstColumn"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isLastColumn",
    "nameFull": "isLastColumn"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isFilterActive",
    "nameFull": "isFilterActive"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sortDirection",
    "nameFull": "sortDirection"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSort",
    "nameFull": "onSort"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onDrop",
    "nameFull": "onDrop"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderFilter",
    "nameFull": "renderFilter"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsReordering",
    "nameFull": "allowColumnsReordering"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsResizing",
    "nameFull": "allowColumnsResizing"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableHeaderCellProps",
    "nameFull": "DataTableHeaderCellProps<TItem, TId>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onConfigButtonClick",
    "nameFull": "onConfigButtonClick"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderCell",
    "nameFull": "renderCell"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderConfigButton",
    "nameFull": "renderConfigButton"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsReordering",
    "nameFull": "allowColumnsReordering"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsResizing",
    "nameFull": "allowColumnsResizing"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableHeaderRowProps",
    "nameFull": "DataTableHeaderRowProps<TItem, TId>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columns",
    "nameFull": "columns"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderCell",
    "nameFull": "renderCell"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderDropMarkers",
    "nameFull": "renderDropMarkers"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableRowProps",
    "nameFull": "DataTableRowProps<TItem, TId>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "justifyContent",
    "nameFull": "justifyContent"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canCopy",
    "nameFull": "canCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptCopy",
    "nameFull": "canAcceptCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "column",
    "nameFull": "column"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "row",
    "nameFull": "row"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableSelectedCellData",
    "nameFull": "DataTableSelectedCellData<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnsConfig",
    "nameFull": "columnsConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filtersConfig",
    "nameFull": "filtersConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "presetId",
    "nameFull": "presetId"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "viewState",
    "nameFull": "viewState"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "checked",
    "nameFull": "checked"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "folded",
    "nameFull": "folded"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedId",
    "nameFull": "selectedId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "focusedIndex",
    "nameFull": "focusedIndex"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "page",
    "nameFull": "page"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pageSize",
    "nameFull": "pageSize"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableState",
    "nameFull": "DataTableState<TFilter, TViewState>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "iconPosition",
    "nameFull": "iconPosition"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onBlur",
    "nameFull": "onBlur"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "bodyCx",
    "nameFull": "bodyCx"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePickerCoreProps",
    "nameFull": "DatePickerCoreProps"
   },
   "source": "uui-core/src/types/components/datePicker/DatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/dnd/DndActor.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "srcData",
    "nameFull": "srcData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dstData",
    "nameFull": "dstData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptDrop",
    "nameFull": "canAcceptDrop"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onDrop",
    "nameFull": "onDrop"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndActorProps",
    "nameFull": "DndActorProps<TSrcData, TDstData>"
   },
   "source": "uui-core/src/services/dnd/DndActor.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onTouchStart",
    "nameFull": "onTouchStart"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerDown",
    "nameFull": "onPointerDown"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerEnter",
    "nameFull": "onPointerEnter"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerMove",
    "nameFull": "onPointerMove"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerLeave",
    "nameFull": "onPointerLeave"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerUp",
    "nameFull": "onPointerUp"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndActorRenderParams",
    "nameFull": "DndActorRenderParams"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ghostOffsetX",
    "nameFull": "ghostOffsetX"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ghostOffsetY",
    "nameFull": "ghostOffsetY"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ghostWidth",
    "nameFull": "ghostWidth"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderGhost",
    "nameFull": "renderGhost"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndContextState",
    "nameFull": "DndContextState"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DragGhostProps",
    "nameFull": "DragGhostProps"
   },
   "source": "uui-core/src/services/dnd/DragGhost.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerWidth",
    "nameFull": "togglerWidth"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerHeight",
    "nameFull": "togglerHeight"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "arrowProps",
    "nameFull": "arrowProps"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownBodyProps",
    "nameFull": "DropdownBodyProps"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderTarget",
    "nameFull": "renderTarget"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderBody",
    "nameFull": "renderBody"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isNotUnfoldable",
    "nameFull": "isNotUnfoldable"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "placement",
    "nameFull": "placement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "modifiers",
    "nameFull": "modifiers"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeDelay",
    "nameFull": "closeDelay"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "openOnClick",
    "nameFull": "openOnClick"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "openOnHover",
    "nameFull": "openOnHover"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnTargetClick",
    "nameFull": "closeOnTargetClick"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnClickOutside",
    "nameFull": "closeOnClickOutside"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnMouseLeave",
    "nameFull": "closeOnMouseLeave"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "boundaryElement",
    "nameFull": "boundaryElement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeBodyOnTogglerHidden",
    "nameFull": "closeBodyOnTogglerHidden"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownProps",
    "nameFull": "DropdownProps"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "opened",
    "nameFull": "opened"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "y",
    "nameFull": "y"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "x",
    "nameFull": "x"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "bodyBoundingRect",
    "nameFull": "bodyBoundingRect"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownState",
    "nameFull": "DropdownState"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "position",
    "nameFull": "position"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "srcData",
    "nameFull": "srcData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dstData",
    "nameFull": "dstData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "offsetLeft",
    "nameFull": "offsetLeft"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "offsetTop",
    "nameFull": "offsetTop"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "targetWidth",
    "nameFull": "targetWidth"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "targetHeight",
    "nameFull": "targetHeight"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropParams",
    "nameFull": "DropParams<TSrcData, TDstData>"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropPosition",
    "nameFull": "DropPosition"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onProgress",
    "nameFull": "onProgress"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getXHR",
    "nameFull": "getXHR"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FileUploadOptions",
    "nameFull": "FileUploadOptions"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "path",
    "nameFull": "path"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "extension",
    "nameFull": "extension"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "error",
    "nameFull": "error"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FileUploadResponse",
    "nameFull": "FileUploadResponse"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "in",
    "nameFull": "in"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "nin",
    "nameFull": "nin"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isNull",
    "nameFull": "isNull"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "gt",
    "nameFull": "gt"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "gte",
    "nameFull": "gte"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "lt",
    "nameFull": "lt"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "lte",
    "nameFull": "lte"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "inRange",
    "nameFull": "inRange"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "notInRange",
    "nameFull": "notInRange"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "eq",
    "nameFull": "eq"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "neq",
    "nameFull": "neq"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "not",
    "nameFull": "not"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterPredicate",
    "nameFull": "FilterPredicate<TField>"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterPredicateName",
    "nameFull": "FilterPredicateName"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FiltersConfig",
    "nameFull": "FiltersConfig<TFilter>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCellProps",
    "nameFull": "FlexCellProps"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRowProps",
    "nameFull": "FlexRowProps"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormProps",
    "nameFull": "FormProps<T>"
   },
   "source": "uui-core/src/data/forms/Form.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "form",
    "nameFull": "form"
   },
   "source": "uui-core/src/data/forms/Form.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "validation",
    "nameFull": "validation"
   },
   "source": "uui-core/src/data/forms/Form.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormSaveResponse",
    "nameFull": "FormSaveResponse<T>"
   },
   "source": "uui-core/src/data/forms/Form.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "form",
    "nameFull": "form"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "validationState",
    "nameFull": "validationState"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "serverValidationState",
    "nameFull": "serverValidationState"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "lastSentForm",
    "nameFull": "lastSentForm"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isChanged",
    "nameFull": "isChanged"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "historyIndex",
    "nameFull": "historyIndex"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isInProgress",
    "nameFull": "isInProgress"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isInSaveMode",
    "nameFull": "isInSaveMode"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormState",
    "nameFull": "FormState<T>"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAdaptiveItem",
    "nameFull": "IAdaptiveItem"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticableClick",
    "nameFull": "IAnalyticableClick"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticableOnChange",
    "nameFull": "IAnalyticableOnChange<T>"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sendEvent",
    "nameFull": "sendEvent"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "addListener",
    "nameFull": "addListener"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticsContext",
    "nameFull": "IAnalyticsContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sendEvent",
    "nameFull": "sendEvent"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticsListener",
    "nameFull": "IAnalyticsListener"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "status",
    "nameFull": "status"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "recoveryReason",
    "nameFull": "recoveryReason"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getActiveCalls",
    "nameFull": "getActiveCalls"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reset",
    "nameFull": "reset"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "processRequest",
    "nameFull": "processRequest"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uploadFile",
    "nameFull": "uploadFile"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IApiContext",
    "nameFull": "IApiContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IBaseContext",
    "nameFull": "IBaseContext<TState>"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeFixed",
    "nameFull": "ICanBeFixed"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeRequired",
    "nameFull": "ICanBeRequired"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICheckable",
    "nameFull": "ICheckable"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isVisible",
    "nameFull": "isVisible"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "order",
    "nameFull": "order"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IColumnConfig",
    "nameFull": "IColumnConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "router",
    "nameFull": "router"
   },
   "source": "uui-core/src/ssr/useUuiServicesSsr.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "appContext",
    "nameFull": "appContext"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiDefinition",
    "nameFull": "apiDefinition"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "skinContext",
    "nameFull": "skinContext"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiReloginPath",
    "nameFull": "apiReloginPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiPingPath",
    "nameFull": "apiPingPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiServerUrl",
    "nameFull": "apiServerUrl"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IContextProviderSsrProps",
    "nameFull": "IContextProviderSsrProps<TApi, TAppContext>"
   },
   "source": "uui-core/src/ssr/useUuiServicesSsr.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IdAndName",
    "nameFull": "IdAndName"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDataSource",
    "nameFull": "IDataSource<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getListProps",
    "nameFull": "getListProps"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getVisibleRows",
    "nameFull": "getVisibleRows"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSelectedRows",
    "nameFull": "getSelectedRows"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSelectedRowsCount",
    "nameFull": "getSelectedRowsCount"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reload",
    "nameFull": "reload"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroy",
    "nameFull": "destroy"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "loadData",
    "nameFull": "loadData"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "_forceUpdate",
    "nameFull": "_forceUpdate"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDataSourceView",
    "nameFull": "IDataSourceView<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "srcData",
    "nameFull": "srcData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dstData",
    "nameFull": "dstData"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptDrop",
    "nameFull": "canAcceptDrop"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onDrop",
    "nameFull": "onDrop"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDndActor",
    "nameFull": "IDndActor<TSrcData, TDstData>"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "endDrag",
    "nameFull": "endDrag"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dragData",
    "nameFull": "dragData"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getMouseCoords",
    "nameFull": "getMouseCoords"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDndContext",
    "nameFull": "IDndContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerWidth",
    "nameFull": "togglerWidth"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerHeight",
    "nameFull": "togglerHeight"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "arrowProps",
    "nameFull": "arrowProps"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDropdownBodyProps",
    "nameFull": "IDropdownBodyProps"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "currentError",
    "nameFull": "currentError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reportError",
    "nameFull": "reportError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onError",
    "nameFull": "onError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "discardError",
    "nameFull": "discardError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "recover",
    "nameFull": "recover"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IErrorContext",
    "nameFull": "IErrorContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isVisible",
    "nameFull": "isVisible"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "order",
    "nameFull": "order"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterConfig",
    "nameFull": "IFilterConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "title",
    "nameFull": "title"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "field",
    "nameFull": "field"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnKey",
    "nameFull": "columnKey"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isAlwaysVisible",
    "nameFull": "isAlwaysVisible"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "predicates",
    "nameFull": "predicates"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerWidth",
    "nameFull": "togglerWidth"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerHeight",
    "nameFull": "togglerHeight"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "arrowProps",
    "nameFull": "arrowProps"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedPredicate",
    "nameFull": "selectedPredicate"
   },
   "source": "uui-core/src/types/components/filterItemBody.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterItemBodyProps",
    "nameFull": "IFilterItemBodyProps<TFilter>"
   },
   "source": "uui-core/src/types/components/filterItemBody.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "predicate",
    "nameFull": "predicate"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isDefault",
    "nameFull": "isDefault"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterPredicate",
    "nameFull": "IFilterPredicate"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "get",
    "nameFull": "get"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "set",
    "nameFull": "set"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "update",
    "nameFull": "update"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "prop",
    "nameFull": "prop"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "index",
    "nameFull": "index"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onChange",
    "nameFull": "onChange"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "default",
    "nameFull": "default"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "toProps",
    "nameFull": "toProps"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFormApi",
    "nameFull": "IFormApi<T>"
   },
   "source": "uui-core/src/data/forms/Form.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasChildren",
    "nameFull": "IHasChildren"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "direction",
    "nameFull": "direction"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasForwardedRef",
    "nameFull": "IHasForwardedRef<T>"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasIcon",
    "nameFull": "IHasIcon"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasPlaceholder",
    "nameFull": "IHasPlaceholder"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasRawProps",
    "nameFull": "IHasRawProps<T>"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasTabIndex",
    "nameFull": "IHasTabIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pathname",
    "nameFull": "pathname"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "query",
    "nameFull": "query"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "hash",
    "nameFull": "hash"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "state",
    "nameFull": "state"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "location",
    "nameFull": "location"
   },
   "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "push",
    "nameFull": "push"
   },
   "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "replace",
    "nameFull": "replace"
   },
   "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "createHref",
    "nameFull": "createHref"
   },
   "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "listen",
    "nameFull": "listen"
   },
   "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "block",
    "nameFull": "block"
   },
   "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHistory4",
    "nameFull": "IHistory4"
   },
   "source": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getLayer",
    "nameFull": "getLayer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "releaseLayer",
    "nameFull": "releaseLayer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPortalRoot",
    "nameFull": "getPortalRoot"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPortalRootId",
    "nameFull": "getPortalRootId"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILayoutContext",
    "nameFull": "ILayoutContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "get",
    "nameFull": "get"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "set",
    "nameFull": "set"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "update",
    "nameFull": "update"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "prop",
    "nameFull": "prop"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "index",
    "nameFull": "index"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onChange",
    "nameFull": "onChange"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "default",
    "nameFull": "default"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "toProps",
    "nameFull": "toProps"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILens",
    "nameFull": "ILens<TFocused>"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "acquire",
    "nameFull": "acquire"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "release",
    "nameFull": "release"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "withLock",
    "nameFull": "withLock"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getCurrentLock",
    "nameFull": "getCurrentLock"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILockContext",
    "nameFull": "ILockContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "get",
    "nameFull": "get"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "set",
    "nameFull": "set"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "has",
    "nameFull": "has"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "delete",
    "nameFull": "delete"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "__computed",
    "nameFull": "__computed"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IMap",
    "nameFull": "IMap<TKey, TValue>"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IModal",
    "nameFull": "IModal<TResult>"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "show",
    "nameFull": "show"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeAll",
    "nameFull": "closeAll"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isModalOperationActive",
    "nameFull": "isModalOperationActive"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getOperations",
    "nameFull": "getOperations"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IModalContext",
    "nameFull": "IModalContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSuccess",
    "nameFull": "onSuccess"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearTimer",
    "nameFull": "clearTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "refreshTimer",
    "nameFull": "refreshTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "INotification",
    "nameFull": "INotification"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "show",
    "nameFull": "show"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getNotifications",
    "nameFull": "getNotifications"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "remove",
    "nameFull": "remove"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearAll",
    "nameFull": "clearAll"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "INotificationContext",
    "nameFull": "INotificationContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selection",
    "nameFull": "selection"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedRowsCount",
    "nameFull": "selectedRowsCount"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IPresetsApi",
    "nameFull": "IPresetsApi<TFilter, TViewState>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IProcessRequest",
    "nameFull": "IProcessRequest"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "state",
    "nameFull": "state"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pathname",
    "nameFull": "pathname"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "hash",
    "nameFull": "hash"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "location",
    "nameFull": "location"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "historyAction",
    "nameFull": "historyAction"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "state",
    "nameFull": "state"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "navigate",
    "nameFull": "navigate"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getBlocker",
    "nameFull": "getBlocker"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "deleteBlocker",
    "nameFull": "deleteBlocker"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "createHref",
    "nameFull": "createHref"
   },
   "source": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getCurrentLink",
    "nameFull": "getCurrentLink"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "redirect",
    "nameFull": "redirect"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "transfer",
    "nameFull": "transfer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "createHref",
    "nameFull": "createHref"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "listen",
    "nameFull": "listen"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "block",
    "nameFull": "block"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IRouterContext",
    "nameFull": "IRouterContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Button",
    "nameFull": "Button"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IconButton",
    "nameFull": "IconButton"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Checkbox",
    "nameFull": "Checkbox"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRow",
    "nameFull": "FlexRow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCell",
    "nameFull": "FlexCell"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Spinner",
    "nameFull": "Spinner"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInput",
    "nameFull": "TextInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindow",
    "nameFull": "ModalWindow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlocker",
    "nameFull": "ModalBlocker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeader",
    "nameFull": "ModalHeader"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooter",
    "nameFull": "ModalFooter"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInput",
    "nameFull": "LabeledInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePicker",
    "nameFull": "DatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePicker",
    "nameFull": "RangeDatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ISkin",
    "nameFull": "ISkin"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isReadonly",
    "nameFull": "isReadonly"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnsConfig",
    "nameFull": "columnsConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filtersConfig",
    "nameFull": "filtersConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "order",
    "nameFull": "order"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "viewState",
    "nameFull": "viewState"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITablePreset",
    "nameFull": "ITablePreset<TFilter, TViewState>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnsConfig",
    "nameFull": "columnsConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filtersConfig",
    "nameFull": "filtersConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "presetId",
    "nameFull": "presetId"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "viewState",
    "nameFull": "viewState"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "checked",
    "nameFull": "checked"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "folded",
    "nameFull": "folded"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedId",
    "nameFull": "selectedId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "focusedIndex",
    "nameFull": "focusedIndex"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "page",
    "nameFull": "page"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pageSize",
    "nameFull": "pageSize"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITableState",
    "nameFull": "ITableState<TFilter, TViewState>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ItemsComparator",
    "nameFull": "ItemsComparator<TItem>"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearStructure",
    "nameFull": "clearStructure"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getRootIds",
    "nameFull": "getRootIds"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getRootItems",
    "nameFull": "getRootItems"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getChildren",
    "nameFull": "getChildren"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getChildrenByParentId",
    "nameFull": "getChildrenByParentId"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getChildrenIdsByParentId",
    "nameFull": "getChildrenIdsByParentId"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getParentIdsRecursive",
    "nameFull": "getParentIdsRecursive"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getParents",
    "nameFull": "getParents"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPathById",
    "nameFull": "getPathById"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPathItem",
    "nameFull": "getPathItem"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getNodeInfo",
    "nameFull": "getNodeInfo"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isFlatList",
    "nameFull": "isFlatList"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "patch",
    "nameFull": "patch"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "cascadeSelection",
    "nameFull": "cascadeSelection"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "load",
    "nameFull": "load"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "loadMissing",
    "nameFull": "loadMissing"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "loadMissingIdsAndParents",
    "nameFull": "loadMissingIdsAndParents"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getTotalRecursiveCount",
    "nameFull": "getTotalRecursiveCount"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "forEach",
    "nameFull": "forEach"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "computeSubtotals",
    "nameFull": "computeSubtotals"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sort",
    "nameFull": "sort"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITree",
    "nameFull": "ITree<TItem, TId>"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "get",
    "nameFull": "get"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "set",
    "nameFull": "set"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IUserSettingsContext",
    "nameFull": "IUserSettingsContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInputCoreProps",
    "nameFull": "LabeledInputCoreProps"
   },
   "source": "uui-core/src/types/components/LabeledInput.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "depth",
    "nameFull": "depth"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LayoutLayer",
    "nameFull": "LayoutLayer"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "range",
    "nameFull": "range"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "page",
    "nameFull": "page"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pageSize",
    "nameFull": "pageSize"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ids",
    "nameFull": "ids"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "parentId",
    "nameFull": "parentId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "parent",
    "nameFull": "parent"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequestOptions",
    "nameFull": "LazyDataSourceApiRequestOptions<TItem, TFilter>"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceProps",
    "nameFull": "LazyDataSourceProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/LazyDataSource.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyListViewProps",
    "nameFull": "LazyListViewProps<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/LazyListView.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pathname",
    "nameFull": "pathname"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "query",
    "nameFull": "query"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "hash",
    "nameFull": "hash"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "state",
    "nameFull": "state"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Link",
    "nameFull": "Link"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ListApiResponse",
    "nameFull": "ListApiResponse<TItem>"
   },
   "source": "uui-core/src/data/processing/ListApiCache.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ListApiSettings",
    "nameFull": "ListApiSettings<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/ListApiCache.tsx"
  },
  {
   "typeName": {
    "name": "description",
    "nameFull": "description"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "__computed",
    "nameFull": "__computed"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LoadingStatus",
    "nameFull": "LoadingStatus"
   },
   "source": "uui-core/src/helpers/LazyLoadedMap.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "loadAllChildren",
    "nameFull": "loadAllChildren"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isFolded",
    "nameFull": "isFolded"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LoadTreeOptions",
    "nameFull": "LoadTreeOptions<TItem, TId, TFilter>"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "props",
    "nameFull": "props"
   },
   "source": "uui-core/src/types/validation.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "all",
    "nameFull": "all"
   },
   "source": "uui-core/src/types/validation.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "minValue",
    "nameFull": "minValue"
   },
   "source": "uui-core/src/types/validation.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "maxValue",
    "nameFull": "maxValue"
   },
   "source": "uui-core/src/types/validation.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "maxLength",
    "nameFull": "maxLength"
   },
   "source": "uui-core/src/types/validation.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "validators",
    "nameFull": "validators"
   },
   "source": "uui-core/src/types/validation.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Metadata",
    "nameFull": "Metadata<T>"
   },
   "source": "uui-core/src/types/validation.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "disableFocusLock",
    "nameFull": "disableFocusLock"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "disableCloseByEsc",
    "nameFull": "disableCloseByEsc"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "disallowClickOutside",
    "nameFull": "disallowClickOutside"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlockerProps",
    "nameFull": "ModalBlockerProps"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "parameters",
    "nameFull": "parameters"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "depth",
    "nameFull": "depth"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalComponentProps",
    "nameFull": "ModalComponentProps<TParameters, TResult>"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "borderTop",
    "nameFull": "borderTop"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooterCoreProps",
    "nameFull": "ModalFooterCoreProps"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeaderCoreProps",
    "nameFull": "ModalHeaderCoreProps"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "component",
    "nameFull": "component"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "parameters",
    "nameFull": "parameters"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "depth",
    "nameFull": "depth"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "props",
    "nameFull": "props"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalOperation",
    "nameFull": "ModalOperation"
   },
   "source": "uui-core/src/services/ModalContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindowProps",
    "nameFull": "ModalWindowProps"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSuccess",
    "nameFull": "onSuccess"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearTimer",
    "nameFull": "clearTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "refreshTimer",
    "nameFull": "refreshTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "props",
    "nameFull": "props"
   },
   "source": "uui-core/src/services/NotificationContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "duration",
    "nameFull": "duration"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "position",
    "nameFull": "position"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "config",
    "nameFull": "config"
   },
   "source": "uui-core/src/services/NotificationContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NotificationOperation",
    "nameFull": "NotificationOperation"
   },
   "source": "uui-core/src/services/NotificationContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "duration",
    "nameFull": "duration"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "position",
    "nameFull": "position"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NotificationParams",
    "nameFull": "NotificationParams"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBaseOptions",
    "nameFull": "PickerBaseOptions<TItem, TId>"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBaseProps",
    "nameFull": "PickerBaseProps<TItem, TId>"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBindingProps",
    "nameFull": "PickerBindingProps<TItem, TId>"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBindingValueType",
    "nameFull": "PickerBindingValueType"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "title",
    "nameFull": "title"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "field",
    "nameFull": "field"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnKey",
    "nameFull": "columnKey"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isAlwaysVisible",
    "nameFull": "isAlwaysVisible"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "predicates",
    "nameFull": "predicates"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dataSource",
    "nameFull": "dataSource"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getName",
    "nameFull": "getName"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderRow",
    "nameFull": "renderRow"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerFilterConfig",
    "nameFull": "PickerFilterConfig<TFilter>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getListProps",
    "nameFull": "getListProps"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getVisibleRows",
    "nameFull": "getVisibleRows"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSelectedRows",
    "nameFull": "getSelectedRows"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSelectedRowsCount",
    "nameFull": "getSelectedRowsCount"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reload",
    "nameFull": "reload"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroy",
    "nameFull": "destroy"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "loadData",
    "nameFull": "loadData"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "_forceUpdate",
    "nameFull": "_forceUpdate"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "view",
    "nameFull": "view"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showSelected",
    "nameFull": "showSelected"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearSelection",
    "nameFull": "clearSelection"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "disableClear",
    "nameFull": "disableClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerFooterProps",
    "nameFull": "PickerFooterProps<TItem, TId>"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPlaceholder",
    "nameFull": "getPlaceholder"
   },
   "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "rawProps",
    "nameFull": "rawProps"
   },
   "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "bodyCx",
    "nameFull": "bodyCx"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerCoreProps",
    "nameFull": "RangeDatePickerCoreProps"
   },
   "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerInputType",
    "nameFull": "RangeDatePickerInputType"
   },
   "source": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerPresets",
    "nameFull": "RangeDatePickerPresets"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "to",
    "nameFull": "to"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "order",
    "nameFull": "order"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerPresetValue",
    "nameFull": "RangeDatePickerPresetValue"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "to",
    "nameFull": "to"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerValue",
    "nameFull": "RangeDatePickerValue"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "get",
    "nameFull": "get"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "set",
    "nameFull": "set"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "update",
    "nameFull": "update"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "prop",
    "nameFull": "prop"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "index",
    "nameFull": "index"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onChange",
    "nameFull": "onChange"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "default",
    "nameFull": "default"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "toProps",
    "nameFull": "toProps"
   },
   "source": "uui-core/src/data/lenses/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columns",
    "nameFull": "columns"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderCell",
    "nameFull": "renderCell"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "renderDropMarkers",
    "nameFull": "renderDropMarkers"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "justifyContent",
    "nameFull": "justifyContent"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canCopy",
    "nameFull": "canCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptCopy",
    "nameFull": "canAcceptCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RenderCellProps",
    "nameFull": "RenderCellProps<TItem, TId>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "rowProps",
    "nameFull": "rowProps"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RenderEditorProps",
    "nameFull": "RenderEditorProps<TItem, TId, TCellValue>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ScrollAlign",
    "nameFull": "ScrollAlign"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "index",
    "nameFull": "index"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "behavior",
    "nameFull": "behavior"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "align",
    "nameFull": "align"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ScrollToConfig",
    "nameFull": "ScrollToConfig"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "parents",
    "nameFull": "parents"
   },
   "source": "uui-core/src/data/processing/views/LazyListView.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SearchResultItem",
    "nameFull": "SearchResultItem<TItem>"
   },
   "source": "uui-core/src/data/processing/views/LazyListView.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SinglePickerProps",
    "nameFull": "SinglePickerProps<TId, TItem>"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "usageContext",
    "nameFull": "usageContext"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SkinContextComponentProps",
    "nameFull": "SkinContextComponentProps<TProps, TSemanticProps>"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SortDirection",
    "nameFull": "SortDirection"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "field",
    "nameFull": "field"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "direction",
    "nameFull": "direction"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SortingOption",
    "nameFull": "SortingOption<T>"
   },
   "source": "uui-core/src/types/dataQuery.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SpinnerCoreProps",
    "nameFull": "SpinnerCoreProps"
   },
   "source": "uui-core/src/types/components/Spinner.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "initialState",
    "nameFull": "initialState"
   },
   "source": "uui-core/src/data/Stateful.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/data/Stateful.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "storage",
    "nameFull": "storage"
   },
   "source": "uui-core/src/data/Stateful.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "StatefulProps",
    "nameFull": "StatefulProps<T>"
   },
   "source": "uui-core/src/data/Stateful.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "title",
    "nameFull": "title"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "field",
    "nameFull": "field"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnKey",
    "nameFull": "columnKey"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isAlwaysVisible",
    "nameFull": "isAlwaysVisible"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "predicates",
    "nameFull": "predicates"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TableFiltersConfig",
    "nameFull": "TableFiltersConfig<TFilter>"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInputCoreProps",
    "nameFull": "TextInputCoreProps"
   },
   "source": "uui-core/src/types/components/TextInput.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "hours",
    "nameFull": "hours"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "minutes",
    "nameFull": "minutes"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TimePickerValue",
    "nameFull": "TimePickerValue"
   },
   "source": "uui-core/src/types/objects.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mousePageX",
    "nameFull": "mousePageX"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mousePageY",
    "nameFull": "mousePageY"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mouseDx",
    "nameFull": "mouseDx"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mouseDy",
    "nameFull": "mouseDy"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mouseDxSmooth",
    "nameFull": "mouseDxSmooth"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mouseDySmooth",
    "nameFull": "mouseDySmooth"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mouseDownPageX",
    "nameFull": "mouseDownPageX"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mouseDownPageY",
    "nameFull": "mouseDownPageY"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "buttons",
    "nameFull": "buttons"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TMouseCoords",
    "nameFull": "TMouseCoords"
   },
   "source": "uui-core/src/services/dnd/DndContext.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "placement",
    "nameFull": "placement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "modifiers",
    "nameFull": "modifiers"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeDelay",
    "nameFull": "closeDelay"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnMouseLeave",
    "nameFull": "closeOnMouseLeave"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "boundaryElement",
    "nameFull": "boundaryElement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeBodyOnTogglerHidden",
    "nameFull": "closeBodyOnTogglerHidden"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TooltipCoreProps",
    "nameFull": "TooltipCoreProps"
   },
   "source": "uui-core/src/types/components/Tooltip.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TreeNodeInfo",
    "nameFull": "TreeNodeInfo"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getParentId",
    "nameFull": "getParentId"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "complexIds",
    "nameFull": "complexIds"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TreeParams",
    "nameFull": "TreeParams<TItem, TId>"
   },
   "source": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseFormProps",
    "nameFull": "UseFormProps<T>"
   },
   "source": "uui-core/src/data/forms/useForm.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseTableStateHookParams",
    "nameFull": "UseTableStateHookParams<TFilter, TViewState>"
   },
   "source": "uui-core/src/hooks/useTableState/useTableState.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "errorConfig",
    "nameFull": "errorConfig"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "recoveryConfig",
    "nameFull": "recoveryConfig"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiErrorOptions",
    "nameFull": "UseUuiErrorOptions"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getErrorInfo",
    "nameFull": "getErrorInfo"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiErrorProps",
    "nameFull": "UseUuiErrorProps"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "appContext",
    "nameFull": "appContext"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getCurrentLink",
    "nameFull": "getCurrentLink"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "redirect",
    "nameFull": "redirect"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "transfer",
    "nameFull": "transfer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "createHref",
    "nameFull": "createHref"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "listen",
    "nameFull": "listen"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "block",
    "nameFull": "block"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "router",
    "nameFull": "router"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiDefinition",
    "nameFull": "apiDefinition"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "skinContext",
    "nameFull": "skinContext"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiReloginPath",
    "nameFull": "apiReloginPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiPingPath",
    "nameFull": "apiPingPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiServerUrl",
    "nameFull": "apiServerUrl"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiServicesProps",
    "nameFull": "UseUuiServicesProps<TApi, TAppContext>"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "status",
    "nameFull": "status"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "recoveryReason",
    "nameFull": "recoveryReason"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getActiveCalls",
    "nameFull": "getActiveCalls"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reset",
    "nameFull": "reset"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "processRequest",
    "nameFull": "processRequest"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uploadFile",
    "nameFull": "uploadFile"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiApi",
    "nameFull": "uuiApi"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getCurrentLink",
    "nameFull": "getCurrentLink"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "redirect",
    "nameFull": "redirect"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "transfer",
    "nameFull": "transfer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "createHref",
    "nameFull": "createHref"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "listen",
    "nameFull": "listen"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "block",
    "nameFull": "block"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiRouter",
    "nameFull": "uuiRouter"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "show",
    "nameFull": "show"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeAll",
    "nameFull": "closeAll"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isModalOperationActive",
    "nameFull": "isModalOperationActive"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getOperations",
    "nameFull": "getOperations"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiModals",
    "nameFull": "uuiModals"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "endDrag",
    "nameFull": "endDrag"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "dragData",
    "nameFull": "dragData"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getMouseCoords",
    "nameFull": "getMouseCoords"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiDnD",
    "nameFull": "uuiDnD"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "get",
    "nameFull": "get"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "set",
    "nameFull": "set"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiUserSettings",
    "nameFull": "uuiUserSettings"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sendEvent",
    "nameFull": "sendEvent"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "addListener",
    "nameFull": "addListener"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiAnalytics",
    "nameFull": "uuiAnalytics"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "currentError",
    "nameFull": "currentError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reportError",
    "nameFull": "reportError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onError",
    "nameFull": "onError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "discardError",
    "nameFull": "discardError"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "recover",
    "nameFull": "recover"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiErrors",
    "nameFull": "uuiErrors"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "show",
    "nameFull": "show"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getNotifications",
    "nameFull": "getNotifications"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "remove",
    "nameFull": "remove"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearAll",
    "nameFull": "clearAll"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroyContext",
    "nameFull": "destroyContext"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiNotifications",
    "nameFull": "uuiNotifications"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getLayer",
    "nameFull": "getLayer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "releaseLayer",
    "nameFull": "releaseLayer"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPortalRoot",
    "nameFull": "getPortalRoot"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getPortalRootId",
    "nameFull": "getPortalRootId"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiLayout",
    "nameFull": "uuiLayout"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "acquire",
    "nameFull": "acquire"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "release",
    "nameFull": "release"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "withLock",
    "nameFull": "withLock"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getCurrentLock",
    "nameFull": "getCurrentLock"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiLocks",
    "nameFull": "uuiLocks"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Button",
    "nameFull": "Button"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IconButton",
    "nameFull": "IconButton"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Checkbox",
    "nameFull": "Checkbox"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRow",
    "nameFull": "FlexRow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCell",
    "nameFull": "FlexCell"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Spinner",
    "nameFull": "Spinner"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInput",
    "nameFull": "TextInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindow",
    "nameFull": "ModalWindow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlocker",
    "nameFull": "ModalBlocker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeader",
    "nameFull": "ModalHeader"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooter",
    "nameFull": "ModalFooter"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInput",
    "nameFull": "LabeledInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePicker",
    "nameFull": "DatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mapProps",
    "nameFull": "mapProps"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePicker",
    "nameFull": "RangeDatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "skin",
    "nameFull": "skin"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setSkin",
    "nameFull": "setSkin"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Button",
    "nameFull": "Button"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IconButton",
    "nameFull": "IconButton"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Checkbox",
    "nameFull": "Checkbox"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRow",
    "nameFull": "FlexRow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCell",
    "nameFull": "FlexCell"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Spinner",
    "nameFull": "Spinner"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInput",
    "nameFull": "TextInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindow",
    "nameFull": "ModalWindow"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlocker",
    "nameFull": "ModalBlocker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeader",
    "nameFull": "ModalHeader"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooter",
    "nameFull": "ModalFooter"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInput",
    "nameFull": "LabeledInput"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePicker",
    "nameFull": "DatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePicker",
    "nameFull": "RangeDatePicker"
   },
   "source": "uui-core/src/services/SkinContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "uuiSkin",
    "nameFull": "uuiSkin"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiContexts",
    "nameFull": "UuiContexts"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "status",
    "nameFull": "status"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "imageUrl",
    "nameFull": "imageUrl"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "mobileImageUrl",
    "nameFull": "mobileImageUrl"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiErrorInfo",
    "nameFull": "UuiErrorInfo"
   },
   "source": "uui-core/src/types/contexts.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "title",
    "nameFull": "title"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "subtitle",
    "nameFull": "subtitle"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiRecoveryErrorInfo",
    "nameFull": "UuiRecoveryErrorInfo"
   },
   "source": "uui-core/src/hooks/useUuiError.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiDefinition",
    "nameFull": "apiDefinition"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "skinContext",
    "nameFull": "skinContext"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiReloginPath",
    "nameFull": "apiReloginPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiPingPath",
    "nameFull": "apiPingPath"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "apiServerUrl",
    "nameFull": "apiServerUrl"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiServicesProps",
    "nameFull": "UuiServicesProps<TApi>"
   },
   "source": "uui-core/src/hooks/useUuiServices.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ValidationMode",
    "nameFull": "ValidationMode"
   },
   "source": "uui-core/src/data/validation/validate.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VirtualListRange",
    "nameFull": "VirtualListRange"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VPanelProps",
    "nameFull": "VPanelProps"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AccordionProps",
    "nameFull": "AccordionProps"
   },
   "source": "uui-components/src/layout/Accordion.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "opened",
    "nameFull": "opened"
   },
   "source": "uui-components/src/layout/Accordion.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AccordionState",
    "nameFull": "AccordionState"
   },
   "source": "uui-components/src/layout/Accordion.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "render",
    "nameFull": "render"
   },
   "source": "uui-components/src/adaptivePanel/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-components/src/adaptivePanel/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-components/src/adaptivePanel/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/adaptivePanel/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AdaptiveItemProps",
    "nameFull": "AdaptiveItemProps<T>"
   },
   "source": "uui-components/src/adaptivePanel/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AdaptivePanelProps",
    "nameFull": "AdaptivePanelProps"
   },
   "source": "uui-components/src/adaptivePanel/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AnchorProps",
    "nameFull": "AnchorProps"
   },
   "source": "uui-components/src/navigation/Anchor.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "emptyValue",
    "nameFull": "emptyValue"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ArrayPickerProps",
    "nameFull": "ArrayPickerProps<TId, TItem>"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AvatarProps",
    "nameFull": "AvatarProps"
   },
   "source": "uui-components/src/widgets/Avatar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "avatarSize",
    "nameFull": "avatarSize"
   },
   "source": "uui-components/src/widgets/AvatarStack.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "direction",
    "nameFull": "direction"
   },
   "source": "uui-components/src/widgets/AvatarStack.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "avatarsCount",
    "nameFull": "avatarsCount"
   },
   "source": "uui-components/src/widgets/AvatarStack.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderItem",
    "nameFull": "renderItem"
   },
   "source": "uui-components/src/widgets/AvatarStack.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AvatarStackProps",
    "nameFull": "AvatarStackProps"
   },
   "source": "uui-components/src/widgets/AvatarStack.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "to",
    "nameFull": "to"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "step",
    "nameFull": "step"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderRating",
    "nameFull": "renderRating"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseRatingProps",
    "nameFull": "BaseRatingProps<TValue>"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "minutesStep",
    "nameFull": "minutesStep"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "format",
    "nameFull": "format"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderTarget",
    "nameFull": "renderTarget"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "rawProps",
    "nameFull": "rawProps"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseTimePickerProps",
    "nameFull": "BaseTimePickerProps"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BlockerProps",
    "nameFull": "BlockerProps"
   },
   "source": "uui-components/src/layout/Blocker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "burgerIcon",
    "nameFull": "burgerIcon"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "crossIcon",
    "nameFull": "crossIcon"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "burgerContentCx",
    "nameFull": "burgerContentCx"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderBurgerContent",
    "nameFull": "renderBurgerContent"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "bg",
    "nameFull": "bg"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "logoUrl",
    "nameFull": "logoUrl"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BurgerProps",
    "nameFull": "BurgerProps"
   },
   "source": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ButtonBaseProps",
    "nameFull": "ButtonBaseProps"
   },
   "source": "uui-components/src/buttons/ButtonBase.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "source": "uui-components/src/buttons/Button.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "presets",
    "nameFull": "presets"
   },
   "source": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onPresetSet",
    "nameFull": "onPresetSet"
   },
   "source": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CalendarPresetsProps",
    "nameFull": "CalendarPresetsProps"
   },
   "source": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "value",
    "nameFull": "value"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onValueChange",
    "nameFull": "onValueChange"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderDay",
    "nameFull": "renderDay"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "hideAnotherMonths",
    "nameFull": "hideAnotherMonths"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "getDayCX",
    "nameFull": "getDayCX"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CalendarProps",
    "nameFull": "CalendarProps<TSelection>"
   },
   "source": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderItem",
    "nameFull": "renderItem"
   },
   "source": "uui-components/src/widgets/Carousel.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "divideBy",
    "nameFull": "divideBy"
   },
   "source": "uui-components/src/widgets/Carousel.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "arrowIcon",
    "nameFull": "arrowIcon"
   },
   "source": "uui-components/src/widgets/Carousel.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CarouselProps",
    "nameFull": "CarouselProps"
   },
   "source": "uui-components/src/widgets/Carousel.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "activeSlide",
    "nameFull": "activeSlide"
   },
   "source": "uui-components/src/widgets/Carousel.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CarouselState",
    "nameFull": "CarouselState"
   },
   "source": "uui-components/src/widgets/Carousel.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "direction",
    "nameFull": "direction"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CheckboxGroupProps",
    "nameFull": "CheckboxGroupProps<TValue>"
   },
   "source": "uui-components/src/layout/CheckboxGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderLabel",
    "nameFull": "renderLabel"
   },
   "source": "uui-components/src/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CheckboxProps",
    "nameFull": "CheckboxProps"
   },
   "source": "uui-components/src/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "toggleVisibility",
    "nameFull": "toggleVisibility"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "togglePin",
    "nameFull": "togglePin"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onCanAcceptDrop",
    "nameFull": "onCanAcceptDrop"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onDrop",
    "nameFull": "onDrop"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isVisible",
    "nameFull": "isVisible"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "order",
    "nameFull": "order"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "columnConfig",
    "nameFull": "columnConfig"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isDndAllowed",
    "nameFull": "isDndAllowed"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isPinnedAlways",
    "nameFull": "isPinnedAlways"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "groupKey",
    "nameFull": "groupKey"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "justifyContent",
    "nameFull": "justifyContent"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canCopy",
    "nameFull": "canCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "canAcceptCopy",
    "nameFull": "canAcceptCopy"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ColumnsConfigurationRowProps",
    "nameFull": "ColumnsConfigurationRowProps"
   },
   "source": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ControlGroupProps",
    "nameFull": "ControlGroupProps"
   },
   "source": "uui-components/src/layout/ControlGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ControlIconProps",
    "nameFull": "ControlIconProps"
   },
   "source": "uui-components/src/layout/IconContainer.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getListProps",
    "nameFull": "getListProps"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getVisibleRows",
    "nameFull": "getVisibleRows"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSelectedRows",
    "nameFull": "getSelectedRows"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getSelectedRowsCount",
    "nameFull": "getSelectedRowsCount"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "reload",
    "nameFull": "reload"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "destroy",
    "nameFull": "destroy"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "loadData",
    "nameFull": "loadData"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "_forceUpdate",
    "nameFull": "_forceUpdate"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "listView",
    "nameFull": "listView"
   },
   "source": "uui-components/src/pickers/KeyboardUtils.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "editMode",
    "nameFull": "editMode"
   },
   "source": "uui-components/src/pickers/KeyboardUtils.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DataSourceKeyboardParams",
    "nameFull": "DataSourceKeyboardParams"
   },
   "source": "uui-components/src/pickers/KeyboardUtils.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onCopy",
    "nameFull": "onCopy"
   },
   "source": "uui-components/src/table/tableCellsSelection/DataTableSelectionProvider.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DataTableSelectionProviderProps",
    "nameFull": "DataTableSelectionProviderProps<TItem, TId, TFilter>"
   },
   "source": "uui-components/src/table/tableCellsSelection/DataTableSelectionProvider.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "changeIsOpen",
    "nameFull": "changeIsOpen"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "presets",
    "nameFull": "presets"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderDay",
    "nameFull": "renderDay"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerBodyBaseOptions",
    "nameFull": "DatePickerBodyBaseOptions"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectedDate",
    "nameFull": "selectedDate"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "view",
    "nameFull": "view"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "value",
    "nameFull": "value"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "setSelectedDate",
    "nameFull": "setSelectedDate"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "setDisplayedDateAndView",
    "nameFull": "setDisplayedDateAndView"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "changeIsOpen",
    "nameFull": "changeIsOpen"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "presets",
    "nameFull": "presets"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderDay",
    "nameFull": "renderDay"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerBodyBaseProps",
    "nameFull": "DatePickerBodyBaseProps<TSelection>"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "inputValue",
    "nameFull": "inputValue"
   },
   "source": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectedDate",
    "nameFull": "selectedDate"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "view",
    "nameFull": "view"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerState",
    "nameFull": "DatePickerState"
   },
   "source": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "getDayCX",
    "nameFull": "getDayCX"
   },
   "source": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderDayNumber",
    "nameFull": "renderDayNumber"
   },
   "source": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isSelected",
    "nameFull": "isSelected"
   },
   "source": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DayProps",
    "nameFull": "DayProps"
   },
   "source": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DragHandleProps",
    "nameFull": "DragHandleProps"
   },
   "source": "uui-components/src/dnd/DragHandle.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "maxWidth",
    "nameFull": "maxWidth"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "showArrow",
    "nameFull": "showArrow"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerWidth",
    "nameFull": "togglerWidth"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerHeight",
    "nameFull": "togglerHeight"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "arrowProps",
    "nameFull": "arrowProps"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropdownContainerProps",
    "nameFull": "DropdownContainerProps"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onDrop",
    "nameFull": "onDrop"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onDragOver",
    "nameFull": "onDragOver"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onDragEnter",
    "nameFull": "onDragEnter"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onDragLeave",
    "nameFull": "onDragLeave"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "eventHandlers",
    "nameFull": "eventHandlers"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isDraggingOver",
    "nameFull": "isDraggingOver"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isDragStart",
    "nameFull": "isDragStart"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropSpotRenderParams",
    "nameFull": "DropSpotRenderParams"
   },
   "source": "uui-components/src/widgets/DropSpot.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "FlexSpacerProps",
    "nameFull": "FlexSpacerProps"
   },
   "source": "uui-components/src/layout/flexItems/FlexSpacer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onResizeStart",
    "nameFull": "onResizeStart"
   },
   "source": "uui-components/src/table/DataTableHeaderCell.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onResizeEnd",
    "nameFull": "onResizeEnd"
   },
   "source": "uui-components/src/table/DataTableHeaderCell.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onResize",
    "nameFull": "onResize"
   },
   "source": "uui-components/src/table/DataTableHeaderCell.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "toggleSort",
    "nameFull": "toggleSort"
   },
   "source": "uui-components/src/table/DataTableHeaderCell.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onTouchStart",
    "nameFull": "onTouchStart"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerDown",
    "nameFull": "onPointerDown"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerEnter",
    "nameFull": "onPointerEnter"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerMove",
    "nameFull": "onPointerMove"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerLeave",
    "nameFull": "onPointerLeave"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerUp",
    "nameFull": "onPointerUp"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "HeaderCellContentProps",
    "nameFull": "HeaderCellContentProps"
   },
   "source": "uui-components/src/table/DataTableHeaderCell.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IconButtonBaseProps",
    "nameFull": "IconButtonBaseProps"
   },
   "source": "uui-components/src/buttons/IconButton.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "content",
    "nameFull": "content"
   },
   "source": "uui-components/src/inputs/InputAddon.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "InputAddonProps",
    "nameFull": "InputAddonProps"
   },
   "source": "uui-components/src/inputs/InputAddon.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "progress",
    "nameFull": "progress"
   },
   "source": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "label",
    "nameFull": "label"
   },
   "source": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "hideLabel",
    "nameFull": "hideLabel"
   },
   "source": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IProgressBarProps",
    "nameFull": "IProgressBarProps"
   },
   "source": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
  },
  {
   "typeName": {
    "name": "ref",
    "nameFull": "ref"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "accept",
    "nameFull": "accept"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "alt",
    "nameFull": "alt"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoComplete",
    "nameFull": "autoComplete"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoFocus",
    "nameFull": "autoFocus"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "capture",
    "nameFull": "capture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "checked",
    "nameFull": "checked"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "crossOrigin",
    "nameFull": "crossOrigin"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "disabled",
    "nameFull": "disabled"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "enterKeyHint",
    "nameFull": "enterKeyHint"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "form",
    "nameFull": "form"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formAction",
    "nameFull": "formAction"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formEncType",
    "nameFull": "formEncType"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formMethod",
    "nameFull": "formMethod"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formNoValidate",
    "nameFull": "formNoValidate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formTarget",
    "nameFull": "formTarget"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "list",
    "nameFull": "list"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "max",
    "nameFull": "max"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "maxLength",
    "nameFull": "maxLength"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "min",
    "nameFull": "min"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "minLength",
    "nameFull": "minLength"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "multiple",
    "nameFull": "multiple"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "pattern",
    "nameFull": "pattern"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "placeholder",
    "nameFull": "placeholder"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "readOnly",
    "nameFull": "readOnly"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "required",
    "nameFull": "required"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "src",
    "nameFull": "src"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "step",
    "nameFull": "step"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "value",
    "nameFull": "value"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onChange",
    "nameFull": "onChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "defaultChecked",
    "nameFull": "defaultChecked"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "defaultValue",
    "nameFull": "defaultValue"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "suppressContentEditableWarning",
    "nameFull": "suppressContentEditableWarning"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "suppressHydrationWarning",
    "nameFull": "suppressHydrationWarning"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "accessKey",
    "nameFull": "accessKey"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "className",
    "nameFull": "className"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "contentEditable",
    "nameFull": "contentEditable"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "contextMenu",
    "nameFull": "contextMenu"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "dir",
    "nameFull": "dir"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "draggable",
    "nameFull": "draggable"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "hidden",
    "nameFull": "hidden"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "lang",
    "nameFull": "lang"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "nonce",
    "nameFull": "nonce"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "slot",
    "nameFull": "slot"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "spellCheck",
    "nameFull": "spellCheck"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "tabIndex",
    "nameFull": "tabIndex"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "title",
    "nameFull": "title"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "translate",
    "nameFull": "translate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "radioGroup",
    "nameFull": "radioGroup"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "role",
    "nameFull": "role"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "about",
    "nameFull": "about"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "datatype",
    "nameFull": "datatype"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "inlist",
    "nameFull": "inlist"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "prefix",
    "nameFull": "prefix"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "property",
    "nameFull": "property"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "resource",
    "nameFull": "resource"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "typeof",
    "nameFull": "typeof"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "vocab",
    "nameFull": "vocab"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoCapitalize",
    "nameFull": "autoCapitalize"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoCorrect",
    "nameFull": "autoCorrect"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoSave",
    "nameFull": "autoSave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemProp",
    "nameFull": "itemProp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemScope",
    "nameFull": "itemScope"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemType",
    "nameFull": "itemType"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemID",
    "nameFull": "itemID"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemRef",
    "nameFull": "itemRef"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "results",
    "nameFull": "results"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "security",
    "nameFull": "security"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "unselectable",
    "nameFull": "unselectable"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "dangerouslySetInnerHTML",
    "nameFull": "dangerouslySetInnerHTML"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCopy",
    "nameFull": "onCopy"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCopyCapture",
    "nameFull": "onCopyCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCut",
    "nameFull": "onCut"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCutCapture",
    "nameFull": "onCutCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPaste",
    "nameFull": "onPaste"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPasteCapture",
    "nameFull": "onPasteCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionEnd",
    "nameFull": "onCompositionEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionEndCapture",
    "nameFull": "onCompositionEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionStart",
    "nameFull": "onCompositionStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionStartCapture",
    "nameFull": "onCompositionStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionUpdate",
    "nameFull": "onCompositionUpdate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionUpdateCapture",
    "nameFull": "onCompositionUpdateCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onFocus",
    "nameFull": "onFocus"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onFocusCapture",
    "nameFull": "onFocusCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBlur",
    "nameFull": "onBlur"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBlurCapture",
    "nameFull": "onBlurCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onChangeCapture",
    "nameFull": "onChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBeforeInput",
    "nameFull": "onBeforeInput"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBeforeInputCapture",
    "nameFull": "onBeforeInputCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInput",
    "nameFull": "onInput"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInputCapture",
    "nameFull": "onInputCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onReset",
    "nameFull": "onReset"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onResetCapture",
    "nameFull": "onResetCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSubmit",
    "nameFull": "onSubmit"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSubmitCapture",
    "nameFull": "onSubmitCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInvalid",
    "nameFull": "onInvalid"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInvalidCapture",
    "nameFull": "onInvalidCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoad",
    "nameFull": "onLoad"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadCapture",
    "nameFull": "onLoadCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onError",
    "nameFull": "onError"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onErrorCapture",
    "nameFull": "onErrorCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyDown",
    "nameFull": "onKeyDown"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyDownCapture",
    "nameFull": "onKeyDownCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyUp",
    "nameFull": "onKeyUp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyUpCapture",
    "nameFull": "onKeyUpCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAbort",
    "nameFull": "onAbort"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAbortCapture",
    "nameFull": "onAbortCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlay",
    "nameFull": "onCanPlay"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlayCapture",
    "nameFull": "onCanPlayCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlayThrough",
    "nameFull": "onCanPlayThrough"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlayThroughCapture",
    "nameFull": "onCanPlayThroughCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDurationChange",
    "nameFull": "onDurationChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDurationChangeCapture",
    "nameFull": "onDurationChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEmptied",
    "nameFull": "onEmptied"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEmptiedCapture",
    "nameFull": "onEmptiedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEncrypted",
    "nameFull": "onEncrypted"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEncryptedCapture",
    "nameFull": "onEncryptedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEnded",
    "nameFull": "onEnded"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEndedCapture",
    "nameFull": "onEndedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedData",
    "nameFull": "onLoadedData"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedDataCapture",
    "nameFull": "onLoadedDataCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedMetadata",
    "nameFull": "onLoadedMetadata"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedMetadataCapture",
    "nameFull": "onLoadedMetadataCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadStart",
    "nameFull": "onLoadStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadStartCapture",
    "nameFull": "onLoadStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPause",
    "nameFull": "onPause"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPauseCapture",
    "nameFull": "onPauseCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlay",
    "nameFull": "onPlay"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlayCapture",
    "nameFull": "onPlayCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlaying",
    "nameFull": "onPlaying"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlayingCapture",
    "nameFull": "onPlayingCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onProgress",
    "nameFull": "onProgress"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onProgressCapture",
    "nameFull": "onProgressCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onRateChange",
    "nameFull": "onRateChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onRateChangeCapture",
    "nameFull": "onRateChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onResize",
    "nameFull": "onResize"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onResizeCapture",
    "nameFull": "onResizeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeeked",
    "nameFull": "onSeeked"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeekedCapture",
    "nameFull": "onSeekedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeeking",
    "nameFull": "onSeeking"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeekingCapture",
    "nameFull": "onSeekingCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onStalled",
    "nameFull": "onStalled"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onStalledCapture",
    "nameFull": "onStalledCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSuspend",
    "nameFull": "onSuspend"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSuspendCapture",
    "nameFull": "onSuspendCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTimeUpdate",
    "nameFull": "onTimeUpdate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTimeUpdateCapture",
    "nameFull": "onTimeUpdateCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onVolumeChange",
    "nameFull": "onVolumeChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onVolumeChangeCapture",
    "nameFull": "onVolumeChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWaiting",
    "nameFull": "onWaiting"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWaitingCapture",
    "nameFull": "onWaitingCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAuxClick",
    "nameFull": "onAuxClick"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAuxClickCapture",
    "nameFull": "onAuxClickCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onClick",
    "nameFull": "onClick"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onClickCapture",
    "nameFull": "onClickCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onContextMenu",
    "nameFull": "onContextMenu"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onContextMenuCapture",
    "nameFull": "onContextMenuCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDoubleClick",
    "nameFull": "onDoubleClick"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDoubleClickCapture",
    "nameFull": "onDoubleClickCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDrag",
    "nameFull": "onDrag"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragCapture",
    "nameFull": "onDragCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEnd",
    "nameFull": "onDragEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEndCapture",
    "nameFull": "onDragEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEnter",
    "nameFull": "onDragEnter"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEnterCapture",
    "nameFull": "onDragEnterCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragExit",
    "nameFull": "onDragExit"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragExitCapture",
    "nameFull": "onDragExitCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragLeave",
    "nameFull": "onDragLeave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragLeaveCapture",
    "nameFull": "onDragLeaveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragOver",
    "nameFull": "onDragOver"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragOverCapture",
    "nameFull": "onDragOverCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragStart",
    "nameFull": "onDragStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragStartCapture",
    "nameFull": "onDragStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDrop",
    "nameFull": "onDrop"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDropCapture",
    "nameFull": "onDropCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseDown",
    "nameFull": "onMouseDown"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseDownCapture",
    "nameFull": "onMouseDownCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseEnter",
    "nameFull": "onMouseEnter"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseLeave",
    "nameFull": "onMouseLeave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseMove",
    "nameFull": "onMouseMove"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseMoveCapture",
    "nameFull": "onMouseMoveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOut",
    "nameFull": "onMouseOut"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOutCapture",
    "nameFull": "onMouseOutCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOver",
    "nameFull": "onMouseOver"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOverCapture",
    "nameFull": "onMouseOverCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseUp",
    "nameFull": "onMouseUp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseUpCapture",
    "nameFull": "onMouseUpCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSelect",
    "nameFull": "onSelect"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSelectCapture",
    "nameFull": "onSelectCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchCancel",
    "nameFull": "onTouchCancel"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchCancelCapture",
    "nameFull": "onTouchCancelCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchEnd",
    "nameFull": "onTouchEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchEndCapture",
    "nameFull": "onTouchEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchMove",
    "nameFull": "onTouchMove"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchMoveCapture",
    "nameFull": "onTouchMoveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchStart",
    "nameFull": "onTouchStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchStartCapture",
    "nameFull": "onTouchStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerDown",
    "nameFull": "onPointerDown"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerDownCapture",
    "nameFull": "onPointerDownCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerMove",
    "nameFull": "onPointerMove"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerMoveCapture",
    "nameFull": "onPointerMoveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerUp",
    "nameFull": "onPointerUp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerUpCapture",
    "nameFull": "onPointerUpCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerCancel",
    "nameFull": "onPointerCancel"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerCancelCapture",
    "nameFull": "onPointerCancelCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerEnter",
    "nameFull": "onPointerEnter"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerEnterCapture",
    "nameFull": "onPointerEnterCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerLeave",
    "nameFull": "onPointerLeave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerLeaveCapture",
    "nameFull": "onPointerLeaveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOver",
    "nameFull": "onPointerOver"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOverCapture",
    "nameFull": "onPointerOverCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOut",
    "nameFull": "onPointerOut"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOutCapture",
    "nameFull": "onPointerOutCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onGotPointerCapture",
    "nameFull": "onGotPointerCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onGotPointerCaptureCapture",
    "nameFull": "onGotPointerCaptureCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLostPointerCapture",
    "nameFull": "onLostPointerCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLostPointerCaptureCapture",
    "nameFull": "onLostPointerCaptureCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onScroll",
    "nameFull": "onScroll"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onScrollCapture",
    "nameFull": "onScrollCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWheel",
    "nameFull": "onWheel"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWheelCapture",
    "nameFull": "onWheelCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationStart",
    "nameFull": "onAnimationStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationStartCapture",
    "nameFull": "onAnimationStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationEnd",
    "nameFull": "onAnimationEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationEndCapture",
    "nameFull": "onAnimationEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationIteration",
    "nameFull": "onAnimationIteration"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationIterationCapture",
    "nameFull": "onAnimationIterationCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTransitionEnd",
    "nameFull": "onTransitionEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTransitionEndCapture",
    "nameFull": "onTransitionEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IRenderInputProps",
    "nameFull": "IRenderInputProps"
   },
   "source": "uui-components/src/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "scrollToElement",
    "nameFull": "scrollToElement"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "currentActive",
    "nameFull": "currentActive"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "setRef",
    "nameFull": "setRef"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IScrollSpyApi",
    "nameFull": "IScrollSpyApi"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "elements",
    "nameFull": "elements"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "initialActive",
    "nameFull": "initialActive"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IScrollSpyProps",
    "nameFull": "IScrollSpyProps"
   },
   "source": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "LabeledInputProps",
    "nameFull": "LabeledInputProps"
   },
   "source": "uui-components/src/layout/LabeledInput.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuCustomElementProps",
    "nameFull": "MainMenuCustomElementProps"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuCustomElement.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderBody",
    "nameFull": "renderBody"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuDropdownProps",
    "nameFull": "MainMenuDropdownProps"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "logoUrl",
    "nameFull": "logoUrl"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "logoBgColor",
    "nameFull": "logoBgColor"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "showArrow",
    "nameFull": "showArrow"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onContextMenu",
    "nameFull": "onContextMenu"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "link",
    "nameFull": "link"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onClick",
    "nameFull": "onClick"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuLogoProps",
    "nameFull": "MainMenuLogoProps"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "items",
    "nameFull": "items"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "children",
    "nameFull": "children"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "externalGap",
    "nameFull": "externalGap"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "appLogoUrl",
    "nameFull": "appLogoUrl"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "appLogoBgColor",
    "nameFull": "appLogoBgColor"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "customerLogoUrl",
    "nameFull": "customerLogoUrl"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "customerLogoBgColor",
    "nameFull": "customerLogoBgColor"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "customerLogoWidth",
    "nameFull": "customerLogoWidth"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isTransparent",
    "nameFull": "isTransparent"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderBurger",
    "nameFull": "renderBurger"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "alwaysShowBurger",
    "nameFull": "alwaysShowBurger"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "serverBadge",
    "nameFull": "serverBadge"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "logoLink",
    "nameFull": "logoLink"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "logoHref",
    "nameFull": "logoHref"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "logoWidth",
    "nameFull": "logoWidth"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onLogoClick",
    "nameFull": "onLogoClick"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "customerLogoLink",
    "nameFull": "customerLogoLink"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "customerLogoHref",
    "nameFull": "customerLogoHref"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuDropdown",
    "nameFull": "MainMenuDropdown"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "Burger",
    "nameFull": "Burger"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuProps",
    "nameFull": "MainMenuProps"
   },
   "source": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MonthSelectionProps",
    "nameFull": "MonthSelectionProps"
   },
   "source": "uui-components/src/inputs/DatePicker/MonthSelection.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "NumericInputProps",
    "nameFull": "NumericInputProps"
   },
   "source": "uui-components/src/inputs/NumericInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui-components/src/widgets/Paginator.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "goToNext",
    "nameFull": "goToNext"
   },
   "source": "uui-components/src/widgets/Paginator.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "goToPrev",
    "nameFull": "goToPrev"
   },
   "source": "uui-components/src/widgets/Paginator.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isLast",
    "nameFull": "isLast"
   },
   "source": "uui-components/src/widgets/Paginator.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isFirst",
    "nameFull": "isFirst"
   },
   "source": "uui-components/src/widgets/Paginator.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PaginatorParams",
    "nameFull": "PaginatorParams"
   },
   "source": "uui-components/src/widgets/Paginator.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PaginatorProps",
    "nameFull": "PaginatorProps"
   },
   "source": "uui-components/src/widgets/Paginator.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "dataSourceStateToValue",
    "nameFull": "dataSourceStateToValue"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "applyValueToDataSourceState",
    "nameFull": "applyValueToDataSourceState"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingHelper",
    "nameFull": "PickerBindingHelper<TItem, TId>"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingProps",
    "nameFull": "PickerBindingProps<TItem, TId>"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingValueType",
    "nameFull": "PickerBindingValueType"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onKeyDown",
    "nameFull": "onKeyDown"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderNotFound",
    "nameFull": "renderNotFound"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "showSearch",
    "nameFull": "showSearch"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "fixedBodyPosition",
    "nameFull": "fixedBodyPosition"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBodyBaseProps",
    "nameFull": "PickerBodyBaseProps"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectedDate",
    "nameFull": "selectedDate"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "view",
    "nameFull": "view"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBodyValue",
    "nameFull": "PickerBodyValue<TSelection>"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerInputBaseProps",
    "nameFull": "PickerInputBaseProps<TItem, TId>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerListBaseProps",
    "nameFull": "PickerListBaseProps<TItem, TId>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalArrayProps",
    "nameFull": "PickerModalArrayProps<TId, TItem>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFilter",
    "nameFull": "renderFilter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFooter",
    "nameFull": "renderFooter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disallowClickOutside",
    "nameFull": "disallowClickOutside"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalOptions",
    "nameFull": "PickerModalOptions<TItem, TId>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "initialValue",
    "nameFull": "initialValue"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalScalarProps",
    "nameFull": "PickerModalScalarProps<TId, TItem>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "cancelIcon",
    "nameFull": "cancelIcon"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "dropdownIcon",
    "nameFull": "dropdownIcon"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "autoFocus",
    "nameFull": "autoFocus"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderItem",
    "nameFull": "renderItem"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "getName",
    "nameFull": "getName"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "entityName",
    "nameFull": "entityName"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "maxItems",
    "nameFull": "maxItems"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isSingleLine",
    "nameFull": "isSingleLine"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "pickerMode",
    "nameFull": "pickerMode"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "searchPosition",
    "nameFull": "searchPosition"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onKeyDown",
    "nameFull": "onKeyDown"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "closePickerBody",
    "nameFull": "closePickerBody"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disableSearch",
    "nameFull": "disableSearch"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disableClear",
    "nameFull": "disableClear"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "minCharsToSearch",
    "nameFull": "minCharsToSearch"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selection",
    "nameFull": "selection"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedRowsCount",
    "nameFull": "selectedRowsCount"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerTogglerProps",
    "nameFull": "PickerTogglerProps<TItem, TId>"
   },
   "source": "uui-components/src/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "target",
    "nameFull": "target"
   },
   "source": "uui-components/src/overlays/Portal.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-components/src/overlays/Portal.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PortalProps",
    "nameFull": "PortalProps"
   },
   "source": "uui-components/src/overlays/Portal.tsx"
  },
  {
   "typeName": {
    "name": "top",
    "nameFull": "top"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "left",
    "nameFull": "left"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "clientWidth",
    "nameFull": "clientWidth"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "clientHeight",
    "nameFull": "clientHeight"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "scrollWidth",
    "nameFull": "scrollWidth"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "scrollHeight",
    "nameFull": "scrollHeight"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "scrollLeft",
    "nameFull": "scrollLeft"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "scrollTop",
    "nameFull": "scrollTop"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PositionValues",
    "nameFull": "PositionValues"
   },
   "source": "uui-components/src/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-components/src/layout/RadioGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderName",
    "nameFull": "renderName"
   },
   "source": "uui-components/src/layout/RadioGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/layout/RadioGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioGroupItem",
    "nameFull": "RadioGroupItem<TValue>"
   },
   "source": "uui-components/src/layout/RadioGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioInput",
    "nameFull": "RadioInput"
   },
   "source": "uui-components/src/layout/RadioGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "radioInputProps",
    "nameFull": "radioInputProps"
   },
   "source": "uui-components/src/layout/RadioGroup.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "direction",
    "nameFull": "direction"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioGroupProps",
    "nameFull": "RadioGroupProps<TValue>"
   },
   "source": "uui-components/src/layout/RadioGroup.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderLabel",
    "nameFull": "renderLabel"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "tabIndex",
    "nameFull": "tabIndex"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "activeHandle",
    "nameFull": "activeHandle"
   },
   "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueWidth",
    "nameFull": "valueWidth"
   },
   "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RangeSliderState",
    "nameFull": "RangeSliderState"
   },
   "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "to",
    "nameFull": "to"
   },
   "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RangeSliderValue",
    "nameFull": "RangeSliderValue"
   },
   "source": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "filledStarIcon",
    "nameFull": "filledStarIcon"
   },
   "source": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "emptyStarIcon",
    "nameFull": "emptyStarIcon"
   },
   "source": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "hideTooltip",
    "nameFull": "hideTooltip"
   },
   "source": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "hint",
    "nameFull": "hint"
   },
   "source": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "Tooltip",
    "nameFull": "Tooltip"
   },
   "source": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "to",
    "nameFull": "to"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "step",
    "nameFull": "step"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderRating",
    "nameFull": "renderRating"
   },
   "source": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RatingProps",
    "nameFull": "RatingProps"
   },
   "source": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "htmlContent",
    "nameFull": "htmlContent"
   },
   "source": "uui-components/src/RichTextView.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RichTextViewProps",
    "nameFull": "RichTextViewProps"
   },
   "source": "uui-components/src/RichTextView.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disableScroll",
    "nameFull": "disableScroll"
   },
   "source": "uui-components/src/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "hasTopShadow",
    "nameFull": "hasTopShadow"
   },
   "source": "uui-components/src/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "hasBottomShadow",
    "nameFull": "hasBottomShadow"
   },
   "source": "uui-components/src/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderView",
    "nameFull": "renderView"
   },
   "source": "uui-components/src/layout/ScrollBars.tsx"
  },
  {
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "tabIndex",
    "nameFull": "tabIndex"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "hidden",
    "nameFull": "hidden"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "start",
    "nameFull": "start"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "value",
    "nameFull": "value"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "form",
    "nameFull": "form"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "list",
    "nameFull": "list"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "step",
    "nameFull": "step"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "placeholder",
    "nameFull": "placeholder"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onScroll",
    "nameFull": "onScroll"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "onScrollFrame",
    "nameFull": "onScrollFrame"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "onScrollStart",
    "nameFull": "onScrollStart"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "onScrollStop",
    "nameFull": "onScrollStop"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "onUpdate",
    "nameFull": "onUpdate"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "renderTrackHorizontal",
    "nameFull": "renderTrackHorizontal"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "renderTrackVertical",
    "nameFull": "renderTrackVertical"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "renderThumbHorizontal",
    "nameFull": "renderThumbHorizontal"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "renderThumbVertical",
    "nameFull": "renderThumbVertical"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "tagName",
    "nameFull": "tagName"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "hideTracksWhenNotNeeded",
    "nameFull": "hideTracksWhenNotNeeded"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoHide",
    "nameFull": "autoHide"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoHideTimeout",
    "nameFull": "autoHideTimeout"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoHideDuration",
    "nameFull": "autoHideDuration"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "thumbSize",
    "nameFull": "thumbSize"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "thumbMinSize",
    "nameFull": "thumbMinSize"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "universal",
    "nameFull": "universal"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoHeight",
    "nameFull": "autoHeight"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoHeightMin",
    "nameFull": "autoHeightMin"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoHeightMax",
    "nameFull": "autoHeightMax"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "node_modules/react-custom-scrollbars-2/index.d.ts"
  },
  {
   "typeName": {
    "name": "accept",
    "nameFull": "accept"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "acceptCharset",
    "nameFull": "acceptCharset"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "action",
    "nameFull": "action"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "allowFullScreen",
    "nameFull": "allowFullScreen"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "allowTransparency",
    "nameFull": "allowTransparency"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "alt",
    "nameFull": "alt"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "as",
    "nameFull": "as"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "async",
    "nameFull": "async"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoComplete",
    "nameFull": "autoComplete"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoFocus",
    "nameFull": "autoFocus"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoPlay",
    "nameFull": "autoPlay"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "capture",
    "nameFull": "capture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "cellPadding",
    "nameFull": "cellPadding"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "cellSpacing",
    "nameFull": "cellSpacing"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "charSet",
    "nameFull": "charSet"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "challenge",
    "nameFull": "challenge"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "checked",
    "nameFull": "checked"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "cite",
    "nameFull": "cite"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "classID",
    "nameFull": "classID"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "cols",
    "nameFull": "cols"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "colSpan",
    "nameFull": "colSpan"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "content",
    "nameFull": "content"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "controls",
    "nameFull": "controls"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "coords",
    "nameFull": "coords"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "crossOrigin",
    "nameFull": "crossOrigin"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "data",
    "nameFull": "data"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "dateTime",
    "nameFull": "dateTime"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "default",
    "nameFull": "default"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "defer",
    "nameFull": "defer"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "disabled",
    "nameFull": "disabled"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "download",
    "nameFull": "download"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "encType",
    "nameFull": "encType"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formAction",
    "nameFull": "formAction"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formEncType",
    "nameFull": "formEncType"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formMethod",
    "nameFull": "formMethod"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formNoValidate",
    "nameFull": "formNoValidate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "formTarget",
    "nameFull": "formTarget"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "frameBorder",
    "nameFull": "frameBorder"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "headers",
    "nameFull": "headers"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "high",
    "nameFull": "high"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "href",
    "nameFull": "href"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "hrefLang",
    "nameFull": "hrefLang"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "htmlFor",
    "nameFull": "htmlFor"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "httpEquiv",
    "nameFull": "httpEquiv"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "integrity",
    "nameFull": "integrity"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "keyParams",
    "nameFull": "keyParams"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "keyType",
    "nameFull": "keyType"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "kind",
    "nameFull": "kind"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "label",
    "nameFull": "label"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "loop",
    "nameFull": "loop"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "low",
    "nameFull": "low"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "manifest",
    "nameFull": "manifest"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "marginHeight",
    "nameFull": "marginHeight"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "marginWidth",
    "nameFull": "marginWidth"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "max",
    "nameFull": "max"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "maxLength",
    "nameFull": "maxLength"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "media",
    "nameFull": "media"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "mediaGroup",
    "nameFull": "mediaGroup"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "method",
    "nameFull": "method"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "min",
    "nameFull": "min"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "minLength",
    "nameFull": "minLength"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "multiple",
    "nameFull": "multiple"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "muted",
    "nameFull": "muted"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "noValidate",
    "nameFull": "noValidate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "open",
    "nameFull": "open"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "optimum",
    "nameFull": "optimum"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "pattern",
    "nameFull": "pattern"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "playsInline",
    "nameFull": "playsInline"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "poster",
    "nameFull": "poster"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "preload",
    "nameFull": "preload"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "readOnly",
    "nameFull": "readOnly"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "rel",
    "nameFull": "rel"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "required",
    "nameFull": "required"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "reversed",
    "nameFull": "reversed"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "rows",
    "nameFull": "rows"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "rowSpan",
    "nameFull": "rowSpan"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "sandbox",
    "nameFull": "sandbox"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "scope",
    "nameFull": "scope"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "scoped",
    "nameFull": "scoped"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "scrolling",
    "nameFull": "scrolling"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "seamless",
    "nameFull": "seamless"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "selected",
    "nameFull": "selected"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "shape",
    "nameFull": "shape"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "sizes",
    "nameFull": "sizes"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "span",
    "nameFull": "span"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "src",
    "nameFull": "src"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "srcDoc",
    "nameFull": "srcDoc"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "srcLang",
    "nameFull": "srcLang"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "srcSet",
    "nameFull": "srcSet"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "summary",
    "nameFull": "summary"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "target",
    "nameFull": "target"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "useMap",
    "nameFull": "useMap"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "wmode",
    "nameFull": "wmode"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "wrap",
    "nameFull": "wrap"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "defaultChecked",
    "nameFull": "defaultChecked"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "defaultValue",
    "nameFull": "defaultValue"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "suppressContentEditableWarning",
    "nameFull": "suppressContentEditableWarning"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "suppressHydrationWarning",
    "nameFull": "suppressHydrationWarning"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "accessKey",
    "nameFull": "accessKey"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "className",
    "nameFull": "className"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "contentEditable",
    "nameFull": "contentEditable"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "contextMenu",
    "nameFull": "contextMenu"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "dir",
    "nameFull": "dir"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "draggable",
    "nameFull": "draggable"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "lang",
    "nameFull": "lang"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "nonce",
    "nameFull": "nonce"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "slot",
    "nameFull": "slot"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "spellCheck",
    "nameFull": "spellCheck"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "title",
    "nameFull": "title"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "translate",
    "nameFull": "translate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "radioGroup",
    "nameFull": "radioGroup"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "role",
    "nameFull": "role"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "about",
    "nameFull": "about"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "datatype",
    "nameFull": "datatype"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "inlist",
    "nameFull": "inlist"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "prefix",
    "nameFull": "prefix"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "property",
    "nameFull": "property"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "resource",
    "nameFull": "resource"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "typeof",
    "nameFull": "typeof"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "vocab",
    "nameFull": "vocab"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoCapitalize",
    "nameFull": "autoCapitalize"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoCorrect",
    "nameFull": "autoCorrect"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "autoSave",
    "nameFull": "autoSave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemProp",
    "nameFull": "itemProp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemScope",
    "nameFull": "itemScope"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemType",
    "nameFull": "itemType"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemID",
    "nameFull": "itemID"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "itemRef",
    "nameFull": "itemRef"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "results",
    "nameFull": "results"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "security",
    "nameFull": "security"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "unselectable",
    "nameFull": "unselectable"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "dangerouslySetInnerHTML",
    "nameFull": "dangerouslySetInnerHTML"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCopy",
    "nameFull": "onCopy"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCopyCapture",
    "nameFull": "onCopyCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCut",
    "nameFull": "onCut"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCutCapture",
    "nameFull": "onCutCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPaste",
    "nameFull": "onPaste"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPasteCapture",
    "nameFull": "onPasteCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionEnd",
    "nameFull": "onCompositionEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionEndCapture",
    "nameFull": "onCompositionEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionStart",
    "nameFull": "onCompositionStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionStartCapture",
    "nameFull": "onCompositionStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionUpdate",
    "nameFull": "onCompositionUpdate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCompositionUpdateCapture",
    "nameFull": "onCompositionUpdateCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onFocus",
    "nameFull": "onFocus"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onFocusCapture",
    "nameFull": "onFocusCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBlur",
    "nameFull": "onBlur"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBlurCapture",
    "nameFull": "onBlurCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onChange",
    "nameFull": "onChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onChangeCapture",
    "nameFull": "onChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBeforeInput",
    "nameFull": "onBeforeInput"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onBeforeInputCapture",
    "nameFull": "onBeforeInputCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInput",
    "nameFull": "onInput"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInputCapture",
    "nameFull": "onInputCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onReset",
    "nameFull": "onReset"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onResetCapture",
    "nameFull": "onResetCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSubmit",
    "nameFull": "onSubmit"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSubmitCapture",
    "nameFull": "onSubmitCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInvalid",
    "nameFull": "onInvalid"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onInvalidCapture",
    "nameFull": "onInvalidCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoad",
    "nameFull": "onLoad"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadCapture",
    "nameFull": "onLoadCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onError",
    "nameFull": "onError"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onErrorCapture",
    "nameFull": "onErrorCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyDown",
    "nameFull": "onKeyDown"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyDownCapture",
    "nameFull": "onKeyDownCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyUp",
    "nameFull": "onKeyUp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onKeyUpCapture",
    "nameFull": "onKeyUpCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAbort",
    "nameFull": "onAbort"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAbortCapture",
    "nameFull": "onAbortCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlay",
    "nameFull": "onCanPlay"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlayCapture",
    "nameFull": "onCanPlayCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlayThrough",
    "nameFull": "onCanPlayThrough"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onCanPlayThroughCapture",
    "nameFull": "onCanPlayThroughCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDurationChange",
    "nameFull": "onDurationChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDurationChangeCapture",
    "nameFull": "onDurationChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEmptied",
    "nameFull": "onEmptied"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEmptiedCapture",
    "nameFull": "onEmptiedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEncrypted",
    "nameFull": "onEncrypted"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEncryptedCapture",
    "nameFull": "onEncryptedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEnded",
    "nameFull": "onEnded"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onEndedCapture",
    "nameFull": "onEndedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedData",
    "nameFull": "onLoadedData"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedDataCapture",
    "nameFull": "onLoadedDataCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedMetadata",
    "nameFull": "onLoadedMetadata"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadedMetadataCapture",
    "nameFull": "onLoadedMetadataCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadStart",
    "nameFull": "onLoadStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLoadStartCapture",
    "nameFull": "onLoadStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPause",
    "nameFull": "onPause"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPauseCapture",
    "nameFull": "onPauseCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlay",
    "nameFull": "onPlay"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlayCapture",
    "nameFull": "onPlayCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlaying",
    "nameFull": "onPlaying"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPlayingCapture",
    "nameFull": "onPlayingCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onProgress",
    "nameFull": "onProgress"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onProgressCapture",
    "nameFull": "onProgressCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onRateChange",
    "nameFull": "onRateChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onRateChangeCapture",
    "nameFull": "onRateChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onResize",
    "nameFull": "onResize"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onResizeCapture",
    "nameFull": "onResizeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeeked",
    "nameFull": "onSeeked"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeekedCapture",
    "nameFull": "onSeekedCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeeking",
    "nameFull": "onSeeking"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSeekingCapture",
    "nameFull": "onSeekingCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onStalled",
    "nameFull": "onStalled"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onStalledCapture",
    "nameFull": "onStalledCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSuspend",
    "nameFull": "onSuspend"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSuspendCapture",
    "nameFull": "onSuspendCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTimeUpdate",
    "nameFull": "onTimeUpdate"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTimeUpdateCapture",
    "nameFull": "onTimeUpdateCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onVolumeChange",
    "nameFull": "onVolumeChange"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onVolumeChangeCapture",
    "nameFull": "onVolumeChangeCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWaiting",
    "nameFull": "onWaiting"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWaitingCapture",
    "nameFull": "onWaitingCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAuxClick",
    "nameFull": "onAuxClick"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAuxClickCapture",
    "nameFull": "onAuxClickCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onClick",
    "nameFull": "onClick"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onClickCapture",
    "nameFull": "onClickCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onContextMenu",
    "nameFull": "onContextMenu"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onContextMenuCapture",
    "nameFull": "onContextMenuCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDoubleClick",
    "nameFull": "onDoubleClick"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDoubleClickCapture",
    "nameFull": "onDoubleClickCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDrag",
    "nameFull": "onDrag"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragCapture",
    "nameFull": "onDragCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEnd",
    "nameFull": "onDragEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEndCapture",
    "nameFull": "onDragEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEnter",
    "nameFull": "onDragEnter"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragEnterCapture",
    "nameFull": "onDragEnterCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragExit",
    "nameFull": "onDragExit"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragExitCapture",
    "nameFull": "onDragExitCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragLeave",
    "nameFull": "onDragLeave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragLeaveCapture",
    "nameFull": "onDragLeaveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragOver",
    "nameFull": "onDragOver"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragOverCapture",
    "nameFull": "onDragOverCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragStart",
    "nameFull": "onDragStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDragStartCapture",
    "nameFull": "onDragStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDrop",
    "nameFull": "onDrop"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onDropCapture",
    "nameFull": "onDropCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseDown",
    "nameFull": "onMouseDown"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseDownCapture",
    "nameFull": "onMouseDownCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseEnter",
    "nameFull": "onMouseEnter"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseLeave",
    "nameFull": "onMouseLeave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseMove",
    "nameFull": "onMouseMove"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseMoveCapture",
    "nameFull": "onMouseMoveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOut",
    "nameFull": "onMouseOut"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOutCapture",
    "nameFull": "onMouseOutCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOver",
    "nameFull": "onMouseOver"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseOverCapture",
    "nameFull": "onMouseOverCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseUp",
    "nameFull": "onMouseUp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onMouseUpCapture",
    "nameFull": "onMouseUpCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSelect",
    "nameFull": "onSelect"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onSelectCapture",
    "nameFull": "onSelectCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchCancel",
    "nameFull": "onTouchCancel"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchCancelCapture",
    "nameFull": "onTouchCancelCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchEnd",
    "nameFull": "onTouchEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchEndCapture",
    "nameFull": "onTouchEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchMove",
    "nameFull": "onTouchMove"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchMoveCapture",
    "nameFull": "onTouchMoveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchStart",
    "nameFull": "onTouchStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTouchStartCapture",
    "nameFull": "onTouchStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerDown",
    "nameFull": "onPointerDown"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerDownCapture",
    "nameFull": "onPointerDownCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerMove",
    "nameFull": "onPointerMove"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerMoveCapture",
    "nameFull": "onPointerMoveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerUp",
    "nameFull": "onPointerUp"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerUpCapture",
    "nameFull": "onPointerUpCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerCancel",
    "nameFull": "onPointerCancel"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerCancelCapture",
    "nameFull": "onPointerCancelCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerEnter",
    "nameFull": "onPointerEnter"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerEnterCapture",
    "nameFull": "onPointerEnterCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerLeave",
    "nameFull": "onPointerLeave"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerLeaveCapture",
    "nameFull": "onPointerLeaveCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOver",
    "nameFull": "onPointerOver"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOverCapture",
    "nameFull": "onPointerOverCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOut",
    "nameFull": "onPointerOut"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onPointerOutCapture",
    "nameFull": "onPointerOutCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onGotPointerCapture",
    "nameFull": "onGotPointerCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onGotPointerCaptureCapture",
    "nameFull": "onGotPointerCaptureCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLostPointerCapture",
    "nameFull": "onLostPointerCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onLostPointerCaptureCapture",
    "nameFull": "onLostPointerCaptureCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onScrollCapture",
    "nameFull": "onScrollCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWheel",
    "nameFull": "onWheel"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onWheelCapture",
    "nameFull": "onWheelCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationStart",
    "nameFull": "onAnimationStart"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationStartCapture",
    "nameFull": "onAnimationStartCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationEnd",
    "nameFull": "onAnimationEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationEndCapture",
    "nameFull": "onAnimationEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationIteration",
    "nameFull": "onAnimationIteration"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onAnimationIterationCapture",
    "nameFull": "onAnimationIterationCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTransitionEnd",
    "nameFull": "onTransitionEnd"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "typeName": {
    "name": "onTransitionEndCapture",
    "nameFull": "onTransitionEndCapture"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ScrollbarProps",
    "nameFull": "ScrollbarProps"
   },
   "source": "uui-components/src/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ScrollbarsApi",
    "nameFull": "ScrollbarsApi"
   },
   "source": "uui-components/src/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "startColumnIndex",
    "nameFull": "startColumnIndex"
   },
   "source": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "startRowIndex",
    "nameFull": "startRowIndex"
   },
   "source": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "endColumnIndex",
    "nameFull": "endColumnIndex"
   },
   "source": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "endRowIndex",
    "nameFull": "endRowIndex"
   },
   "source": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isCopying",
    "nameFull": "isCopying"
   },
   "source": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionRange",
    "nameFull": "selectionRange"
   },
   "source": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "getCellSelectionInfo",
    "nameFull": "getCellSelectionInfo"
   },
   "source": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SelectionContextState",
    "nameFull": "SelectionContextState<TItem, TId, TFilter>"
   },
   "source": "uui-components/src/table/tableCellsSelection/DataTableSelectionContext.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SinglePickerProps",
    "nameFull": "SinglePickerProps<TId, TItem>"
   },
   "source": "uui-components/src/pickers/bindingHelpers.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SliderBaseProps",
    "nameFull": "SliderBaseProps<TSelection>"
   },
   "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueWidth",
    "nameFull": "valueWidth"
   },
   "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SliderBaseState",
    "nameFull": "SliderBaseState"
   },
   "source": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "closeIcon",
    "nameFull": "closeIcon"
   },
   "source": "uui-components/src/overlays/Snackbar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "notifications",
    "nameFull": "notifications"
   },
   "source": "uui-components/src/overlays/Snackbar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SnackbarProps",
    "nameFull": "SnackbarProps"
   },
   "source": "uui-components/src/overlays/Snackbar.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SpinnerProps",
    "nameFull": "SpinnerProps"
   },
   "source": "uui-components/src/widgets/Spinner.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/Switch.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SwitchProps",
    "nameFull": "SwitchProps"
   },
   "source": "uui-components/src/inputs/Switch.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextAreaProps",
    "nameFull": "TextAreaProps"
   },
   "source": "uui-components/src/inputs/TextArea.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextInputProps",
    "nameFull": "TextInputProps"
   },
   "source": "uui-components/src/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "source": "uui-components/src/Text.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "minutesStep",
    "nameFull": "minutesStep"
   },
   "source": "uui-components/src/inputs/TimePickerBody.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "addIcon",
    "nameFull": "addIcon"
   },
   "source": "uui-components/src/inputs/TimePickerBody.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "subtractIcon",
    "nameFull": "subtractIcon"
   },
   "source": "uui-components/src/inputs/TimePickerBody.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "format",
    "nameFull": "format"
   },
   "source": "uui-components/src/inputs/TimePickerBody.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TimePickerBodyProps",
    "nameFull": "TimePickerBodyProps"
   },
   "source": "uui-components/src/inputs/TimePickerBody.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "placement",
    "nameFull": "placement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "modifiers",
    "nameFull": "modifiers"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeDelay",
    "nameFull": "closeDelay"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnMouseLeave",
    "nameFull": "closeOnMouseLeave"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "boundaryElement",
    "nameFull": "boundaryElement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeBodyOnTogglerHidden",
    "nameFull": "closeBodyOnTogglerHidden"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "source": "uui-components/src/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-components/src/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TooltipState",
    "nameFull": "TooltipState"
   },
   "source": "uui-components/src/overlays/Tooltip.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "data",
    "nameFull": "data"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "parentId",
    "nameFull": "parentId"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TreeListItem",
    "nameFull": "TreeListItem"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderRow",
    "nameFull": "renderRow"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TreeProps",
    "nameFull": "TreeProps<TItem>"
   },
   "source": "uui-components/src/layout/Tree.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "toggleModalOpening",
    "nameFull": "toggleModalOpening"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "shouldShowBody",
    "nameFull": "shouldShowBody"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerInputProps",
    "nameFull": "UsePickerInputProps<TItem, TId, TProps>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerListProps",
    "nameFull": "UsePickerListProps<TItem, TId, TProps>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "initialValue",
    "nameFull": "initialValue"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFilter",
    "nameFull": "renderFilter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFooter",
    "nameFull": "renderFooter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disallowClickOutside",
    "nameFull": "disallowClickOutside"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerModalProps",
    "nameFull": "UsePickerModalProps<TItem, TId>"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ViewType",
    "nameFull": "ViewType"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "rowsCount",
    "nameFull": "rowsCount"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "role",
    "nameFull": "role"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onScroll",
    "nameFull": "onScroll"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "rowsSelector",
    "nameFull": "rowsSelector"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disableScroll",
    "nameFull": "disableScroll"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "rows",
    "nameFull": "rows"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderRows",
    "nameFull": "renderRows"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListProps",
    "nameFull": "VirtualListProps<List, ScrollContainer>"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "estimatedHeight",
    "nameFull": "estimatedHeight"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "offsetY",
    "nameFull": "offsetY"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "verticalTop",
    "nameFull": "verticalTop"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "verticalBottom",
    "nameFull": "verticalBottom"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "horizontalLeft",
    "nameFull": "horizontalLeft"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "horizontalRight",
    "nameFull": "horizontalRight"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "scrollShadows",
    "nameFull": "scrollShadows"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListRenderRowsParams",
    "nameFull": "VirtualListRenderRowsParams<List>"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "YearSelectionProps",
    "nameFull": "YearSelectionProps"
   },
   "source": "uui-components/src/inputs/DatePicker/YearSelection.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/layout/Accordion.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/layout/Accordion.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "AccordionMods",
    "nameFull": "AccordionMods"
   },
   "source": "uui/components/layout/Accordion.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "source": "uui/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeColor",
    "nameFull": "BadgeColor"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeFill",
    "nameFull": "BadgeFill"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeSize",
    "nameFull": "BadgeSize"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "indentLevel",
    "nameFull": "indentLevel"
   },
   "source": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerButtonMods",
    "nameFull": "BurgerButtonMods"
   },
   "source": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "caption",
    "nameFull": "caption"
   },
   "source": "uui/components/navigation/MainMenu/Burger/BurgerGroupHeader.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerGroupHeaderProps",
    "nameFull": "BurgerGroupHeaderProps"
   },
   "source": "uui/components/navigation/MainMenu/Burger/BurgerGroupHeader.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerMods",
    "nameFull": "BurgerMods"
   },
   "source": "uui/components/navigation/MainMenu/Burger/Burger.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerSearchProps",
    "nameFull": "BurgerSearchProps"
   },
   "source": "uui/components/navigation/MainMenu/Burger/BurgerSearch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonColor",
    "nameFull": "ButtonColor"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonMode",
    "nameFull": "ButtonMode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonSemanticColor",
    "nameFull": "ButtonSemanticColor"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "CheckboxMods",
    "nameFull": "CheckboxMods"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderLabel",
    "nameFull": "renderLabel"
   },
   "source": "uui-components/src/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "CheckboxProps",
    "nameFull": "CheckboxProps"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "columnsConfig",
    "nameFull": "columnsConfig"
   },
   "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "defaultConfig",
    "nameFull": "defaultConfig"
   },
   "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderItem",
    "nameFull": "renderItem"
   },
   "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "getSearchFields",
    "nameFull": "getSearchFields"
   },
   "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ColumnsConfigurationModalProps",
    "nameFull": "ColumnsConfigurationModalProps<TItem, TId, TFilter>"
   },
   "source": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "caption",
    "nameFull": "caption"
   },
   "source": "uui/components/overlays/ConfirmationModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "bodyContent",
    "nameFull": "bodyContent"
   },
   "source": "uui/components/overlays/ConfirmationModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "hideCancelButton",
    "nameFull": "hideCancelButton"
   },
   "source": "uui/components/overlays/ConfirmationModal.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ConfirmationModalWindowProps",
    "nameFull": "ConfirmationModalWindowProps"
   },
   "source": "uui/components/overlays/ConfirmationModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "maxHeight",
    "nameFull": "maxHeight"
   },
   "source": "uui/components/pickers/DataPickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "editMode",
    "nameFull": "editMode"
   },
   "source": "uui/components/pickers/DataPickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "searchSize",
    "nameFull": "searchSize"
   },
   "source": "uui/components/pickers/DataPickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui/components/pickers/DataPickerBody.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "onKeyDown",
    "nameFull": "onKeyDown"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderNotFound",
    "nameFull": "renderNotFound"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "showSearch",
    "nameFull": "showSearch"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "fixedBodyPosition",
    "nameFull": "fixedBodyPosition"
   },
   "source": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataPickerBodyProps",
    "nameFull": "DataPickerBodyProps"
   },
   "source": "uui/components/pickers/DataPickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderItem",
    "nameFull": "renderItem"
   },
   "source": "uui/components/pickers/DataPickerRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/pickers/DataPickerRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/pickers/DataPickerRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "borderBottom",
    "nameFull": "borderBottom"
   },
   "source": "uui/components/pickers/DataPickerRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "alignActions",
    "nameFull": "alignActions"
   },
   "source": "uui/components/pickers/DataPickerRow.tsx"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataPickerRowProps",
    "nameFull": "DataPickerRowProps<TItem, TId>"
   },
   "source": "uui/components/pickers/DataPickerRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderRow",
    "nameFull": "renderRow"
   },
   "source": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "headerRef",
    "nameFull": "headerRef"
   },
   "source": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "estimatedHeight",
    "nameFull": "estimatedHeight"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "offsetY",
    "nameFull": "offsetY"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "verticalTop",
    "nameFull": "verticalTop"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "verticalBottom",
    "nameFull": "verticalBottom"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "horizontalLeft",
    "nameFull": "horizontalLeft"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "horizontalRight",
    "nameFull": "horizontalRight"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "scrollShadows",
    "nameFull": "scrollShadows"
   },
   "source": "uui-components/src/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataRowsContainerProps",
    "nameFull": "DataRowsContainerProps<TItem, TId, List>"
   },
   "source": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "border",
    "nameFull": "border"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "alignActions",
    "nameFull": "alignActions"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableCellMods",
    "nameFull": "DataTableCellMods"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "textCase",
    "nameFull": "textCase"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableHeaderCellMods",
    "nameFull": "DataTableHeaderCellMods"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "textCase",
    "nameFull": "textCase"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableHeaderRowMods",
    "nameFull": "DataTableHeaderRowMods"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "border",
    "nameFull": "border"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "headerTextCase",
    "nameFull": "headerTextCase"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableMods",
    "nameFull": "DataTableMods"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "getRows",
    "nameFull": "getRows"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderRow",
    "nameFull": "renderRow"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderNoResultsBlock",
    "nameFull": "renderNoResultsBlock"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "onScroll",
    "nameFull": "onScroll"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "showColumnsConfig",
    "nameFull": "showColumnsConfig"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "filters",
    "nameFull": "filters"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "onCopy",
    "nameFull": "onCopy"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderColumnsConfigurationModal",
    "nameFull": "renderColumnsConfigurationModal"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectAll",
    "nameFull": "selectAll"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsReordering",
    "nameFull": "allowColumnsReordering"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "allowColumnsResizing",
    "nameFull": "allowColumnsResizing"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableProps",
    "nameFull": "DataTableProps<TItem, TId, TFilter>"
   },
   "source": "uui/components/tables/DataTable.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "borderBottom",
    "nameFull": "borderBottom"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "alignActions",
    "nameFull": "alignActions"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableRowMods",
    "nameFull": "DataTableRowMods"
   },
   "source": "uui/components/tables/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "getDayCX",
    "nameFull": "getDayCX"
   },
   "source": "uui/components/datePickers/DatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui/components/datePickers/DatePickerBody.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectedDate",
    "nameFull": "selectedDate"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "view",
    "nameFull": "view"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "value",
    "nameFull": "value"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "setSelectedDate",
    "nameFull": "setSelectedDate"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "setDisplayedDateAndView",
    "nameFull": "setDisplayedDateAndView"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "changeIsOpen",
    "nameFull": "changeIsOpen"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "presets",
    "nameFull": "presets"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderDay",
    "nameFull": "renderDay"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DatePickerBodyProps",
    "nameFull": "DatePickerBodyProps"
   },
   "source": "uui/components/datePickers/DatePickerBody.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "iconPosition",
    "nameFull": "iconPosition"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onBlur",
    "nameFull": "onBlur"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "bodyCx",
    "nameFull": "bodyCx"
   },
   "source": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DatePickerProps",
    "nameFull": "DatePickerProps"
   },
   "source": "uui/components/datePickers/DatePicker.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "actions",
    "nameFull": "actions"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSuccess",
    "nameFull": "onSuccess"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearTimer",
    "nameFull": "clearTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "refreshTimer",
    "nameFull": "refreshTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DefaultNotificationProps",
    "nameFull": "DefaultNotificationProps"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "vPadding",
    "nameFull": "vPadding"
   },
   "source": "uui/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "source": "uui/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "maxWidth",
    "nameFull": "maxWidth"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "showArrow",
    "nameFull": "showArrow"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerWidth",
    "nameFull": "togglerWidth"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerHeight",
    "nameFull": "togglerHeight"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "arrowProps",
    "nameFull": "arrowProps"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "vPadding",
    "nameFull": "vPadding"
   },
   "source": "uui/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropdownContainerProps",
    "nameFull": "DropdownContainerProps"
   },
   "source": "uui/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "enableBlocker",
    "nameFull": "enableBlocker"
   },
   "source": "uui/components/dnd/DropMarker.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onTouchStart",
    "nameFull": "onTouchStart"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerDown",
    "nameFull": "onPointerDown"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerEnter",
    "nameFull": "onPointerEnter"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerMove",
    "nameFull": "onPointerMove"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerLeave",
    "nameFull": "onPointerLeave"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onPointerUp",
    "nameFull": "onPointerUp"
   },
   "source": "uui-core/src/types/dnd.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropMarkerProps",
    "nameFull": "DropMarkerProps"
   },
   "source": "uui/components/dnd/DropMarker.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "cx",
    "nameFull": "cx"
   },
   "source": "uui/components/fileUpload/DropSpot.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "infoText",
    "nameFull": "infoText"
   },
   "source": "uui/components/fileUpload/DropSpot.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "onUploadFiles",
    "nameFull": "onUploadFiles"
   },
   "source": "uui/components/fileUpload/DropSpot.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "accept",
    "nameFull": "accept"
   },
   "source": "uui/components/fileUpload/DropSpot.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "single",
    "nameFull": "single"
   },
   "source": "uui/components/fileUpload/DropSpot.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropSpotProps",
    "nameFull": "DropSpotProps"
   },
   "source": "uui/components/fileUpload/DropSpot.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "EpamBadgeSemanticColor",
    "nameFull": "EpamBadgeSemanticColor"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "progress",
    "nameFull": "progress"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "abortXHR",
    "nameFull": "abortXHR"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "path",
    "nameFull": "path"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "extension",
    "nameFull": "extension"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "error",
    "nameFull": "error"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "FileCardItem",
    "nameFull": "FileCardItem"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "progress",
    "nameFull": "progress"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "abortXHR",
    "nameFull": "abortXHR"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "path",
    "nameFull": "path"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "extension",
    "nameFull": "extension"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "error",
    "nameFull": "error"
   },
   "source": "uui-core/src/services/ApiContext.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "file",
    "nameFull": "file"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "FileCardProps",
    "nameFull": "FileCardProps"
   },
   "source": "uui/components/fileUpload/FileCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnsConfig",
    "nameFull": "columnsConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filtersConfig",
    "nameFull": "filtersConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "presetId",
    "nameFull": "presetId"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "viewState",
    "nameFull": "viewState"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "checked",
    "nameFull": "checked"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "folded",
    "nameFull": "folded"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedId",
    "nameFull": "selectedId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "focusedIndex",
    "nameFull": "focusedIndex"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "page",
    "nameFull": "page"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pageSize",
    "nameFull": "pageSize"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "tableState",
    "nameFull": "tableState"
   },
   "source": "uui/components/filters/FiltersPanel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "setTableState",
    "nameFull": "setTableState"
   },
   "source": "uui/components/filters/FiltersPanel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/filters/FiltersPanel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "FiltersPanelProps",
    "nameFull": "FiltersPanelProps<TFilter>"
   },
   "source": "uui/components/filters/FiltersPanel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "FlexCellMods",
    "nameFull": "FlexCellMods"
   },
   "source": "uui/components/layout/FlexItems/FlexCell.tsx"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "FlexRowProps",
    "nameFull": "FlexRowProps"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "GlobalMenuProps",
    "nameFull": "GlobalMenuProps"
   },
   "source": "uui/components/navigation/MainMenu/GlobalMenu.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui/components/pickers/highlight.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "to",
    "nameFull": "to"
   },
   "source": "uui/components/pickers/highlight.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "isHighlighted",
    "nameFull": "isHighlighted"
   },
   "source": "uui/components/pickers/highlight.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "HighlightRange",
    "nameFull": "HighlightRange"
   },
   "source": "uui/components/pickers/highlight.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "source": "uui/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "source": "uui/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconColor",
    "nameFull": "IconColor"
   },
   "source": "uui/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "closeOnKey",
    "nameFull": "closeOnKey"
   },
   "source": "uui/components/overlays/DropdownMenu.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerWidth",
    "nameFull": "togglerWidth"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "togglerHeight",
    "nameFull": "togglerHeight"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isOpen",
    "nameFull": "isOpen"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "arrowProps",
    "nameFull": "arrowProps"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "IDropdownMenuContainer",
    "nameFull": "IDropdownMenuContainer"
   },
   "source": "uui/components/overlays/DropdownMenu.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "isSelected",
    "nameFull": "isSelected"
   },
   "source": "uui/components/overlays/DropdownMenu.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui/components/overlays/DropdownMenu.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "indent",
    "nameFull": "indent"
   },
   "source": "uui/components/overlays/DropdownMenu.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "IDropdownMenuItemProps",
    "nameFull": "IDropdownMenuItemProps"
   },
   "source": "uui/components/overlays/DropdownMenu.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "IHasEditMode",
    "nameFull": "IHasEditMode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/IndeterminateBar.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "IndeterminateBarMods",
    "nameFull": "IndeterminateBarMods"
   },
   "source": "uui/components/widgets/IndeterminateBar.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "InputType",
    "nameFull": "InputType"
   },
   "source": "uui/components/datePickers/RangeDatePicker.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "wordsCount",
    "nameFull": "wordsCount"
   },
   "source": "uui/components/typography/TextPlaceholder.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "isNotAnimated",
    "nameFull": "isNotAnimated"
   },
   "source": "uui/components/typography/TextPlaceholder.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ITextPlaceholderProps",
    "nameFull": "ITextPlaceholderProps"
   },
   "source": "uui/components/typography/TextPlaceholder.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "LabeledInputMods",
    "nameFull": "LabeledInputMods"
   },
   "source": "uui/components/layout/LabeledInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonColorType",
    "nameFull": "LinkButtonColorType"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "avatarUrl",
    "nameFull": "avatarUrl"
   },
   "source": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuAvatarProps",
    "nameFull": "MainMenuAvatarProps"
   },
   "source": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui/components/navigation/MainMenu/MainMenuButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuButtonMods",
    "nameFull": "MainMenuButtonMods"
   },
   "source": "uui/components/navigation/MainMenu/MainMenuButton.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuIconProps",
    "nameFull": "MainMenuIconProps"
   },
   "source": "uui/components/navigation/MainMenu/MainMenuIcon.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuMods",
    "nameFull": "MainMenuMods"
   },
   "source": "uui/components/navigation/MainMenu/MainMenu.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "estimatedWidth",
    "nameFull": "estimatedWidth"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "showInBurgerMenu",
    "nameFull": "showInBurgerMenu"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapseToMore",
    "nameFull": "collapseToMore"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "collapsedContainer",
    "nameFull": "collapsedContainer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuSearchProps",
    "nameFull": "MainMenuSearchProps"
   },
   "source": "uui/components/navigation/MainMenu/MainMenuSearch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "borderBottom",
    "nameFull": "borderBottom"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "columnGap",
    "nameFull": "columnGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "rowGap",
    "nameFull": "rowGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "spacing",
    "nameFull": "spacing"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "topShadow",
    "nameFull": "topShadow"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "vPadding",
    "nameFull": "vPadding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "borderTop",
    "nameFull": "borderTop"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalFooterProps",
    "nameFull": "ModalFooterProps"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "borderBottom",
    "nameFull": "borderBottom"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "columnGap",
    "nameFull": "columnGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "rowGap",
    "nameFull": "rowGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "spacing",
    "nameFull": "spacing"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "topShadow",
    "nameFull": "topShadow"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "vPadding",
    "nameFull": "vPadding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Modals.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalHeaderProps",
    "nameFull": "ModalHeaderProps"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "style",
    "nameFull": "style"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalWindowProps",
    "nameFull": "ModalWindowProps"
   },
   "source": "uui/components/overlays/Modals.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "source": "uui/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "actions",
    "nameFull": "actions"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSuccess",
    "nameFull": "onSuccess"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearTimer",
    "nameFull": "clearTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "refreshTimer",
    "nameFull": "refreshTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "NumericInputMods",
    "nameFull": "NumericInputMods"
   },
   "source": "uui/components/inputs/NumericInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "NumericInputProps",
    "nameFull": "NumericInputProps"
   },
   "source": "uui/components/inputs/NumericInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "shadow",
    "nameFull": "shadow"
   },
   "source": "uui/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "uui/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "source": "uui/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerInputProps",
    "nameFull": "PickerInputProps"
   },
   "source": "uui/components/pickers/PickerInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "avatarUrl",
    "nameFull": "avatarUrl"
   },
   "source": "uui/components/pickers/PickerItem.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui/components/pickers/PickerItem.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "title",
    "nameFull": "title"
   },
   "source": "uui/components/pickers/PickerItem.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "subtitle",
    "nameFull": "subtitle"
   },
   "source": "uui/components/pickers/PickerItem.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "dataSourceState",
    "nameFull": "dataSourceState"
   },
   "source": "uui/components/pickers/PickerItem.tsx"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerItemProps",
    "nameFull": "PickerItemProps<TItem, TId>"
   },
   "source": "uui/components/pickers/PickerItem.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "getName",
    "nameFull": "getName"
   },
   "source": "uui/components/pickers/PickerListItem.tsx"
  },
  {
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "node_modules/@types/react/index.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pin",
    "nameFull": "pin"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isUnknown",
    "nameFull": "isUnknown"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isPinned",
    "nameFull": "isPinned"
   },
   "source": "uui-core/src/types/dataRows.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerListItemProps",
    "nameFull": "PickerListItemProps<TItem, TId>"
   },
   "source": "uui/components/pickers/PickerListItem.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFilter",
    "nameFull": "renderFilter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFooter",
    "nameFull": "renderFooter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disallowClickOutside",
    "nameFull": "disallowClickOutside"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderModalToggler",
    "nameFull": "renderModalToggler"
   },
   "source": "uui/components/pickers/PickerList.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerListProps",
    "nameFull": "PickerListProps<TItem, TId>"
   },
   "source": "uui/components/pickers/PickerList.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getId",
    "nameFull": "getId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getById",
    "nameFull": "getById"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "setItem",
    "nameFull": "setItem"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "getView",
    "nameFull": "getView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "useView",
    "nameFull": "useView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "unsubscribeView",
    "nameFull": "unsubscribeView"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "selectionMode",
    "nameFull": "selectionMode"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "valueType",
    "nameFull": "valueType"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "initialValue",
    "nameFull": "initialValue"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "isActive",
    "nameFull": "isActive"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "zIndex",
    "nameFull": "zIndex"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "success",
    "nameFull": "success"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "abort",
    "nameFull": "abort"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFilter",
    "nameFull": "renderFilter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderFooter",
    "nameFull": "renderFooter"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "disallowClickOutside",
    "nameFull": "disallowClickOutside"
   },
   "source": "uui-components/src/pickers/hooks/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerModalProps",
    "nameFull": "PickerModalProps<TItem, TId>"
   },
   "source": "uui/components/pickers/PickerModal.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "pickerPart",
    "nameFull": "pickerPart"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerTogglerMods",
    "nameFull": "PickerTogglerMods"
   },
   "source": "uui/components/pickers/PickerToggler.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "columnsConfig",
    "nameFull": "columnsConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filtersConfig",
    "nameFull": "filtersConfig"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "presetId",
    "nameFull": "presetId"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "viewState",
    "nameFull": "viewState"
   },
   "source": "uui-core/src/types/tables.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "search",
    "nameFull": "search"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "checked",
    "nameFull": "checked"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "folded",
    "nameFull": "folded"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "sorting",
    "nameFull": "sorting"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "selectedId",
    "nameFull": "selectedId"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "focusedIndex",
    "nameFull": "focusedIndex"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "page",
    "nameFull": "page"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "pageSize",
    "nameFull": "pageSize"
   },
   "source": "uui-core/src/types/dataSources.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "tableState",
    "nameFull": "tableState"
   },
   "source": "uui/components/filters/PresetPanel/PresetsPanel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "PresetsPanelProps",
    "nameFull": "PresetsPanelProps"
   },
   "source": "uui/components/filters/PresetPanel/PresetsPanel.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/ProgressBar.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "striped",
    "nameFull": "striped"
   },
   "source": "uui/components/widgets/ProgressBar.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "ProgressBarMods",
    "nameFull": "ProgressBarMods"
   },
   "source": "uui/components/widgets/ProgressBar.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RadioInputMods",
    "nameFull": "RadioInputMods"
   },
   "source": "uui/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderLabel",
    "nameFull": "renderLabel"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "tabIndex",
    "nameFull": "tabIndex"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "source": "uui/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "focusPart",
    "nameFull": "focusPart"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderFooter",
    "nameFull": "renderFooter"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "renderHeader",
    "nameFull": "renderHeader"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "filter",
    "nameFull": "filter"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "changeIsOpen",
    "nameFull": "changeIsOpen"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "presets",
    "nameFull": "presets"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderDay",
    "nameFull": "renderDay"
   },
   "source": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerBodyProps",
    "nameFull": "RangeDatePickerBodyProps<T>"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "getPlaceholder",
    "nameFull": "getPlaceholder"
   },
   "source": "uui/components/datePickers/RangeDatePicker.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "bodyCx",
    "nameFull": "bodyCx"
   },
   "source": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerProps",
    "nameFull": "RangeDatePickerProps"
   },
   "source": "uui/components/datePickers/RangeDatePicker.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "to",
    "nameFull": "to"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerValue",
    "nameFull": "RangeDatePickerValue"
   },
   "source": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/typography/RichTextView.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "source": "uui/components/typography/RichTextView.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "borderBottom",
    "nameFull": "borderBottom"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "columnGap",
    "nameFull": "columnGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "rowGap",
    "nameFull": "rowGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "spacing",
    "nameFull": "spacing"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "topShadow",
    "nameFull": "topShadow"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "vPadding",
    "nameFull": "vPadding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "SemanticColor",
    "nameFull": "SemanticColor"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "SpinnerProps",
    "nameFull": "SpinnerProps"
   },
   "source": "uui/components/widgets/Spinner.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/Switch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "SwitchMods",
    "nameFull": "SwitchMods"
   },
   "source": "uui/components/inputs/Switch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "withNotify",
    "nameFull": "withNotify"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TabButtonMods",
    "nameFull": "TabButtonMods"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "withNotify",
    "nameFull": "withNotify"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TabButtonProps",
    "nameFull": "TabButtonProps"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagMods",
    "nameFull": "TagMods"
   },
   "source": "uui/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagProps",
    "nameFull": "TagProps"
   },
   "source": "uui/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagSize",
    "nameFull": "TagSize"
   },
   "source": "uui/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/TextArea.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextAreaMods",
    "nameFull": "TextAreaMods"
   },
   "source": "uui/components/inputs/TextArea.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/TextArea.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextAreaProps",
    "nameFull": "TextAreaProps"
   },
   "source": "uui/components/inputs/TextArea.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextInputMods",
    "nameFull": "TextInputMods"
   },
   "source": "uui/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextInputProps",
    "nameFull": "TextInputProps"
   },
   "source": "uui/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "font",
    "nameFull": "font"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "lineHeight",
    "nameFull": "lineHeight"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fontSize",
    "nameFull": "fontSize"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "wordsCount",
    "nameFull": "wordsCount"
   },
   "source": "uui/components/typography/TextPlaceholder.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "isNotAnimated",
    "nameFull": "isNotAnimated"
   },
   "source": "uui/components/typography/TextPlaceholder.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextPlaceholderProps",
    "nameFull": "TextPlaceholderProps"
   },
   "source": "uui/components/typography/TextPlaceholder.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "font",
    "nameFull": "font"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "lineHeight",
    "nameFull": "lineHeight"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fontSize",
    "nameFull": "fontSize"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "lineHeight",
    "nameFull": "lineHeight"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fontSize",
    "nameFull": "fontSize"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextSettings",
    "nameFull": "TextSettings"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "minutesStep",
    "nameFull": "minutesStep"
   },
   "source": "uui/components/inputs/TimePicker.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "format",
    "nameFull": "format"
   },
   "source": "uui/components/inputs/TimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderTarget",
    "nameFull": "renderTarget"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "rawProps",
    "nameFull": "rawProps"
   },
   "source": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TimePickerProps",
    "nameFull": "TimePickerProps"
   },
   "source": "uui/components/inputs/TimePicker.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "source": "uui/components/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "placement",
    "nameFull": "placement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "modifiers",
    "nameFull": "modifiers"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeDelay",
    "nameFull": "closeDelay"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnMouseLeave",
    "nameFull": "closeOnMouseLeave"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "boundaryElement",
    "nameFull": "boundaryElement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeBodyOnTogglerHidden",
    "nameFull": "closeBodyOnTogglerHidden"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "source": "uui/components/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "UuiMultiSwitchColor",
    "nameFull": "UuiMultiSwitchColor"
   },
   "source": "uui/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "withNotify",
    "nameFull": "withNotify"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "VerticalTabButtonProps",
    "nameFull": "VerticalTabButtonProps"
   },
   "source": "uui/components/buttons/VerticalTabButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "AlertMods",
    "nameFull": "AlertMods"
   },
   "source": "epam-promo/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "source": "epam-promo/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "source": "epam-promo/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "uui/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "source": "epam-promo/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonColor",
    "nameFull": "ButtonColor"
   },
   "source": "epam-promo/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "epam-promo/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "source": "epam-promo/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "epam-promo/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "source": "epam-promo/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ControlShape",
    "nameFull": "ControlShape"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "source": "epam-promo/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamAdditionalColor",
    "nameFull": "EpamAdditionalColor"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamColor",
    "nameFull": "EpamColor"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamGrayscaleColor",
    "nameFull": "EpamGrayscaleColor"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamPrimaryColor",
    "nameFull": "EpamPrimaryColor"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "getErrorInfo",
    "nameFull": "getErrorInfo"
   },
   "source": "epam-promo/components/errors/ErrorHandler.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "onNotificationError",
    "nameFull": "onNotificationError"
   },
   "source": "epam-promo/components/errors/ErrorHandler.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ErrorHandlerProps",
    "nameFull": "ErrorHandlerProps"
   },
   "source": "epam-promo/components/errors/ErrorHandler.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "FontMod",
    "nameFull": "FontMod"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "source": "epam-promo/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "source": "epam-promo/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconColor",
    "nameFull": "IconColor"
   },
   "source": "epam-promo/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconContainerColors",
    "nameFull": "IconContainerColors"
   },
   "source": "epam-promo/components/layout/IconContainer.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconContainerMods",
    "nameFull": "IconContainerMods"
   },
   "source": "epam-promo/components/layout/IconContainer.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "IHasEditMode",
    "nameFull": "IHasEditMode"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "source": "epam-promo/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "source": "epam-promo/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "epam-promo/components/overlays/ModalWindow.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "epam-promo/components/overlays/ModalWindow.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "source": "epam-promo/components/overlays/ModalWindow.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchColor",
    "nameFull": "MultiSwitchColor"
   },
   "source": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchMods",
    "nameFull": "MultiSwitchMods"
   },
   "source": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "source": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "NotificationCardMods",
    "nameFull": "NotificationCardMods"
   },
   "source": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "actions",
    "nameFull": "actions"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSuccess",
    "nameFull": "onSuccess"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearTimer",
    "nameFull": "clearTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "refreshTimer",
    "nameFull": "refreshTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "source": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "shadow",
    "nameFull": "shadow"
   },
   "source": "epam-promo/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "epam-promo/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "background",
    "nameFull": "background"
   },
   "source": "epam-promo/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "source": "epam-promo/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "epam-promo/components/inputs/Rating.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "RatingMods",
    "nameFull": "RatingMods"
   },
   "source": "epam-promo/components/inputs/Rating.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "epam-promo/components/typography/RichTextView.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "source": "epam-promo/components/typography/RichTextView.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "background",
    "nameFull": "background"
   },
   "source": "epam-promo/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "borderBottom",
    "nameFull": "borderBottom"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "columnGap",
    "nameFull": "columnGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "rowGap",
    "nameFull": "rowGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "spacing",
    "nameFull": "spacing"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "topShadow",
    "nameFull": "topShadow"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "vPadding",
    "nameFull": "vPadding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "source": "epam-promo/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "theme",
    "nameFull": "theme"
   },
   "source": "epam-promo/components/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "ScrollBarsMods",
    "nameFull": "ScrollBarsMods"
   },
   "source": "epam-promo/components/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "SliderMods",
    "nameFull": "SliderMods"
   },
   "source": "epam-promo/components/inputs/Slider/Slider.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextInputProps",
    "nameFull": "TextInputProps"
   },
   "source": "uui/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/typography/Text.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "font",
    "nameFull": "font"
   },
   "source": "epam-promo/components/typography/Text.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "source": "epam-promo/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "lineHeight",
    "nameFull": "lineHeight"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fontSize",
    "nameFull": "fontSize"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "epam-promo/components/typography/Text.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "font",
    "nameFull": "font"
   },
   "source": "epam-promo/components/typography/Text.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "source": "epam-promo/components/typography/Text.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "source": "epam-promo/components/types.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "source": "epam-promo/components/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "placement",
    "nameFull": "placement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "modifiers",
    "nameFull": "modifiers"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeDelay",
    "nameFull": "closeDelay"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnMouseLeave",
    "nameFull": "closeOnMouseLeave"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "boundaryElement",
    "nameFull": "boundaryElement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeBodyOnTogglerHidden",
    "nameFull": "closeBodyOnTogglerHidden"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "source": "epam-promo/components/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/promo",
   "typeName": {
    "name": "VirtualListMods",
    "nameFull": "VirtualListMods"
   },
   "source": "epam-promo/components/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "AlertMods",
    "nameFull": "AlertMods"
   },
   "source": "loveship/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "source": "loveship/components/overlays/Alert.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "shape",
    "nameFull": "shape"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "shape",
    "nameFull": "shape"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "source": "loveship/components/widgets/Badge.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonColorType",
    "nameFull": "ButtonColorType"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "shape",
    "nameFull": "shape"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/buttons/Button/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "shape",
    "nameFull": "shape"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "source": "loveship/components/buttons/Button.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "theme",
    "nameFull": "theme"
   },
   "source": "loveship/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "CheckboxMods",
    "nameFull": "CheckboxMods"
   },
   "source": "loveship/components/inputs/Checkbox.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ControlShape",
    "nameFull": "ControlShape"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "source": "loveship/components/overlays/DropdownContainer.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EditMode",
    "nameFull": "EditMode"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamAdditionalColor",
    "nameFull": "EpamAdditionalColor"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamColor",
    "nameFull": "EpamColor"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamGrayscaleColor",
    "nameFull": "EpamGrayscaleColor"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamPrimaryColor",
    "nameFull": "EpamPrimaryColor"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "getInfo",
    "nameFull": "getInfo"
   },
   "source": "loveship/components/app/ErrorHandler.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ErrorConfig",
    "nameFull": "ErrorConfig"
   },
   "source": "loveship/components/app/ErrorHandler.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "errorPageConfig",
    "nameFull": "errorPageConfig"
   },
   "source": "loveship/components/app/ErrorHandler.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "theme",
    "nameFull": "theme"
   },
   "source": "loveship/components/app/ErrorHandler.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "onNotificationError",
    "nameFull": "onNotificationError"
   },
   "source": "loveship/components/app/ErrorHandler.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ErrorPageProps",
    "nameFull": "ErrorPageProps"
   },
   "source": "loveship/components/app/ErrorHandler.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "font",
    "nameFull": "font"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FontMod",
    "nameFull": "FontMod"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "source": "loveship/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "source": "loveship/components/buttons/IconButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconContainerMods",
    "nameFull": "IconContainerMods"
   },
   "source": "loveship/components/layout/IconContainer.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "source": "loveship/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "source": "loveship/components/buttons/LinkButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "api",
    "nameFull": "api"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MakeMeItemProps",
    "nameFull": "MakeMeItemProps"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "externalId",
    "nameFull": "externalId"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "avatarUrl",
    "nameFull": "avatarUrl"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "jobTitle",
    "nameFull": "jobTitle"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "email",
    "nameFull": "email"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MakeMeUser",
    "nameFull": "MakeMeUser"
   },
   "source": "loveship/components/dev/MakeMeItem.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "loveship/components/overlays/ModalWindow.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "loveship/components/overlays/ModalWindow.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "source": "loveship/components/overlays/ModalWindow.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchColor",
    "nameFull": "MultiSwitchColor"
   },
   "source": "loveship/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchMods",
    "nameFull": "MultiSwitchMods"
   },
   "source": "loveship/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "source": "loveship/components/inputs/MultiSwitch.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "NotificationCardMods",
    "nameFull": "NotificationCardMods"
   },
   "source": "loveship/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "actions",
    "nameFull": "actions"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSuccess",
    "nameFull": "onSuccess"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearTimer",
    "nameFull": "clearTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "refreshTimer",
    "nameFull": "refreshTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "source": "loveship/components/overlays/NotificationCard.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "shadow",
    "nameFull": "shadow"
   },
   "source": "loveship/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "loveship/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "background",
    "nameFull": "background"
   },
   "source": "loveship/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "source": "loveship/components/layout/FlexItems/Panel.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "theme",
    "nameFull": "theme"
   },
   "source": "loveship/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RadioInputMods",
    "nameFull": "RadioInputMods"
   },
   "source": "loveship/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "theme",
    "nameFull": "theme"
   },
   "source": "loveship/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "icon",
    "nameFull": "icon"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "renderLabel",
    "nameFull": "renderLabel"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "tabIndex",
    "nameFull": "tabIndex"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-components/src/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "source": "loveship/components/inputs/RadioInput.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RangeSliderMods",
    "nameFull": "RangeSliderMods"
   },
   "source": "loveship/components/inputs/Slider/RangeSlider.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/inputs/Rating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RatingMods",
    "nameFull": "RatingMods"
   },
   "source": "loveship/components/inputs/Rating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/typography/RichTextView.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "source": "loveship/components/typography/RichTextView.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "background",
    "nameFull": "background"
   },
   "source": "loveship/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "spacing",
    "nameFull": "spacing"
   },
   "source": "loveship/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "loveship/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "borderBottom",
    "nameFull": "borderBottom"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "columnGap",
    "nameFull": "columnGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "margin",
    "nameFull": "margin"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "padding",
    "nameFull": "padding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "rowGap",
    "nameFull": "rowGap"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "topShadow",
    "nameFull": "topShadow"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "vPadding",
    "nameFull": "vPadding"
   },
   "source": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "source": "loveship/components/layout/FlexItems/FlexRow.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "theme",
    "nameFull": "theme"
   },
   "source": "loveship/components/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ScrollBarsMods",
    "nameFull": "ScrollBarsMods"
   },
   "source": "loveship/components/layout/ScrollBars.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "renderTooltip",
    "nameFull": "renderTooltip"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "from",
    "nameFull": "from"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "withoutNa",
    "nameFull": "withoutNa"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "getScaleIcon",
    "nameFull": "getScaleIcon"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "getHandlerIcon",
    "nameFull": "getHandlerIcon"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "tooltipColor",
    "nameFull": "tooltipColor"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SliderRatingProps",
    "nameFull": "SliderRatingProps<TValue>"
   },
   "source": "loveship/components/inputs/SliderRating.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "snackType",
    "nameFull": "snackType"
   },
   "source": "loveship/components/overlays/SnackbarCard.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onSuccess",
    "nameFull": "onSuccess"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "clearTimer",
    "nameFull": "clearTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "refreshTimer",
    "nameFull": "refreshTimer"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "id",
    "nameFull": "id"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "key",
    "nameFull": "key"
   },
   "source": "uui-core/src/types/props.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SnackbarCardProps",
    "nameFull": "SnackbarCardProps"
   },
   "source": "loveship/components/overlays/SnackbarCard.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "theme",
    "nameFull": "theme"
   },
   "source": "loveship/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "withNotify",
    "nameFull": "withNotify"
   },
   "source": "uui/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "countPosition",
    "nameFull": "countPosition"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "count",
    "nameFull": "count"
   },
   "source": "uui-core/src/types/components/Button.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClear",
    "nameFull": "onClear"
   },
   "source": "uui-core/src/types/pickers.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TabButtonMods",
    "nameFull": "TabButtonMods"
   },
   "source": "loveship/components/buttons/TabButton.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "fill",
    "nameFull": "fill"
   },
   "source": "loveship/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TagMods",
    "nameFull": "TagMods"
   },
   "source": "loveship/components/widgets/Tag.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "loveship/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "mode",
    "nameFull": "mode"
   },
   "source": "uui/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextInputMods",
    "nameFull": "TextInputMods"
   },
   "source": "loveship/components/inputs/TextInput.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/typography/Text.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "font",
    "nameFull": "font"
   },
   "source": "loveship/components/typography/Text.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "source": "loveship/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "uui/components/typography/Text.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "lineHeight",
    "nameFull": "lineHeight"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/uui",
   "typeName": {
    "name": "fontSize",
    "nameFull": "fontSize"
   },
   "source": "uui/helpers/textLayout.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "loveship/components/typography/Text.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "font",
    "nameFull": "font"
   },
   "source": "loveship/components/typography/Text.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "source": "loveship/components/typography/Text.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "source": "loveship/components/types.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "source": "loveship/components/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "onClose",
    "nameFull": "onClose"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "placement",
    "nameFull": "placement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "modifiers",
    "nameFull": "modifiers"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeDelay",
    "nameFull": "closeDelay"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeOnMouseLeave",
    "nameFull": "closeOnMouseLeave"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "portalTarget",
    "nameFull": "portalTarget"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "boundaryElement",
    "nameFull": "boundaryElement"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "closeBodyOnTogglerHidden",
    "nameFull": "closeBodyOnTogglerHidden"
   },
   "source": "uui-core/src/types/components/Dropdown.ts"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "source": "loveship/components/overlays/Tooltip.tsx"
  },
  {
   "module": "@epam/loveship",
   "typeName": {
    "name": "VirtualListMods",
    "nameFull": "VirtualListMods"
   },
   "source": "loveship/components/layout/VirtualList.tsx"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "EditorValue",
    "nameFull": "EditorValue"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "url",
    "nameFull": "url"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "align",
    "nameFull": "align"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "imageSize",
    "nameFull": "imageSize"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "align",
    "nameFull": "align"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "data",
    "nameFull": "data"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "IImageElement",
    "nameFull": "IImageElement"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "href",
    "nameFull": "href"
   },
   "source": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "LinkElement",
    "nameFull": "LinkElement"
   },
   "source": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlaceholderPluginParams",
    "nameFull": "PlaceholderPluginParams"
   },
   "source": "uui-editor/src/plugins/placeholderPlugin/placeholderPlugin.tsx"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlateImgAlign",
    "nameFull": "PlateImgAlign"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "url",
    "nameFull": "url"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "align",
    "nameFull": "align"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlateProps",
    "nameFull": "PlateProps"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateImageSize",
    "nameFull": "SlateImageSize"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateImgAlign",
    "nameFull": "SlateImgAlign"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "width",
    "nameFull": "width"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "imageSize",
    "nameFull": "imageSize"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "align",
    "nameFull": "align"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "size",
    "nameFull": "size"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "typeName": {
    "name": "type",
    "nameFull": "type"
   },
   "source": "../../../../node_modules/typescript/lib/lib.dom.d.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "data",
    "nameFull": "data"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateProps",
    "nameFull": "SlateProps"
   },
   "source": "uui-editor/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "className",
    "nameFull": "className"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartViewport",
    "nameFull": "dragStartViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "currentViewport",
    "nameFull": "currentViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "targetViewport",
    "nameFull": "targetViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minWidth",
    "nameFull": "minWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minVisibleDate",
    "nameFull": "minVisibleDate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minScale",
    "nameFull": "minScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "maxScale",
    "nameFull": "maxScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseX",
    "nameFull": "screenMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseY",
    "nameFull": "screenMouseY"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartMouseX",
    "nameFull": "dragStartMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isFrameScheduled",
    "nameFull": "isFrameScheduled"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scalesVisibility",
    "nameFull": "scalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "shiftPercent",
    "nameFull": "shiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "onViewportChange",
    "nameFull": "onViewportChange"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setViewport",
    "nameFull": "setViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setShiftPercent",
    "nameFull": "setShiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setWidth",
    "nameFull": "setWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleWheelEvent",
    "nameFull": "handleWheelEvent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "changeZoomStep",
    "nameFull": "changeZoomStep"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveToday",
    "nameFull": "moveToday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveBy",
    "nameFull": "moveBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomTo",
    "nameFull": "zoomTo"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomBy",
    "nameFull": "zoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "canZoomBy",
    "nameFull": "canZoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getTransform",
    "nameFull": "getTransform"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "doRender",
    "nameFull": "doRender"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolate",
    "nameFull": "interpolate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolateViewports",
    "nameFull": "interpolateViewports"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isScaleVisible",
    "nameFull": "isScaleVisible"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getScaleVisibility",
    "nameFull": "getScaleVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "updateScalesVisibility",
    "nameFull": "updateScalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "lastRenderTimestamp",
    "nameFull": "lastRenderTimestamp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getNewCenter",
    "nameFull": "getNewCenter"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseMove",
    "nameFull": "handleMouseMove"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseUp",
    "nameFull": "handleMouseUp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseLeave",
    "nameFull": "handleMouseLeave"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "timelineController",
    "nameFull": "timelineController"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "renderOnTop",
    "nameFull": "renderOnTop"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "BaseTimelineCanvasComponentProps",
    "nameFull": "BaseTimelineCanvasComponentProps"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "fillType",
    "nameFull": "fillType"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "opacity",
    "nameFull": "opacity"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "height",
    "nameFull": "height"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "priority",
    "nameFull": "priority"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minPixPerDay",
    "nameFull": "minPixPerDay"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "maxPxPerDay",
    "nameFull": "maxPxPerDay"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "Item",
    "nameFull": "Item"
   },
   "source": "uui-timeline/src/renderBars.ts"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "eventName",
    "nameFull": "eventName"
   },
   "source": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "name",
    "nameFull": "name"
   },
   "source": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  {
   "typeName": {
    "name": "length",
    "nameFull": "length"
   },
   "source": "../../../../node_modules/typescript/lib/lib.es5.d.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "color",
    "nameFull": "color"
   },
   "source": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "Stage",
    "nameFull": "Stage"
   },
   "source": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minWidth",
    "nameFull": "minWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minVisibleDate",
    "nameFull": "minVisibleDate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minScale",
    "nameFull": "minScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "maxScale",
    "nameFull": "maxScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineControllerOptions",
    "nameFull": "TimelineControllerOptions"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartViewport",
    "nameFull": "dragStartViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "currentViewport",
    "nameFull": "currentViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "targetViewport",
    "nameFull": "targetViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minWidth",
    "nameFull": "minWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minVisibleDate",
    "nameFull": "minVisibleDate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minScale",
    "nameFull": "minScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "maxScale",
    "nameFull": "maxScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseX",
    "nameFull": "screenMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseY",
    "nameFull": "screenMouseY"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartMouseX",
    "nameFull": "dragStartMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isFrameScheduled",
    "nameFull": "isFrameScheduled"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scalesVisibility",
    "nameFull": "scalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "shiftPercent",
    "nameFull": "shiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "onViewportChange",
    "nameFull": "onViewportChange"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setViewport",
    "nameFull": "setViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setShiftPercent",
    "nameFull": "setShiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setWidth",
    "nameFull": "setWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleWheelEvent",
    "nameFull": "handleWheelEvent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "changeZoomStep",
    "nameFull": "changeZoomStep"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveToday",
    "nameFull": "moveToday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveBy",
    "nameFull": "moveBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomTo",
    "nameFull": "zoomTo"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomBy",
    "nameFull": "zoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "canZoomBy",
    "nameFull": "canZoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getTransform",
    "nameFull": "getTransform"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "doRender",
    "nameFull": "doRender"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolate",
    "nameFull": "interpolate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolateViewports",
    "nameFull": "interpolateViewports"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isScaleVisible",
    "nameFull": "isScaleVisible"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getScaleVisibility",
    "nameFull": "getScaleVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "updateScalesVisibility",
    "nameFull": "updateScalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "lastRenderTimestamp",
    "nameFull": "lastRenderTimestamp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getNewCenter",
    "nameFull": "getNewCenter"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseMove",
    "nameFull": "handleMouseMove"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseUp",
    "nameFull": "handleMouseUp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseLeave",
    "nameFull": "handleMouseLeave"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "timelineController",
    "nameFull": "timelineController"
   },
   "source": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineEventsBarProps",
    "nameFull": "TimelineEventsBarProps"
   },
   "source": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "className",
    "nameFull": "className"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartViewport",
    "nameFull": "dragStartViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "currentViewport",
    "nameFull": "currentViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "targetViewport",
    "nameFull": "targetViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minWidth",
    "nameFull": "minWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minVisibleDate",
    "nameFull": "minVisibleDate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minScale",
    "nameFull": "minScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "maxScale",
    "nameFull": "maxScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseX",
    "nameFull": "screenMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseY",
    "nameFull": "screenMouseY"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartMouseX",
    "nameFull": "dragStartMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isFrameScheduled",
    "nameFull": "isFrameScheduled"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scalesVisibility",
    "nameFull": "scalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "shiftPercent",
    "nameFull": "shiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "onViewportChange",
    "nameFull": "onViewportChange"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setViewport",
    "nameFull": "setViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setShiftPercent",
    "nameFull": "setShiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setWidth",
    "nameFull": "setWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleWheelEvent",
    "nameFull": "handleWheelEvent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "changeZoomStep",
    "nameFull": "changeZoomStep"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveToday",
    "nameFull": "moveToday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveBy",
    "nameFull": "moveBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomTo",
    "nameFull": "zoomTo"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomBy",
    "nameFull": "zoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "canZoomBy",
    "nameFull": "canZoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getTransform",
    "nameFull": "getTransform"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "doRender",
    "nameFull": "doRender"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolate",
    "nameFull": "interpolate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolateViewports",
    "nameFull": "interpolateViewports"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isScaleVisible",
    "nameFull": "isScaleVisible"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getScaleVisibility",
    "nameFull": "getScaleVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "updateScalesVisibility",
    "nameFull": "updateScalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "lastRenderTimestamp",
    "nameFull": "lastRenderTimestamp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getNewCenter",
    "nameFull": "getNewCenter"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseMove",
    "nameFull": "handleMouseMove"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseUp",
    "nameFull": "handleMouseUp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseLeave",
    "nameFull": "handleMouseLeave"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "timelineController",
    "nameFull": "timelineController"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "renderOnTop",
    "nameFull": "renderOnTop"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineGridProps",
    "nameFull": "TimelineGridProps"
   },
   "source": "uui-timeline/src/TimelineGrid.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartViewport",
    "nameFull": "dragStartViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "currentViewport",
    "nameFull": "currentViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "targetViewport",
    "nameFull": "targetViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minWidth",
    "nameFull": "minWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minVisibleDate",
    "nameFull": "minVisibleDate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minScale",
    "nameFull": "minScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "maxScale",
    "nameFull": "maxScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseX",
    "nameFull": "screenMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseY",
    "nameFull": "screenMouseY"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartMouseX",
    "nameFull": "dragStartMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isFrameScheduled",
    "nameFull": "isFrameScheduled"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scalesVisibility",
    "nameFull": "scalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "shiftPercent",
    "nameFull": "shiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "onViewportChange",
    "nameFull": "onViewportChange"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setViewport",
    "nameFull": "setViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setShiftPercent",
    "nameFull": "setShiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setWidth",
    "nameFull": "setWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleWheelEvent",
    "nameFull": "handleWheelEvent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "changeZoomStep",
    "nameFull": "changeZoomStep"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveToday",
    "nameFull": "moveToday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveBy",
    "nameFull": "moveBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomTo",
    "nameFull": "zoomTo"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomBy",
    "nameFull": "zoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "canZoomBy",
    "nameFull": "canZoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getTransform",
    "nameFull": "getTransform"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "doRender",
    "nameFull": "doRender"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolate",
    "nameFull": "interpolate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolateViewports",
    "nameFull": "interpolateViewports"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isScaleVisible",
    "nameFull": "isScaleVisible"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getScaleVisibility",
    "nameFull": "getScaleVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "updateScalesVisibility",
    "nameFull": "updateScalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "lastRenderTimestamp",
    "nameFull": "lastRenderTimestamp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getNewCenter",
    "nameFull": "getNewCenter"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseMove",
    "nameFull": "handleMouseMove"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseUp",
    "nameFull": "handleMouseUp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseLeave",
    "nameFull": "handleMouseLeave"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "timelineController",
    "nameFull": "timelineController"
   },
   "source": "uui-timeline/src/TimelineNav.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineNavProps",
    "nameFull": "TimelineNavProps"
   },
   "source": "uui-timeline/src/TimelineNav.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isDraggable",
    "nameFull": "isDraggable"
   },
   "source": "uui-timeline/src/TimelineScale.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isScaleChangeOnWheel",
    "nameFull": "isScaleChangeOnWheel"
   },
   "source": "uui-timeline/src/TimelineScale.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "shiftPercent",
    "nameFull": "shiftPercent"
   },
   "source": "uui-timeline/src/TimelineScale.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "className",
    "nameFull": "className"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartViewport",
    "nameFull": "dragStartViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "currentViewport",
    "nameFull": "currentViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "pxPerMs",
    "nameFull": "pxPerMs"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "widthPx",
    "nameFull": "widthPx"
   },
   "source": "uui-timeline/src/types.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "targetViewport",
    "nameFull": "targetViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isHoliday",
    "nameFull": "isHoliday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minWidth",
    "nameFull": "minWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minVisibleDate",
    "nameFull": "minVisibleDate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "minScale",
    "nameFull": "minScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "maxScale",
    "nameFull": "maxScale"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "options",
    "nameFull": "options"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseX",
    "nameFull": "screenMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "screenMouseY",
    "nameFull": "screenMouseY"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "dragStartMouseX",
    "nameFull": "dragStartMouseX"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isDragging",
    "nameFull": "isDragging"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isFrameScheduled",
    "nameFull": "isFrameScheduled"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scalesVisibility",
    "nameFull": "scalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "shiftPercent",
    "nameFull": "shiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "onViewportChange",
    "nameFull": "onViewportChange"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "subscribe",
    "nameFull": "subscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "unsubscribe",
    "nameFull": "unsubscribe"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setViewport",
    "nameFull": "setViewport"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setShiftPercent",
    "nameFull": "setShiftPercent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "setWidth",
    "nameFull": "setWidth"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "startDrag",
    "nameFull": "startDrag"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleWheelEvent",
    "nameFull": "handleWheelEvent"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "changeZoomStep",
    "nameFull": "changeZoomStep"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveToday",
    "nameFull": "moveToday"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "moveBy",
    "nameFull": "moveBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomTo",
    "nameFull": "zoomTo"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "zoomBy",
    "nameFull": "zoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "canZoomBy",
    "nameFull": "canZoomBy"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getTransform",
    "nameFull": "getTransform"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "doRender",
    "nameFull": "doRender"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolate",
    "nameFull": "interpolate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "interpolateViewports",
    "nameFull": "interpolateViewports"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "isScaleVisible",
    "nameFull": "isScaleVisible"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getScaleVisibility",
    "nameFull": "getScaleVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "updateScalesVisibility",
    "nameFull": "updateScalesVisibility"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "lastRenderTimestamp",
    "nameFull": "lastRenderTimestamp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "scheduleUpdate",
    "nameFull": "scheduleUpdate"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "getNewCenter",
    "nameFull": "getNewCenter"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseMove",
    "nameFull": "handleMouseMove"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseUp",
    "nameFull": "handleMouseUp"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "handleMouseLeave",
    "nameFull": "handleMouseLeave"
   },
   "source": "uui-timeline/src/TimelineController.ts"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "timelineController",
    "nameFull": "timelineController"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "renderOnTop",
    "nameFull": "renderOnTop"
   },
   "source": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineScaleProps",
    "nameFull": "TimelineScaleProps"
   },
   "source": "uui-timeline/src/TimelineScale.tsx"
  }
 ],
 "ignoredExports": {
  "@epam/uui-core": {
   "ClassDeclaration": [
    "AnalyticsContext",
    "ApiCallError",
    "ApiContext",
    "ArrayDataSource",
    "ArrayListView",
    "AsyncDataSource",
    "AsyncListView",
    "BaseDataSource",
    "BaseListView",
    "Debouncer",
    "DndActor",
    "DndContext",
    "DragGhost",
    "ErrorContext",
    "GAListener",
    "HistoryAdaptedRouter",
    "LayoutContext",
    "LazyDataSource",
    "LazyListView",
    "LazyLoadedMap",
    "ListApiCache",
    "Lock",
    "LockContext",
    "ModalContext",
    "ModalOperationCancelled",
    "NextRouterAdapter",
    "NotificationContext",
    "Router6AdaptedRouter",
    "SkinContext",
    "StubAdaptedRouter",
    "Tree",
    "UuiError"
   ],
   "VariableDeclaration": [
    "applyColumnsConfig",
    "blankValidationState",
    "CascadeSelectionTypes",
    "clearEmptyValueFromRecord",
    "cx",
    "devLogger",
    "directionMode",
    "FAILED",
    "forwardRef",
    "getCalculatedValue",
    "getColumnsConfig",
    "getDecimalLength",
    "getMinMaxValidatedValue",
    "getSeparatedValue",
    "i18n",
    "IEditableDebouncer",
    "isClientSide",
    "isMobile",
    "labelMod",
    "Lens",
    "LOADED",
    "LOADING",
    "maxOrderStr",
    "minOrderStr",
    "mobilePopperModifier",
    "NOT_FOUND_RECORD",
    "parseIconViewbox",
    "PENDING",
    "queryToSearch",
    "ROOT_ID",
    "searchToQuery",
    "Stateful",
    "UNKNOWN",
    "urlParser",
    "useAppMobileHeight",
    "useColumnsConfig",
    "useForceUpdate",
    "useLayer",
    "useLayoutEffectSafeForSsr",
    "useTableState",
    "useTableStateImpl",
    "useUuiError",
    "useUuiServices",
    "UuiContext",
    "uuiContextTypes",
    "uuiDataTableHeaderCell",
    "uuiDndState",
    "uuiElement",
    "uuiMarkers",
    "uuiMod",
    "uuiScrollShadows",
    "uuiSkin",
    "validate"
   ],
   "FunctionDeclaration": [
    "arrayToMatrix",
    "batch",
    "blurFocusedElement",
    "closestTargetParentByCondition",
    "ContextProvider",
    "deleteCookie",
    "Form",
    "formatBytes",
    "getBeforeUnloadSingletone",
    "getBrowser",
    "getCookie",
    "getFilterPredicate",
    "getOffset",
    "getOrderBetween",
    "getOrderComparer",
    "getRouter6BlockFn",
    "getScreenSize",
    "getScrollParentOfEventTarget",
    "getSearchFilter",
    "handleSpaceKey",
    "isAnyParentHasClass",
    "isEventTargetInsideClickable",
    "isEventTargetInsideDraggable",
    "isEventTargetInsideInput",
    "isFocusReceiverInsideFocusLock",
    "isUrl",
    "mergeValidation",
    "parseStringToCSSProperties",
    "prependHttp",
    "preventDefaultIfTargetFocused",
    "releasePointerCaptureOnEventTarget",
    "runDataQuery",
    "setCookie",
    "simplifyPredicates",
    "skinComponent",
    "useArrayDataSource",
    "useAsyncDataSource",
    "useForm",
    "useLazyDataSource",
    "useList",
    "usePrevious",
    "useScrollShadows",
    "useUuiContext",
    "useUuiServicesSsr",
    "useVirtualList",
    "validateServerErrorState",
    "withMods"
   ],
   "EnumDeclaration": [
    "Browser"
   ]
  },
  "@epam/uui-components": {
   "ClassDeclaration": [
    "Accordion",
    "AnchorImpl",
    "BaseDatePicker",
    "BaseRangeDatePicker",
    "BaseRating",
    "BaseTimePicker",
    "Blocker",
    "Burger",
    "Button",
    "ButtonBase",
    "Calendar",
    "CalendarPresets",
    "Carousel",
    "Checkbox",
    "CheckboxGroup",
    "ControlGroup",
    "DataPickerRow",
    "DataTableHeaderCell",
    "DataTableHeaderRow",
    "DatePickerBodyBase",
    "Day",
    "DragHandle",
    "Dropdown",
    "DropSpot",
    "ErrorCatch",
    "IconButton",
    "InputAddon",
    "LabeledInput",
    "MainMenu",
    "MainMenuCustomElement",
    "MainMenuLogo",
    "ModalBlocker",
    "Modals",
    "ModalWindow",
    "MonthSelection",
    "Paginator",
    "PickerBodyBase",
    "RadioGroup",
    "RadioInput",
    "RangeSlider",
    "Rating",
    "RichTextView",
    "Slider",
    "SliderBase",
    "Snackbar",
    "Spinner",
    "Switch",
    "Text",
    "TextArea",
    "TimePickerBody",
    "UploadFileToggler",
    "VPanel",
    "YearSelection"
   ],
   "FunctionDeclaration": [
    "AdaptivePanel",
    "applyValueToDataSourceState",
    "dataSourceStateToValue",
    "DataTableCell",
    "DataTableSelectionProvider",
    "FlexSpacer",
    "NumericInput",
    "PortalRoot",
    "ScrollSpy",
    "Tooltip",
    "Tree",
    "useColumnsConfiguration",
    "usePicker",
    "usePickerInput",
    "usePickerList",
    "usePickerModal",
    "useScrollSpy"
   ],
   "VariableDeclaration": [
    "Anchor",
    "Avatar",
    "AvatarStack",
    "DataTableRow",
    "DataTableSelectionContext",
    "defaultFormat",
    "DropdownContainer",
    "FlexCell",
    "FlexRow",
    "handleDataSourceKeyboard",
    "i18n",
    "IconContainer",
    "PickerToggler",
    "Portal",
    "ProgressBar",
    "ScrollBars",
    "supportedDateFormats",
    "Svg",
    "TextInput",
    "toCustomDateFormat",
    "toCustomDateRangeFormat",
    "toValueDateFormat",
    "toValueDateRangeFormat",
    "uuiBurger",
    "uuiDatePickerBodyBase",
    "uuiDaySelection",
    "uuiInputElements",
    "uuiMainMenu",
    "uuiMonthSelection",
    "uuiNumericInput",
    "uuiPresets",
    "uuiSlider",
    "uuiTimePicker",
    "uuiYearSelection",
    "valueFormat",
    "VirtualList"
   ]
  },
  "@epam/uui": {
   "VariableDeclaration": [
    "Accordion",
    "Alert",
    "allButtonColors",
    "allButtonModes",
    "allButtonSemanticColors",
    "allEpamBadgeSemanticColors",
    "allFillStyles",
    "allFontStyles",
    "allIconColors",
    "allLinkButtonColors",
    "allRowSizes",
    "allSemanticColors",
    "allSizes",
    "allTextSizes",
    "Anchor",
    "Avatar",
    "AvatarStack",
    "Badge",
    "Blocker",
    "Burger",
    "BurgerButton",
    "Button",
    "Calendar",
    "Checkbox",
    "CheckboxGroup",
    "ColumnHeaderDropdown",
    "ControlGroup",
    "DataPickerFooter",
    "DataPickerHeader",
    "DataTableHeaderRow",
    "DataTableRow",
    "defaultPredicates",
    "DropdownContainer",
    "DropdownMenuBody",
    "DropdownMenuButton",
    "ErrorAlert",
    "ErrorNotification",
    "FileCard",
    "FiltersPanel",
    "FlexCell",
    "FlexRow",
    "getHighlightedSearchMatches",
    "getHighlightRanges",
    "GlobalMenu",
    "HintAlert",
    "HintNotification",
    "i18n",
    "IconButton",
    "IconContainer",
    "IndeterminateBar",
    "IndicatorBar",
    "InputAddon",
    "LabeledInput",
    "LinkButton",
    "MainMenu",
    "MainMenuAvatar",
    "MainMenuButton",
    "MainMenuIcon",
    "MainMenuSearch",
    "MobileDropdownWrapper",
    "ModalBlocker",
    "ModalWindow",
    "MultiSwitch",
    "NotificationCard",
    "NumericInput",
    "Panel",
    "PickerToggler",
    "ProgressBar",
    "propsMods",
    "RadioGroup",
    "RadioInput",
    "rangeDatePickerPresets",
    "renderCell",
    "renderDropMarkers",
    "RichTextView",
    "ScrollBars",
    "SearchInput",
    "Spinner",
    "SuccessAlert",
    "SuccessNotification",
    "SvgCircleProgress",
    "Switch",
    "TabButton",
    "Tag",
    "Text",
    "TextArea",
    "TextInput",
    "TextPlaceholder",
    "Tooltip",
    "useColumnsWithFilters",
    "uuiDatePickerBody",
    "VerticalTabButton",
    "VirtualList",
    "WarningAlert",
    "WarningNotification"
   ],
   "FunctionDeclaration": [
    "applyBadgeMods",
    "applyButtonMods",
    "applyCheckboxMods",
    "applyDateSelectionMods",
    "applyInputAddonMods",
    "applyNumericInputMods",
    "applyProgressBarMods",
    "applySpinnerMods",
    "applySwitchMods",
    "applyTagMods",
    "applyTextAreaMods",
    "applyTextInputMods",
    "BurgerGroupHeader",
    "BurgerSearch",
    "ColumnsConfigurationModal",
    "DataRowsContainer",
    "DataTable",
    "DataTableCell",
    "Dropdown",
    "DropdownMenuHeader",
    "DropdownMenuSplitter",
    "DropdownMenuSwitchButton",
    "DropdownSubMenu",
    "DropMarker",
    "FilterItemBody",
    "FlexSpacer",
    "Form",
    "getTextClasses",
    "Paginator",
    "PickerInput",
    "PickerList",
    "PickerListItem",
    "PickerModal",
    "PresetsPanel",
    "useForm",
    "weekCount"
   ],
   "ClassDeclaration": [
    "ClearNotification",
    "ConfirmationModal",
    "DataPickerBody",
    "DataPickerRow",
    "DataTableHeaderCell",
    "DatePicker",
    "DatePickerBody",
    "DropSpot",
    "MainMenuDropdown",
    "ModalFooter",
    "ModalHeader",
    "PickerItem",
    "RangeDatePicker",
    "RangeDatePickerBody",
    "TimePicker"
   ],
   "EnumDeclaration": [
    "EditMode",
    "IDropdownControlKeys"
   ]
  },
  "@epam/promo": {
   "VariableDeclaration": [
    "Accordion",
    "Alert",
    "allBorderStyles",
    "allEpamAdditionalColors",
    "allEpamGrayscaleColors",
    "allEpamPrimaryColors",
    "allFillStyles",
    "allFontStyles",
    "allIconColors",
    "allIconContainerColors",
    "allRowSizes",
    "allSizes",
    "allTextSizes",
    "Anchor",
    "Avatar",
    "AvatarStack",
    "Badge",
    "Blocker",
    "Burger",
    "BurgerButton",
    "Button",
    "Calendar",
    "Checkbox",
    "CheckboxGroup",
    "commonControlColors",
    "ControlGroup",
    "ControlWrapper",
    "DataPickerFooter",
    "DataTableHeaderRow",
    "DataTableRow",
    "defaultPredicates",
    "DropdownContainer",
    "DropdownMenuBody",
    "DropdownMenuButton",
    "ErrorAlert",
    "ErrorNotification",
    "ErrorPage",
    "FileCard",
    "FiltersPanel",
    "FlexCell",
    "FlexRow",
    "getErrorPageConfig",
    "getRecoveryMessageConfig",
    "GlobalMenu",
    "HintAlert",
    "HintNotification",
    "i18n",
    "IconButton",
    "IconContainer",
    "IndeterminateBar",
    "IndicatorBar",
    "LabeledInput",
    "LinkButton",
    "MainMenu",
    "MainMenuAvatar",
    "MainMenuButton",
    "MainMenuIcon",
    "MainMenuSearch",
    "ModalBlocker",
    "ModalWindow",
    "MultiSwitch",
    "NotificationCard",
    "NumericInput",
    "Panel",
    "PickerToggler",
    "ProgressBar",
    "RadioGroup",
    "RadioInput",
    "Rating",
    "RichTextView",
    "ScrollBars",
    "SearchInput",
    "skinContext",
    "Slider",
    "Spinner",
    "SuccessAlert",
    "SuccessNotification",
    "SvgCircleProgress",
    "Switch",
    "TabButton",
    "Tag",
    "Text",
    "TextArea",
    "TextInput",
    "TextPlaceholder",
    "Tooltip",
    "VerticalTabButton",
    "VirtualList",
    "WarningAlert",
    "WarningNotification"
   ],
   "FunctionDeclaration": [
    "applyDropdownContainerMods",
    "applyIconContainerMods",
    "applySliderMods",
    "BurgerSearch",
    "ColumnsConfigurationModal",
    "DataTable",
    "DataTableCell",
    "Dropdown",
    "DropdownMenuHeader",
    "DropdownMenuSplitter",
    "DropdownMenuSwitchButton",
    "DropdownSubMenu",
    "DropMarker",
    "ErrorHandler",
    "FlexSpacer",
    "Form",
    "Paginator",
    "PickerInput",
    "PickerList",
    "PickerModal",
    "PresetsPanel",
    "useForm"
   ],
   "ClassDeclaration": [
    "ClearNotification",
    "ConfirmationModal",
    "DataPickerBody",
    "DataPickerRow",
    "DatePicker",
    "DropSpot",
    "MainMenuCustomElement",
    "MainMenuDropdown",
    "MainMenuLogo",
    "ModalFooter",
    "ModalHeader",
    "PickerItem",
    "RangeDatePicker",
    "TimePicker"
   ],
   "EnumDeclaration": [
    "EditMode"
   ]
  },
  "@epam/loveship": {
   "VariableDeclaration": [
    "Accordion",
    "Alert",
    "allBorderStyles",
    "allEpamAdditionalColors",
    "allEpamGrayscaleColors",
    "allEpamPrimaryColors",
    "allFillStyles",
    "allFontStyles",
    "allRowSizes",
    "allSizes",
    "allTextSizes",
    "Anchor",
    "Avatar",
    "AvatarStack",
    "Badge",
    "Blocker",
    "Burger",
    "BurgerButton",
    "Button",
    "Calendar",
    "Checkbox",
    "CheckboxGroup",
    "commonControlColors",
    "ControlGroup",
    "ControlWrapper",
    "DataPickerFooter",
    "DataTableHeaderRow",
    "DataTableRow",
    "defaultPredicates",
    "DropdownContainer",
    "DropdownMenuBody",
    "DropdownMenuButton",
    "ErrorAlert",
    "ErrorNotification",
    "FileCard",
    "FiltersPanel",
    "FlexCell",
    "FlexRow",
    "getDefaultErrorPageProps",
    "getTextWidth",
    "GlobalMenu",
    "HintAlert",
    "HintNotification",
    "i18n",
    "IconButton",
    "IconContainer",
    "IndeterminateBar",
    "IndicatorBar",
    "LabeledInput",
    "LinkButton",
    "MainMenu",
    "MainMenuAvatar",
    "MainMenuButton",
    "MainMenuIcon",
    "MainMenuSearch",
    "ModalBlocker",
    "ModalWindow",
    "MultiSwitch",
    "NotificationCard",
    "NumericInput",
    "Panel",
    "PickerToggler",
    "ProgressBar",
    "RadioGroup",
    "RadioInput",
    "RangeSlider",
    "Rating",
    "recoveryWordings",
    "RichTextView",
    "ScrollBars",
    "SearchInput",
    "skinContext",
    "Slider",
    "SnackbarCard",
    "Spinner",
    "SuccessAlert",
    "SuccessNotification",
    "SvgCircleProgress",
    "Switch",
    "TabButton",
    "Tag",
    "Text",
    "TextArea",
    "TextInput",
    "TextPlaceholder",
    "Tooltip",
    "VerticalTabButton",
    "VirtualList",
    "WarningAlert",
    "WarningNotification"
   ],
   "FunctionDeclaration": [
    "applyBadgeMods",
    "applyButtonMods",
    "applyCheckboxMods",
    "applyIconContainerMods",
    "applyRangeSliderMods",
    "applySliderMods",
    "applyTagMods",
    "applyTextInputMods",
    "ColumnsConfigurationModal",
    "DataTable",
    "DataTableCell",
    "Dropdown",
    "DropdownMenuHeader",
    "DropdownMenuSplitter",
    "DropdownMenuSwitchButton",
    "DropdownSubMenu",
    "DropMarker",
    "ErrorHandler",
    "FlexSpacer",
    "Form",
    "getIconClass",
    "Paginator",
    "PickerInput",
    "PickerList",
    "PickerModal",
    "PresetsPanel",
    "useForm"
   ],
   "ClassDeclaration": [
    "AvatarRow",
    "ClearNotification",
    "ConfirmationModal",
    "DataPickerBody",
    "DataPickerRow",
    "DatePicker",
    "DropSpot",
    "ErrorPage",
    "InstanceItem",
    "MainMenuCustomElement",
    "MainMenuDropdown",
    "MainMenuLogo",
    "MakeMeItem",
    "ModalFooter",
    "ModalHeader",
    "PickerItem",
    "RangeDatePicker",
    "SliderRating",
    "Snackbar",
    "TextOverflow",
    "TimePicker",
    "UploadFileToggler"
   ]
  },
  "@epam/uui-editor": {
   "VariableDeclaration": [
    "ATTACHMENT_PLUGIN_KEY",
    "ATTACHMENT_PLUGIN_TYPE",
    "attachmentPlugin",
    "baseMarksPlugin",
    "basePlugins",
    "codeBlockPlugin",
    "colorPlugin",
    "createDeserializer",
    "createSerializer",
    "defaultPlugins",
    "headerPlugin",
    "IFRAME_PLUGIN_KEY",
    "IFRAME_PLUGIN_TYPE",
    "iframePlugin",
    "IMAGE_PLUGIN_KEY",
    "IMAGE_PLUGIN_TYPE",
    "imagePlugin",
    "isEditorValueEmpty",
    "linkPlugin",
    "listPlugin",
    "migrateNode",
    "migrateSchema",
    "notePlugin",
    "noteTypes",
    "PARAGRAPH_TYPE",
    "paragraphPlugin",
    "placeholderPlugin",
    "QUOTE_PLUGIN_KEY",
    "quotePlugin",
    "SEPARATOR_KEY",
    "separatorPlugin",
    "superscriptPlugin",
    "tablePlugin",
    "TODO_ELEMENT_KEY",
    "toDoListPlugin",
    "uploadFilePlugin",
    "VIDEO_PLUGIN_KEY",
    "videoPlugin"
   ],
   "FunctionDeclaration": [
    "BoldButton",
    "CodeButton",
    "ColorButton",
    "getBlockDesirialiser",
    "getMarkDeserializer",
    "HeaderButton",
    "IframeButton",
    "ImageButton",
    "isImageSelected",
    "isPluginActive",
    "isTextSelected",
    "ItalicButton",
    "LinkButton",
    "ListButton",
    "NoteButton",
    "PlaceholderButton",
    "QuoteButton",
    "SeparatorButton",
    "SlateEditor",
    "SuperscriptButton",
    "TableButton",
    "ToDoListButton",
    "UnderlineButton",
    "VideoButton"
   ]
  },
  "@epam/uui-timeline": {
   "FunctionDeclaration": [
    "addDays",
    "addMs",
    "getHoursInFormatAMPM",
    "getleftXforCentering",
    "includeLastDay",
    "isWeekend",
    "renderBars",
    "roundDateToMidday"
   ],
   "VariableDeclaration": [
    "baseDate",
    "i18n",
    "months",
    "msPerDay",
    "msPerHour",
    "msPerMinute",
    "msPerYear",
    "scales",
    "scaleSteps"
   ],
   "ClassDeclaration": [
    "BaseTimelineCanvasComponent",
    "TimelineController",
    "TimelineEventsBar",
    "TimelineGrid",
    "TimelineNav",
    "TimelineScale",
    "TimelineTransform"
   ],
   "EnumDeclaration": [
    "Scales"
   ]
  }
 }
}