{
 "byModule": {
  "@epam/uui-core": {
   "AcceptDropParams": {
    "kind": 263,
    "typeRef": "@epam/uui-core:AcceptDropParams",
    "typeValue": {
     "raw": "AcceptDropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AcceptDropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    srcData<span class=\"token operator\">:</span> TSrcData<span class=\"token punctuation\">;</span>",
      "    dstData<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TDstData<span class=\"token punctuation\">;</span>",
      "    offsetLeft<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    offsetTop<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    targetWidth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    targetHeight<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "srcData",
      "typeValue": {
       "raw": "TSrcData"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "dstData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TDstData"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "offsetLeft",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "offsetTop",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "targetWidth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "targetHeight",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "AnalyticsEvent": {
    "kind": 264,
    "typeRef": "@epam/uui-core:AnalyticsEvent",
    "typeValue": {
     "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">AnalyticsEvent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ApiCallErrorType": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ApiCallErrorType",
    "typeValue": {
     "raw": "<span class=\"token string\">'permissionDenied'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'notFound'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'serverError'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'serviceUnavailable'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ApiCallErrorType</span> <span class=\"token operator\">=</span> <span class=\"token string\">'permissionDenied'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'notFound'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'serverError'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'serviceUnavailable'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ApiCallInfo": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ApiCallInfo",
    "typeValue": {
     "raw": "ApiCallInfo",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ApiCallInfo</span> <span class=\"token punctuation\">{</span>",
      "    url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    method<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    requestData<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ApiCallOptions<span class=\"token punctuation\">;</span>",
      "    status<span class=\"token operator\">:</span> ApiCallStatus<span class=\"token punctuation\">;</span>",
      "    httpStatus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    responseData<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        errorMessage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    errorStatus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    startedAt<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>",
      "    finishedAt<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>",
      "    attemptsCount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">dismissError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "url",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "method",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "requestData",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "options",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ApiCallOptions"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "status",
      "typeValue": {
       "raw": "<span class=\"token string\">'scheduled'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'running'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "httpStatus",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "responseData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> errorMessage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "errorStatus",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "startedAt",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Date"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "finishedAt",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Date"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "attemptsCount",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 13,
      "name": "dismissError",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "ApiCallOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ApiCallOptions",
    "typeValue": {
     "raw": "ApiCallOptions",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ApiCallOptions</span> <span class=\"token punctuation\">{</span>",
      "    fetchOptions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RequestInit<span class=\"token punctuation\">;</span>",
      "    errorHandling<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'manual'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'page'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'notification'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "fetchOptions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RequestInit"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "errorHandling",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'manual'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'page'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'notification'</span>"
      },
      "required": false
     }
    ]
   },
   "ApiContextProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ApiContextProps",
    "typeValue": {
     "raw": "ApiContextProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ApiContextProps</span> <span class=\"token punctuation\">{</span>",
      "    apiReloginPath<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    apiPingPath<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    apiServerUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "apiReloginPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "apiPingPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "apiServerUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "ApiExtensions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ApiExtensions",
    "typeValue": {
     "raw": "ApiExtensions<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ApiExtensions<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">withOptions</span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ApiCallOptions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TApi<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "withOptions",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ApiCallOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TApi"
      },
      "required": true
     }
    ]
   },
   "ApiRecoveryReason": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ApiRecoveryReason",
    "typeValue": {
     "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auth-lost'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'connection-lost'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'server-overload'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'maintenance'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ApiRecoveryReason</span> <span class=\"token operator\">=</span> <span class=\"token string\">'auth-lost'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'connection-lost'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'server-overload'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'maintenance'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ApiStatus": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ApiStatus",
    "typeValue": {
     "raw": "<span class=\"token string\">'running'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'idle'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'recovery'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ApiStatus</span> <span class=\"token operator\">=</span> <span class=\"token string\">'idle'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'running'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'recovery'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ApplyFilterOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ApplyFilterOptions",
    "typeValue": {
     "raw": "ApplyFilterOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ApplyFilterOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    filter<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'filter'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    getFilter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "getFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     }
    ]
   },
   "ApplySearchOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ApplySearchOptions",
    "typeValue": {
     "raw": "ApplySearchOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ApplySearchOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    search<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'search'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    getSearchFields<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    sortSearchByRelevance<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "sortSearchByRelevance",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "ApplySortOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ApplySortOptions",
    "typeValue": {
     "raw": "ApplySortOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ApplySortOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    sorting<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'sorting'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    sortBy<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "sorting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "sortBy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     }
    ]
   },
   "ArrayDataSourceProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ArrayDataSourceProps",
    "typeValue": {
     "raw": "ArrayDataSourceProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ArrayDataSourceProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ArrayListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:ArrayListViewProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "sortBy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "getFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "sortSearchByRelevance",
      "comment": [
       "Enables sorting of search results by relevance.",
       " - The highest priority has records, which have a full match with a search keyword.",
       " - The lower one has records, which have a search keyword at the 0 position, but not the full match.",
       " - Then, records, which contain a search keyword as a separate word, but not at the beginning.",
       " - And the lowest one - any other match of the search keyword.",
       "",
       " Example:",
       " - `search`: 'some'",
       " - `record string`: 'some word', `rank` = 4",
       " - `record string`: 'someone', `rank` = 3",
       " - `record string`: 'I know some guy', `rank` = 2",
       " - `record string`: 'awesome', `rank` = 1",
       "",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     }
    ]
   },
   "ArrayElement": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ArrayElement",
    "typeValue": {
     "raw": "ArrayElement<span class=\"token operator\">&lt;</span>ArrayType<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ArrayElement<span class=\"token operator\">&lt;</span>ArrayType<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> ArrayType <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">infer</span> ElementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> ElementType <span class=\"token operator\">:</span> <span class=\"token builtin\">never</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ArrayListViewProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ArrayListViewProps",
    "typeValue": {
     "raw": "ArrayListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ArrayListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseArrayListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    items<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "sortBy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "getFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "sortSearchByRelevance",
      "comment": [
       "Enables sorting of search results by relevance.",
       " - The highest priority has records, which have a full match with a search keyword.",
       " - The lower one has records, which have a search keyword at the 0 position, but not the full match.",
       " - Then, records, which contain a search keyword as a separate word, but not at the beginning.",
       " - And the lowest one - any other match of the search keyword.",
       "",
       " Example:",
       " - `search`: 'some'",
       " - `record string`: 'some word', `rank` = 4",
       " - `record string`: 'someone', `rank` = 3",
       " - `record string`: 'I know some guy', `rank` = 2",
       " - `record string`: 'awesome', `rank` = 1",
       "",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     }
    ]
   },
   "ArrayPickerProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ArrayPickerProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ArrayPickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span>",
      "    emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>",
      "    <span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span>",
      "    emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>",
      "    <span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 12,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "emptyValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 5,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 17,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 21,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 22,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 13,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "required": true
     },
     {
      "uid": 15,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "AsyncDataSourceProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:AsyncDataSourceProps",
    "typeValue": {
     "raw": "AsyncDataSourceProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AsyncDataSourceProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AsyncListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "api",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:AsyncListViewProps",
      "required": true
     },
     {
      "uid": 2,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "sortBy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "getFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "sortSearchByRelevance",
      "comment": [
       "Enables sorting of search results by relevance.",
       " - The highest priority has records, which have a full match with a search keyword.",
       " - The lower one has records, which have a search keyword at the 0 position, but not the full match.",
       " - Then, records, which contain a search keyword as a separate word, but not at the beginning.",
       " - And the lowest one - any other match of the search keyword.",
       "",
       " Example:",
       " - `search`: 'some'",
       " - `record string`: 'some word', `rank` = 4",
       " - `record string`: 'someone', `rank` = 3",
       " - `record string`: 'I know some guy', `rank` = 2",
       " - `record string`: 'awesome', `rank` = 1",
       "",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     }
    ]
   },
   "AsyncListViewProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:AsyncListViewProps",
    "typeValue": {
     "raw": "AsyncListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AsyncListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseArrayListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">api</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "api",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "sortBy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "getFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "sortSearchByRelevance",
      "comment": [
       "Enables sorting of search results by relevance.",
       " - The highest priority has records, which have a full match with a search keyword.",
       " - The lower one has records, which have a search keyword at the 0 position, but not the full match.",
       " - Then, records, which contain a search keyword as a separate word, but not at the beginning.",
       " - And the lowest one - any other match of the search keyword.",
       "",
       " Example:",
       " - `search`: 'some'",
       " - `record string`: 'some word', `rank` = 4",
       " - `record string`: 'someone', `rank` = 3",
       " - `record string`: 'I know some guy', `rank` = 2",
       " - `record string`: 'awesome', `rank` = 1",
       "",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseArrayListViewProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     }
    ]
   },
   "BaseArrayListViewProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:BaseArrayListViewProps",
    "typeValue": {
     "raw": "BaseArrayListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseArrayListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    getSearchFields<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    sortBy<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    getFilter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Enables sorting of search results by relevance.",
      "     * - The highest priority has records, which have a full match with a search keyword.",
      "     * - The lower one has records, which have a search keyword at the 0 position, but not the full match.",
      "     * - Then, records, which contain a search keyword as a separate word, but not at the beginning.",
      "     * - And the lowest one - any other match of the search keyword.",
      "     *",
      "     * Example:",
      "     * - `search`: 'some'",
      "     * - `record string`: 'some word', `rank` = 4",
      "     * - `record string`: 'someone', `rank` = 3",
      "     * - `record string`: 'I know some guy', `rank` = 2",
      "     * - `record string`: 'awesome', `rank` = 1",
      "     *",
      "     * @default true",
      "     */</span>",
      "    sortSearchByRelevance<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "sortBy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "getFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "sortSearchByRelevance",
      "comment": [
       "Enables sorting of search results by relevance.",
       " - The highest priority has records, which have a full match with a search keyword.",
       " - The lower one has records, which have a search keyword at the 0 position, but not the full match.",
       " - Then, records, which contain a search keyword as a separate word, but not at the beginning.",
       " - And the lowest one - any other match of the search keyword.",
       "",
       " Example:",
       " - `search`: 'some'",
       " - `record string`: 'some word', `rank` = 4",
       " - `record string`: 'someone', `rank` = 3",
       " - `record string`: 'I know some guy', `rank` = 2",
       " - `record string`: 'awesome', `rank` = 1",
       "",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     }
    ]
   },
   "BaseDatePickerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:BaseDatePickerProps",
    "typeValue": {
     "raw": "BaseDatePickerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseDatePickerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> ICanFocus<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IHasPlaceholder<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format) */</span>",
      "    format<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Filter selectable days. Days, for which this callback returns false - will be disabled */</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach DatePicker to other components, e.g. Buttons */</span>",
      "    renderTarget<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>",
      "    iconPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Disable clearing date value (e.g. via cross icon) */</span>",
      "    disableClear<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides rendering of the single day. For example, to highlight certain days */</span>",
      "    renderDay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">onDayClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** If this function returns true, the day will be highlighted as holiday */</span>",
      "    isHoliday<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    onBlur<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/) */</span>",
      "    placement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Placement<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Attributes for HTML Element */</span>",
      "    rawProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "        body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Styles for input and body components in DatePicker */</span>",
      "    inputCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    bodyCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "format",
      "comment": [
       "Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "filter",
      "comment": [
       "Filter selectable days. Days, for which this callback returns false - will be disabled"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "renderTarget",
      "comment": [
       "Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach DatePicker to other components, e.g. Buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "iconPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "disableClear",
      "comment": [
       "Disable clearing date value (e.g. via cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "renderDay",
      "comment": [
       "Overrides rendering of the single day. For example, to highlight certain days"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "isHoliday",
      "comment": [
       "If this function returns true, the day will be highlighted as holiday"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "onBlur",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "rawProps",
      "comment": [
       "Attributes for HTML Element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "inputCx",
      "comment": [
       "Styles for input and body components in DatePicker"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "bodyCx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 16,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 20,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 21,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 22,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 23,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     }
    ]
   },
   "BaseListViewProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:BaseListViewProps",
    "typeValue": {
     "raw": "BaseListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Should return unique ID of the TItem",
      "     * If omitted, we assume that every TItem has and unique id in its 'id' field.",
      "     * @param item An item to get ID of",
      "     */</span>",
      "    getId<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
      "     * In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys.",
      "     */</span>",
      "    complexIds<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Should return ID of the Item's parent. Usually it's i => i.parentId.",
      "     * If specified, Data Source will build items hierarchy.",
      "     *",
      "     * Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
      "     * - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
      "     *   to highlight parents with selected children",
      "     * - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
      "     *   We need to load parents with a separate call (if backend doesn't pre-fetch them)",
      "     */</span>",
      "    getParentId<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Specifies if rows are selectable, checkable, draggable, clickable, and more.",
      "     * See DataRowOptions for more details.",
      "     * If options depends on the item itself, use getRowOptions.",
      "     * Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
      "     * Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
      "     * @param item An item to get options for",
      "     */</span>",
      "    rowOptions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
      "     * To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
      "     * See DataRowOptions for more details.",
      "     * If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
      "     * Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
      "     * @param item An item to get options for",
      "     */</span>",
      "    getRowOptions<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Can be specified to unfold all or some items at start.",
      "     * If not specified, all rows would be folded.",
      "     */</span>",
      "    isFoldedByDefault<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
      "     * - false: All nodes are selected independently (default).",
      "     * - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
      "     * - 'implicit': Selecting a parent node means that all children are considered checked.",
      "     *   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
      "     *   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
      "     *   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
      "     *   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked.",
      "     */</span>",
      "    cascadeSelection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CascadeSelection<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Enables or disables \"select all\" checkbox. Default is true.",
      "     */</span>",
      "    selectAll<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
      "     * During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
      "     * In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
      "     * It is required to add blockers/spinners to the components, built on your own.",
      "     * If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`.",
      "     */</span>",
      "    backgroundReload<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "BaseRangeDatePickerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:BaseRangeDatePickerProps",
    "typeValue": {
     "raw": "BaseRangeDatePickerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseRangeDatePickerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>RangeDatePickerValue<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span>RangeDatePickerValue<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format) */</span>",
      "    format<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Filter selectable days. Days, for which this callback returns false - will be disabled */</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach RangeDatePicker to other components, e.g. Buttons */</span>",
      "    renderTarget<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Allows to add a custom footer to the Picker's dropdown body */</span>",
      "    renderFooter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> RangeDatePickerValue<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides rendering of the single day. For example, to highlight certain days */</span>",
      "    renderDay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">onDayClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Range presets (like 'this week', 'this month', etc.) to display at the right of the Picker's body.",
      "     * UUI provides defaults in the 'rangeDatePickerPresets' exported variable - you can use it as is, or build on top of it (e.g. add your presets)",
      "     */</span>",
      "    presets<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RangeDatePickerPresets<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Disables clearing component (with the cross icon) */</span>",
      "    disableClear<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/) */</span>",
      "    placement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Placement<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** If this function returns true, the day will be highlighted as holiday */</span>",
      "    isHoliday<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when component gets input focus */</span>",
      "    onFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when component looses input focus */</span>",
      "    onBlur<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when component is opened/closed */</span>",
      "    onOpenChange<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** rawProps as HTML attributes */</span>",
      "    rawProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "        to<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "        body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Styles for input and body components in RangeDatePicker */</span>",
      "    inputCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    bodyCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "format",
      "comment": [
       "Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "filter",
      "comment": [
       "Filter selectable days. Days, for which this callback returns false - will be disabled"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "renderTarget",
      "comment": [
       "Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach RangeDatePicker to other components, e.g. Buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderFooter",
      "comment": [
       "Allows to add a custom footer to the Picker's dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> RangeDatePickerValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderDay",
      "comment": [
       "Overrides rendering of the single day. For example, to highlight certain days"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "presets",
      "comment": [
       "Range presets (like 'this week', 'this month', etc.) to display at the right of the Picker's body.",
       " UUI provides defaults in the 'rangeDatePickerPresets' exported variable - you can use it as is, or build on top of it (e.g. add your presets)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "disableClear",
      "comment": [
       "Disables clearing component (with the cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "isHoliday",
      "comment": [
       "If this function returns true, the day will be highlighted as holiday"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "onOpenChange",
      "comment": [
       "Called when component is opened/closed"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "rawProps as HTML attributes"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> to<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "inputCx",
      "comment": [
       "Styles for input and body components in RangeDatePicker"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 15,
      "name": "bodyCx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 16,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "RangeDatePickerValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 17,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> RangeDatePickerValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 22,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 23,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 24,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     }
    ]
   },
   "BatchPromiseOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:BatchPromiseOptions",
    "typeValue": {
     "raw": "BatchPromiseOptions",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BatchPromiseOptions</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Minimum time (in ms) to pass after the last call, before triggering the batch */</span>",
      "    throttleMs<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "throttleMs",
      "comment": [
       "Minimum time (in ms) to pass after the last call, before triggering the batch"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "BlockTypes": {
    "kind": 264,
    "typeRef": "@epam/uui-core:BlockTypes",
    "typeValue": {
     "raw": "<span class=\"token string\">'attachment'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'iframe'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'image'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">BlockTypes</span> <span class=\"token operator\">=</span> <span class=\"token string\">'attachment'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'iframe'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ButtonBaseCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ButtonBaseCoreProps",
    "typeValue": {
     "raw": "ButtonBaseCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonBaseCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IClickable<span class=\"token punctuation\">,</span> ICanRedirect<span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IHasIcon<span class=\"token punctuation\">,</span> IAnalyticableClick<span class=\"token punctuation\">,</span> IHasTabIndex<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 3,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 4,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 5,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 6,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 9,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 10,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 11,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 12,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ButtonCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ButtonCoreProps",
    "typeValue": {
     "raw": "ButtonCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ButtonBaseCoreProps</span><span class=\"token punctuation\">,</span> IHasCaption<span class=\"token punctuation\">,</span> IBasicPickerToggler<span class=\"token punctuation\">,</span> IDropdownToggler<span class=\"token punctuation\">,</span> IHasPlaceholder <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Icon for drop-down toggler */</span>",
      "    dropdownIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Position of the dropdown icon ('left' of 'right') */</span>",
      "    dropdownIconPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "    countPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "    count<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 7,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 8,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 9,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 10,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 12,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 13,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 14,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 15,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 16,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 17,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 19,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 20,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 21,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     }
    ]
   },
   "ButtonSemanticProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ButtonSemanticProps",
    "typeValue": {
     "raw": "ButtonSemanticProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonSemanticProps</span> <span class=\"token punctuation\">{</span>",
      "    type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cancel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cancel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'action'</span>"
      },
      "required": false
     }
    ]
   },
   "CascadeSelection": {
    "kind": 264,
    "typeRef": "@epam/uui-core:CascadeSelection",
    "typeValue": {
     "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">CascadeSelection</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> CascadeSelectionTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">EXPLICIT</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> CascadeSelectionTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">IMPLICIT</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "CheckboxCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:CheckboxCoreProps",
    "typeValue": {
     "raw": "CheckboxCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CheckboxCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ICheckable</span><span class=\"token punctuation\">,</span> ICanFocus<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> ICanBeInvalid<span class=\"token punctuation\">,</span> IHasLabel<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 2,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 3,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 4,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 7,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 8,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 9,
      "name": "indeterminate",
      "comment": [
       "Sets checkbox in indeterminate state (neither checked or unchecked), which usually means that children elements has both values"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICheckable",
      "required": false
     },
     {
      "uid": 10,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 11,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 12,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 13,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 14,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 15,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "ClassValue": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ClassValue",
    "typeValue": {
     "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray",
     "print": [
      "<span class=\"token comment\">/* The ClassValue type is a union type that represents the valid values that can be passed as arguments to the classnames function. It can be one of the following types:",
      "- string: A string representing a class name.",
      "- number: A number representing a class name. This is useful when using CSS modules.",
      "- ClassDictionary: An object whose keys are class names and values are booleans. If the value is true, the corresponding class name will be included in the resulting string, otherwise it will be omitted.",
      "- ClassArray: An array of values of type ClassValue. This allows you to pass multiple class names or class dictionaries as arguments to classnames.",
      "- undefined: If undefined is passed as an argument, it will be ignored.",
      "- null: If null is passed as an argument, it will be ignored.",
      "- boolean: If a boolean value is passed as an argument, it will be ignored if it is false and included if it is true. */</span>",
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ClassValue</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ColumnsConfig": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ColumnsConfig",
    "typeValue": {
     "raw": "ColumnsConfig",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ColumnsConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> IColumnConfig<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "[key: string]",
      "typeValue": {
       "raw": "IColumnConfig"
      },
      "required": true
     }
    ]
   },
   "CommonContexts": {
    "kind": 263,
    "typeRef": "@epam/uui-core:CommonContexts",
    "typeValue": {
     "raw": "CommonContexts<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CommonContexts<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UuiContexts</span> <span class=\"token punctuation\">{</span>",
      "    api<span class=\"token operator\">:</span> TApi <span class=\"token operator\">&amp;</span> ApiExtensions<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    uuiApp<span class=\"token operator\">:</span> TAppContext<span class=\"token punctuation\">;</span>",
      "    history<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHistory4<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "api",
      "typeValue": {
       "raw": "TApi <span class=\"token operator\">&amp;</span> ApiExtensions<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "uuiApp",
      "typeValue": {
       "raw": "TAppContext"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "history",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IHistory4"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "uuiApi",
      "typeValue": {
       "raw": "IApiContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 5,
      "name": "uuiRouter",
      "typeValue": {
       "raw": "IRouterContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 6,
      "name": "uuiModals",
      "typeValue": {
       "raw": "IModalContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 7,
      "name": "uuiDnD",
      "typeValue": {
       "raw": "IDndContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 8,
      "name": "uuiUserSettings",
      "typeValue": {
       "raw": "IUserSettingsContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 9,
      "name": "uuiAnalytics",
      "typeValue": {
       "raw": "IAnalyticsContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 10,
      "name": "uuiErrors",
      "typeValue": {
       "raw": "IErrorContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 11,
      "name": "uuiNotifications",
      "typeValue": {
       "raw": "INotificationContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 12,
      "name": "uuiLayout",
      "typeValue": {
       "raw": "ILayoutContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 13,
      "name": "uuiLocks",
      "typeValue": {
       "raw": "ILockContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     },
     {
      "uid": 14,
      "name": "uuiSkin",
      "typeValue": {
       "raw": "SkinContext"
      },
      "from": "@epam/uui-core:UuiContexts",
      "required": true
     }
    ]
   },
   "ContextProviderProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ContextProviderProps",
    "typeValue": {
     "raw": "ContextProviderProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ContextProviderProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UuiServicesProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasChildren <span class=\"token punctuation\">{</span>",
      "    loadAppContext<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>api<span class=\"token operator\">:</span> TApi<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>TAppContext<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">onInitCompleted</span><span class=\"token punctuation\">(</span>svc<span class=\"token operator\">:</span> CommonContexts<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    history<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHistory4<span class=\"token punctuation\">;</span>",
      "    gaCode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "loadAppContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>api<span class=\"token operator\">:</span> TApi<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>TAppContext<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "onInitCompleted",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>svc<span class=\"token operator\">:</span> CommonContexts<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "history",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IHistory4"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "gaCode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "apiDefinition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>processRequest<span class=\"token operator\">:</span> IProcessRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TApi"
      },
      "from": "@epam/uui-core:UuiServicesProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "skinContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ISkin"
      },
      "from": "@epam/uui-core:UuiServicesProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "apiReloginPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "apiPingPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "apiServerUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     }
    ]
   },
   "CX": {
    "kind": 264,
    "typeRef": "@epam/uui-core:CX",
    "typeValue": {
     "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray",
     "print": [
      "<span class=\"token comment\">// CX type is a union type that represents the valid values to pass CSS classes</span>",
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">CX</span></span> <span class=\"token operator\">=</span> ClassValue<span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "DataColumnProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataColumnProps",
    "typeValue": {
     "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataColumnProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ICanBeFixed</span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IClickable<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> Attributes <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Unique key to identify the column. Used to reference columns, e.g. in ColumnsConfig.",
      "     * Also, used as React key for cells, header cells, and other components inside tables.",
      "     */</span>",
      "    key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Column caption. Can be a plain text, or any React Component */</span>",
      "    caption<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * The width of the column. Usually, columns has exact this width.",
      "     * When all columns fit, and there's spare horizontal space, you can use 'grow' prop to use this space for certain columns.",
      "     * DataTable's columns can't shrink below width - table will add horizontal scrolling instead of shrinking columns",
      "     */</span>",
      "    width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Minimal width to which column can be resized manually */</span>",
      "    minWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** The flex grow for the column. Allows column to grow in width if there's spare horizontal space */</span>",
      "    grow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Aligns cell content horizontally */</span>",
      "    textAlign<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "    justifyContent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>JustifyContentProperty<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Align cell content vertically */</span>",
      "    alignSelf<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>AlignSelfProperty<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Enables sorting arrows on the column.",
      "     * Sorting state is kept in DataSourceState.sorting",
      "     */</span>",
      "    isSortable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Disallows to hide column via ColumnsConfiguration */</span>",
      "    isAlwaysVisible<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Makes column hidden by default. User can turn it on later, via ColumnsConfiguration */</span>",
      "    isHiddenByDefault<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Info tooltip displayed in the table header */</span>",
      "    info<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     *  Should return true, if current filter affects the column.",
      "     * Usually, this prop is filled automatically by the useTableState hook.",
      "     * If you use the useTableState hook, you don't need to specify it manually.",
      "     */</span>",
      "    isFilterActive<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">,</span> column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    canCopy<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>cell<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    canAcceptCopy<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>from<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> to<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Render the cell content. The item props is the value of the whole row (TItem). */</span>",
      "    render<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides rendering of the whole cell */</span>",
      "    renderCell<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>cellProps<span class=\"token operator\">:</span> RenderCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Renders column header dropdown.",
      "     * Usually, this prop is filled automatically by the useTableState hook.",
      "     * If you use the useTableState hook, you don't need to specify it manually.",
      "     */</span>",
      "    renderDropdown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Renders column filter.",
      "     * If you use useTableState hook, and you specify filter for the column, default filter will be rendered automatically.",
      "     * You can use this prop to render a custom filter component.",
      "     */</span>",
      "    renderFilter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>lens<span class=\"token operator\">:</span> ILens<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> dropdownProps<span class=\"token operator\">:</span> IDropdownBodyProps<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "key",
      "comment": [
       "Unique key to identify the column. Used to reference columns, e.g. in ColumnsConfig.",
       " Also, used as React key for cells, header cells, and other components inside tables."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "caption",
      "comment": [
       "Column caption. Can be a plain text, or any React Component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "width",
      "comment": [
       "The width of the column. Usually, columns has exact this width.",
       " When all columns fit, and there's spare horizontal space, you can use 'grow' prop to use this space for certain columns.",
       " DataTable's columns can't shrink below width - table will add horizontal scrolling instead of shrinking columns"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "minWidth",
      "comment": [
       "Minimal width to which column can be resized manually"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "grow",
      "comment": [
       "The flex grow for the column. Allows column to grow in width if there's spare horizontal space"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "textAlign",
      "comment": [
       "Aligns cell content horizontally"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "justifyContent",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "alignSelf",
      "comment": [
       "Align cell content vertically"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "isSortable",
      "comment": [
       "Enables sorting arrows on the column.",
       " Sorting state is kept in DataSourceState.sorting"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "isAlwaysVisible",
      "comment": [
       "Disallows to hide column via ColumnsConfiguration"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "isHiddenByDefault",
      "comment": [
       "Makes column hidden by default. User can turn it on later, via ColumnsConfiguration"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "info",
      "comment": [
       "Info tooltip displayed in the table header"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "isFilterActive",
      "comment": [
       "Should return true, if current filter affects the column.",
       " Usually, this prop is filled automatically by the useTableState hook.",
       " If you use the useTableState hook, you don't need to specify it manually."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">,</span> column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "canCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>cell<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 15,
      "name": "canAcceptCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>from<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 16,
      "name": "render",
      "comment": [
       "Render the cell content. The item props is the value of the whole row (TItem)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 17,
      "name": "renderCell",
      "comment": [
       "Overrides rendering of the whole cell"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>cellProps<span class=\"token operator\">:</span> RenderCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 18,
      "name": "renderDropdown",
      "comment": [
       "Renders column header dropdown.",
       " Usually, this prop is filled automatically by the useTableState hook.",
       " If you use the useTableState hook, you don't need to specify it manually."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 19,
      "name": "renderFilter",
      "comment": [
       "Renders column filter.",
       " If you use useTableState hook, and you specify filter for the column, default filter will be rendered automatically.",
       " You can use this prop to render a custom filter component."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>lens<span class=\"token operator\">:</span> IDropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 20,
      "name": "fix",
      "comment": [
       "If specified, will make column fixed - it would not scroll horizontally"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ICanBeFixed",
      "required": false
     },
     {
      "uid": 21,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 22,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 23,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLDivElement <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "DataQuery": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataQuery",
    "typeValue": {
     "raw": "DataQuery<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataQuery<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataQueryFilter<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    sorting<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    range<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataQueryRange<span class=\"token punctuation\">;</span>",
      "    search<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataQueryFilter<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "sorting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "range",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataQueryRange"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "DataQueryFilter": {
    "kind": 264,
    "typeRef": "@epam/uui-core:DataQueryFilter",
    "typeValue": {
     "raw": "DataQueryFilter<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DataQueryFilter<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token punctuation\">[</span>TPropName <span class=\"token keyword\">in</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataQueryFilterCondition<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span>TPropName<span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "DataQueryFilterCondition": {
    "kind": 264,
    "typeRef": "@epam/uui-core:DataQueryFilterCondition",
    "typeValue": {
     "raw": "TField <span class=\"token operator\">|</span> FilterPredicate<span class=\"token operator\">&lt;</span>TField<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DataQueryFilterCondition<span class=\"token operator\">&lt;</span>TField<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> TField <span class=\"token operator\">|</span> FilterPredicate<span class=\"token operator\">&lt;</span>TField<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "DataQueryRange": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataQueryRange",
    "typeValue": {
     "raw": "DataQueryRange",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataQueryRange</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    count<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "DataRowOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataRowOptions",
    "typeValue": {
     "raw": "DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** A part of the DataRowProps, which can be configured for each data row via getRowOptions callback.",
      " * Other props in DataRowProps are computed when generating rows.",
      " */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IDisableable</span><span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** If row needs a checkbox, this field should be specified and it props can be configured here */</span>",
      "    checkbox<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IDisableable <span class=\"token operator\">&amp;</span> ICanBeInvalid<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row is selectable (for whole-row single-selection, multi-selection via checkbox are configured with the checkbox prop) */</span>",
      "    isSelectable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Configures row drag-n-drop options - if it can be dragged, can rows can be dropped into it, etc. */</span>",
      "    dnd<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IDndActor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Row click handler */</span>",
      "    onClick<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Can be specified to make row act as a link (plain or SPA) */</span>",
      "    link<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Link<span class=\"token punctuation\">;</span>",
      "    pin<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "A part of the DataRowProps, which can be configured for each data row via getRowOptions callback.",
     " Other props in DataRowProps are computed when generating rows."
    ],
    "props": [
     {
      "uid": 1,
      "name": "checkbox",
      "comment": [
       "If row needs a checkbox, this field should be specified and it props can be configured here"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> ICanBeInvalid"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isSelectable",
      "comment": [
       "True if row is selectable (for whole-row single-selection, multi-selection via checkbox are configured with the checkbox prop)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "dnd",
      "comment": [
       "Configures row drag-n-drop options - if it can be dragged, can rows can be dropped into it, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IDndActor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "onClick",
      "comment": [
       "Row click handler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "link",
      "comment": [
       "Can be specified to make row act as a link (plain or SPA)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "pin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 14,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "DataRowPathItem": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataRowPathItem",
    "typeValue": {
     "raw": "DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Holds parent info for data rows */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "    value<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">;</span>",
      "    isLastChild<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Holds parent info for data rows"
    ],
    "props": [
     {
      "uid": 1,
      "name": "id",
      "typeValue": {
       "raw": "TId"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "value",
      "typeValue": {
       "raw": "TItem"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isLastChild",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     }
    ]
   },
   "DataRowProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:DataRowProps",
    "typeValue": {
     "raw": "DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** DataRowProps is a base shape of props, passed to items in various lists or trees.",
      " *",
      " * Despite 'Row' in it's name, it doesn't directly connected to a table.",
      " * We use DataRowProps as a base for DataTableRowProps and DataPickerRowProps.",
      " * But it can also be used for any user-built list, tree, custom picker rows, or even a grid of cards.",
      " *",
      " * Array of DataRowProps describes a part of hierarchical list, while still being a flat array (not a tree of some kind).",
      " * We use depth, indent, path, and other props to show row's place in the hierarchy.",
      " * This is very handy to handle rendering, especially in virtual scrolling scenarios.",
      " *",
      " * DataSources primary job is to convert various data stores into arrays of DataRowProps.",
      " */</span>",
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> FlexRowProps <span class=\"token operator\">&amp;</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** ID of the TItem rows displays */</span>",
      "    id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Key to be used as component's key when rendering. Usually, it's stringified ID */</span>",
      "    rowKey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Index of the row, from the top of the list. This doesn't account any hierarchy. */</span>",
      "    index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** The data item (TItem) row displays. Will be undefined if isLoading = true. */</span>",
      "    value<span class=\"token operator\">:</span> TItem <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** ID of the parent TItem */</span>",
      "    parentId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Hierarchical path from the root node to the item (excluding the item itself) */</span>",
      "    path<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/* visual */</span>",
      "    <span class=\"token comment\">/** Depth of the row in tree, 0 for the top-level */</span>",
      "    depth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Indent of the item, to show hierarchy.",
      "         *  Unlike depth, it contains additional logic, to not add unnecessary indents:",
      "         *  if all children of node has no children, all nodes would get the same indent as parent.",
      "         */</span>",
      "    indent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row is in loading state. 'value' is empty in this case */</span>",
      "    isLoading<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isUnknown<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row be folded or unfolded (usually because it contains children) */</span>",
      "    isFoldable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row is currently folded */</span>",
      "    isFolded<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row is checked with checkbox */</span>",
      "    isChecked<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row has checkbox and can be checkable */</span>",
      "    isCheckable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if some of row's children are checked.",
      "         * Used to show 'indefinite' checkbox state, to show user that something inside is checked */</span>",
      "    isChildrenChecked<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row is selected (in single-select mode, or in case when interface use both single row selection and checkboxes) */</span>",
      "    isSelected<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if any of row's children is selected. */</span>",
      "    isChildrenSelected<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row is focused. Focus can be changed via keyboard arrow keys, or by hovering mouse on top of the row */</span>",
      "    isFocused<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if row is the last child of his parent */</span>",
      "    isLastChild<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/* events */</span>",
      "    <span class=\"token comment\">/** Handles row folding change.",
      "         * We demand to pass the row as well, to avoid creating closures for each row.",
      "         */</span>",
      "    onFold<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Handles row click.",
      "         * We demand to pass the row as well, to avoid creating closures for each row.",
      "         */</span>",
      "    onClick<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Handles row checkbox change.",
      "         * We demand to pass the row as well, to avoid creating closures for each row.",
      "         */</span>",
      "    onCheck<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Handles row selection.",
      "         * We demand to pass the row as well, to avoid creating closures for each row.",
      "         */</span>",
      "    onSelect<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Handles row focusing.",
      "         */</span>",
      "    onFocus<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>focusedIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    isPinned<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "comment": [
     "DataRowProps is a base shape of props, passed to items in various lists or trees.",
     "",
     " Despite 'Row' in it's name, it doesn't directly connected to a table.",
     " We use DataRowProps as a base for DataTableRowProps and DataPickerRowProps.",
     " But it can also be used for any user-built list, tree, custom picker rows, or even a grid of cards.",
     "",
     " Array of DataRowProps describes a part of hierarchical list, while still being a flat array (not a tree of some kind).",
     " We use depth, indent, path, and other props to show row's place in the hierarchy.",
     " This is very handy to handle rendering, especially in virtual scrolling scenarios.",
     "",
     " DataSources primary job is to convert various data stores into arrays of DataRowProps."
    ],
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 3,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "alignItems",
      "comment": [
       "Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "columnGap",
      "comment": [
       "Flexbox column gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "rowGap",
      "comment": [
       "Flexbox row gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "checkbox",
      "comment": [
       "If row needs a checkbox, this field should be specified and it props can be configured here"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> ICanBeInvalid"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 10,
      "name": "isSelectable",
      "comment": [
       "True if row is selectable (for whole-row single-selection, multi-selection via checkbox are configured with the checkbox prop)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 11,
      "name": "dnd",
      "comment": [
       "Configures row drag-n-drop options - if it can be dragged, can rows can be dropped into it, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IDndActor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Can be specified to make row act as a link (plain or SPA)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 13,
      "name": "pin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 14,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 15,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 17,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 21,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 22,
      "name": "id",
      "comment": [
       "ID of the TItem rows displays"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "required": true
     },
     {
      "uid": 23,
      "name": "rowKey",
      "comment": [
       "Key to be used as component's key when rendering. Usually, it's stringified ID"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 24,
      "name": "index",
      "comment": [
       "Index of the row, from the top of the list. This doesn't account any hierarchy."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 25,
      "name": "parentId",
      "comment": [
       "ID of the parent TItem"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId"
      },
      "required": false
     },
     {
      "uid": 26,
      "name": "path",
      "comment": [
       "Hierarchical path from the root node to the item (excluding the item itself)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 27,
      "name": "depth",
      "comment": [
       "Depth of the row in tree, 0 for the top-level"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 28,
      "name": "indent",
      "comment": [
       "Indent of the item, to show hierarchy.",
       "  Unlike depth, it contains additional logic, to not add unnecessary indents:",
       "  if all children of node has no children, all nodes would get the same indent as parent."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 29,
      "name": "isLoading",
      "comment": [
       "True if row is in loading state. 'value' is empty in this case"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 30,
      "name": "isUnknown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 31,
      "name": "isFoldable",
      "comment": [
       "True if row be folded or unfolded (usually because it contains children)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 32,
      "name": "isFolded",
      "comment": [
       "True if row is currently folded"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 33,
      "name": "isChecked",
      "comment": [
       "True if row is checked with checkbox"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 34,
      "name": "isCheckable",
      "comment": [
       "True if row has checkbox and can be checkable"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 35,
      "name": "isChildrenChecked",
      "comment": [
       "True if some of row's children are checked.",
       " Used to show 'indefinite' checkbox state, to show user that something inside is checked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 36,
      "name": "isSelected",
      "comment": [
       "True if row is selected (in single-select mode, or in case when interface use both single row selection and checkboxes)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 37,
      "name": "isChildrenSelected",
      "comment": [
       "True if any of row's children is selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 38,
      "name": "isFocused",
      "comment": [
       "True if row is focused. Focus can be changed via keyboard arrow keys, or by hovering mouse on top of the row"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 39,
      "name": "isLastChild",
      "comment": [
       "True if row is the last child of his parent"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 40,
      "name": "onFold",
      "comment": [
       "Handles row folding change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 41,
      "name": "onCheck",
      "comment": [
       "Handles row checkbox change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 42,
      "name": "onSelect",
      "comment": [
       "Handles row selection.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 43,
      "name": "onFocus",
      "comment": [
       "Handles row focusing."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>focusedIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 44,
      "name": "isPinned",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "DataSourceListCounts": {
    "kind": 264,
    "typeRef": "@epam/uui-core:DataSourceListCounts",
    "typeValue": {
     "raw": "DataSourceListCounts",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DataSourceListCounts</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Count of rows, after applying filter, and folding on tree nodes.",
      "     * Obsolete! Please switch to exactRowsCount / knownRowsCount",
      "     */</span>",
      "    rowsCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Count of rows, if all rows loaded. Can be null while initial loading, or if API doesn't return count  */</span>",
      "    exactRowsCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * There's at least knownRowsCount rows. There can be more if list is lazy loaded.",
      "     * Equals to exactRowsCount if all rows are loaded, or if API returns rows count",
      "     * Otherwise, exactRowsCount will be null, and knownRowsCount will specify number of loaded rows.",
      "     */</span>",
      "    knownRowsCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Total count of items, before applying the filter. If there's a tree, it counts all nodes, including folded children  */</span>",
      "    totalCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rowsCount",
      "comment": [
       "Count of rows, after applying filter, and folding on tree nodes.",
       " Obsolete! Please switch to exactRowsCount / knownRowsCount"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "exactRowsCount",
      "comment": [
       "Count of rows, if all rows loaded. Can be null while initial loading, or if API doesn't return count"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "knownRowsCount",
      "comment": [
       "There's at least knownRowsCount rows. There can be more if list is lazy loaded.",
       " Equals to exactRowsCount if all rows are loaded, or if API returns rows count",
       " Otherwise, exactRowsCount will be null, and knownRowsCount will specify number of loaded rows."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "totalCount",
      "comment": [
       "Total count of items, before applying the filter. If there's a tree, it counts all nodes, including folded children"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "DataSourceListProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataSourceListProps",
    "typeValue": {
     "raw": "DataSourceListProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataSourceListProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataSourceListCounts</span> <span class=\"token punctuation\">{</span>",
      "    selectAll<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ICheckable<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Signals that data is reloading on search/sort/filter/reload.",
      "     */</span>",
      "    isReloading<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "selectAll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICheckable"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isReloading",
      "comment": [
       "Signals that data is reloading on search/sort/filter/reload."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "rowsCount",
      "comment": [
       "Count of rows, after applying filter, and folding on tree nodes.",
       " Obsolete! Please switch to exactRowsCount / knownRowsCount"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 4,
      "name": "exactRowsCount",
      "comment": [
       "Count of rows, if all rows loaded. Can be null while initial loading, or if API doesn't return count"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 5,
      "name": "knownRowsCount",
      "comment": [
       "There's at least knownRowsCount rows. There can be more if list is lazy loaded.",
       " Equals to exactRowsCount if all rows are loaded, or if API returns rows count",
       " Otherwise, exactRowsCount will be null, and knownRowsCount will specify number of loaded rows."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 6,
      "name": "totalCount",
      "comment": [
       "Total count of items, before applying the filter. If there's a tree, it counts all nodes, including folded children"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     }
    ]
   },
   "DataSourceState": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataSourceState",
    "typeValue": {
     "raw": "DataSourceState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Holds state of a components displaying lists - like tables. Holds virtual list position, filter, search, selection, etc. */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataSourceState<span class=\"token operator\">&lt;</span>TFilter <span class=\"token operator\">=</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">VirtualListState</span> <span class=\"token punctuation\">{</span>",
      "    search<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    checked<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    folded<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">;</span>",
      "    sorting<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    selectedId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "    focusedIndex<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    page<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    pageSize<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Holds state of a components displaying lists - like tables. Holds virtual list position, filter, search, selection, etc."
    ],
    "props": [
     {
      "uid": 1,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "checked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "folded",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "sorting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "selectedId",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "focusedIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "page",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "pageSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "scrollTo",
      "comment": [
       "Virtual list ensures that row with this Index is within the visible area, if not Virtual List .",
       " Virtual list updates this value on scroll to null when appear in the visible area.",
       " If this value is updated manually, Virtual List would scroll to the specified items.",
       " It would attempt to put scroll so this item will be at the top of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ScrollToConfig"
      },
      "from": "@epam/uui-core:VirtualListState",
      "required": false
     },
     {
      "uid": 11,
      "name": "topIndex",
      "comment": [
       "Index of the topmost item, in rendered batch.",
       " Note - this item might not be visible, as Virtual List maintain some reserve of rows on top / at the bottom of the list"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:VirtualListRange",
      "required": false
     },
     {
      "uid": 12,
      "name": "visibleCount",
      "comment": [
       "Number of currently rendered items.",
       " Virtual list updates this value automatically, if it too small.",
       " Note Virtual List renders more items, that actually visible,",
       " as it need maintain some reserve of rows on top / at the bottom of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:VirtualListRange",
      "required": false
     }
    ]
   },
   "DataTableCellOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableCellOptions",
    "typeValue": {
     "raw": "DataTableCellOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableCellOptions<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Key to use as component's key */</span>",
      "    key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** DataTableRowsProps object for the table row the cell is at */</span>",
      "    rowProps<span class=\"token operator\">:</span> DataTableRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** DataColumnProps object for the column the cell is at */</span>",
      "    column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Column index in table  */</span>",
      "    index<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if the cell is in the first column */</span>",
      "    isFirstColumn<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if the cell is in the last column */</span>",
      "    isLastColumn<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** HTML tabIndex attribute to set on the cell */</span>",
      "    tabIndex<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'tabIndex'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "key",
      "comment": [
       "Key to use as component's key"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "rowProps",
      "comment": [
       "DataTableRowsProps object for the table row the cell is at"
      ],
      "typeValue": {
       "raw": "DataTableRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "column",
      "comment": [
       "DataColumnProps object for the column the cell is at"
      ],
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "index",
      "comment": [
       "Column index in table"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "isFirstColumn",
      "comment": [
       "True if the cell is in the first column"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "isLastColumn",
      "comment": [
       "True if the cell is in the last column"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "tabIndex",
      "comment": [
       "HTML tabIndex attribute to set on the cell"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "DataTableCellProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableCellProps",
    "typeValue": {
     "raw": "DataTableCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableCellProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TCellValue <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataTableCellOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>IEditable<span class=\"token operator\">&lt;</span>TCellValue<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Add-on controls to put before the cell content (folding arrow, checkbox, etc.) */</span>",
      "    addons<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides default loading placeholder ('skeleton') rendering  */</span>",
      "    renderPlaceholder<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>cellProps<span class=\"token operator\">:</span> DataTableCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    renderUnknown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>cellProps<span class=\"token operator\">:</span> DataTableCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * If passed, the cell is rendered as editable - receives focus, show validation errors.",
      "     * All necessary props for the editor are passed as argument:",
      "     * - props implements IEditable and can be passed directly to suitable component (like TextInput)",
      "     * - ICanFocus props are passed as well. Component should implement it so cell focus highlight works properly",
      "     * - mode='cell' prop is passed to render UUI components in 'cell' mode",
      "     * - rowProps is passed so you depend on additional info about the row itself",
      "     */</span>",
      "    renderEditor<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> RenderEditorProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides default tooltip, used to show validation message if the cell is invalid */</span>",
      "    renderTooltip<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> ICanBeInvalid <span class=\"token operator\">&amp;</span> TooltipCoreProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "addons",
      "comment": [
       "Add-on controls to put before the cell content (folding arrow, checkbox, etc.)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "renderPlaceholder",
      "comment": [
       "Overrides default loading placeholder ('skeleton') rendering"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>cellProps<span class=\"token operator\">:</span> DataTableCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "renderUnknown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>cellProps<span class=\"token operator\">:</span> DataTableCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderEditor",
      "comment": [
       "If passed, the cell is rendered as editable - receives focus, show validation errors.",
       " All necessary props for the editor are passed as argument:",
       " - props implements IEditable and can be passed directly to suitable component (like TextInput)",
       " - ICanFocus props are passed as well. Component should implement it so cell focus highlight works properly",
       " - mode='cell' prop is passed to render UUI components in 'cell' mode",
       " - rowProps is passed so you depend on additional info about the row itself"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> RenderEditorProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderTooltip",
      "comment": [
       "Overrides default tooltip, used to show validation message if the cell is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> TooltipCoreProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "key",
      "comment": [
       "Key to use as component's key"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 7,
      "name": "rowProps",
      "comment": [
       "DataTableRowsProps object for the table row the cell is at"
      ],
      "typeValue": {
       "raw": "DataTableRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 8,
      "name": "column",
      "comment": [
       "DataColumnProps object for the column the cell is at"
      ],
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 9,
      "name": "index",
      "comment": [
       "Column index in table"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": false
     },
     {
      "uid": 10,
      "name": "isFirstColumn",
      "comment": [
       "True if the cell is in the first column"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 11,
      "name": "isLastColumn",
      "comment": [
       "True if the cell is in the last column"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 12,
      "name": "tabIndex",
      "comment": [
       "HTML tabIndex attribute to set on the cell"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": false
     },
     {
      "uid": 13,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 14,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TCellValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TCellValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 20,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 21,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "DataTableColumnsConfigOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableColumnsConfigOptions",
    "typeValue": {
     "raw": "DataTableColumnsConfigOptions",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableColumnsConfigOptions</span> <span class=\"token punctuation\">{</span>",
      "    allowColumnsReordering<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    allowColumnsResizing<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "allowColumnsReordering",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "allowColumnsResizing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "DataTableConfigModalParams": {
    "kind": 264,
    "typeRef": "@epam/uui-core:DataTableConfigModalParams",
    "typeValue": {
     "raw": "DataTableConfigModalParams",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DataTableConfigModalParams</span> <span class=\"token operator\">=</span> IEditable<span class=\"token operator\">&lt;</span>DataSourceState<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    columns<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 2,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 3,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 4,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 7,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 8,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 9,
      "name": "columns",
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     }
    ]
   },
   "DataTableHeaderCellProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableHeaderCellProps",
    "typeValue": {
     "raw": "DataTableHeaderCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableHeaderCellProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>DataTableState<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IDropdownToggler<span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> DataTableColumnsConfigOptions <span class=\"token punctuation\">{</span>",
      "    key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    isFirstColumn<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isLastColumn<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    selectAll<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ICheckable<span class=\"token punctuation\">;</span>",
      "    isFilterActive<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    sortDirection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SortDirection<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">onSort</span><span class=\"token punctuation\">(</span>dir<span class=\"token operator\">:</span> SortDirection<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    onDrop<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DropParams<span class=\"token operator\">&lt;</span>DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    renderFilter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>dropdownProps<span class=\"token operator\">:</span> IDropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "column",
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isFirstColumn",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "isLastColumn",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "selectAll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICheckable"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "isFilterActive",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "sortDirection",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'asc'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'desc'</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "onSort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>dir<span class=\"token operator\">:</span> SortDirection<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "onDrop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "renderFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>dropdownProps<span class=\"token operator\">:</span> IDropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 12,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 13,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 14,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 15,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 18,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 19,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 20,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 21,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 25,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 26,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 27,
      "name": "allowColumnsReordering",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableColumnsConfigOptions",
      "required": false
     },
     {
      "uid": 28,
      "name": "allowColumnsResizing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableColumnsConfigOptions",
      "required": false
     }
    ]
   },
   "DataTableHeaderRowProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableHeaderRowProps",
    "typeValue": {
     "raw": "DataTableHeaderRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableHeaderRowProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>DataTableState<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> DataTableColumnsConfigOptions <span class=\"token punctuation\">{</span>",
      "    columns<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    selectAll<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ICheckable<span class=\"token punctuation\">;</span>",
      "    onConfigButtonClick<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DataTableConfigModalParams<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    renderCell<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataTableHeaderCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    renderConfigButton<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "columns",
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "selectAll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICheckable"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onConfigButtonClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DataTableConfigModalParams<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderCell",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataTableHeaderCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderConfigButton",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 12,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 13,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 14,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 15,
      "name": "allowColumnsReordering",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableColumnsConfigOptions",
      "required": false
     },
     {
      "uid": 16,
      "name": "allowColumnsResizing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableColumnsConfigOptions",
      "required": false
     }
    ]
   },
   "DataTableRowProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableRowProps",
    "typeValue": {
     "raw": "DataTableRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableRowProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    columns<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    renderCell<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataTableCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactNode<span class=\"token punctuation\">;</span>",
      "    renderDropMarkers<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DndActorRenderParams<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "columns",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "renderCell",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataTableCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "renderDropMarkers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DndActorRenderParams<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 5,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 6,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 7,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 8,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "alignItems",
      "comment": [
       "Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "columnGap",
      "comment": [
       "Flexbox column gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "rowGap",
      "comment": [
       "Flexbox row gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "checkbox",
      "comment": [
       "If row needs a checkbox, this field should be specified and it props can be configured here"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> ICanBeInvalid"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 13,
      "name": "isSelectable",
      "comment": [
       "True if row is selectable (for whole-row single-selection, multi-selection via checkbox are configured with the checkbox prop)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 14,
      "name": "dnd",
      "comment": [
       "Configures row drag-n-drop options - if it can be dragged, can rows can be dropped into it, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IDndActor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 15,
      "name": "link",
      "comment": [
       "Can be specified to make row act as a link (plain or SPA)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 16,
      "name": "pin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 17,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 18,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 19,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 24,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 25,
      "name": "id",
      "comment": [
       "ID of the TItem rows displays"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 26,
      "name": "rowKey",
      "comment": [
       "Key to be used as component's key when rendering. Usually, it's stringified ID"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 27,
      "name": "index",
      "comment": [
       "Index of the row, from the top of the list. This doesn't account any hierarchy."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 28,
      "name": "parentId",
      "comment": [
       "ID of the parent TItem"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 29,
      "name": "path",
      "comment": [
       "Hierarchical path from the root node to the item (excluding the item itself)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 30,
      "name": "depth",
      "comment": [
       "Depth of the row in tree, 0 for the top-level"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 31,
      "name": "indent",
      "comment": [
       "Indent of the item, to show hierarchy.",
       "  Unlike depth, it contains additional logic, to not add unnecessary indents:",
       "  if all children of node has no children, all nodes would get the same indent as parent."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 32,
      "name": "isLoading",
      "comment": [
       "True if row is in loading state. 'value' is empty in this case"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 33,
      "name": "isUnknown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 34,
      "name": "isFoldable",
      "comment": [
       "True if row be folded or unfolded (usually because it contains children)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 35,
      "name": "isFolded",
      "comment": [
       "True if row is currently folded"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 36,
      "name": "isChecked",
      "comment": [
       "True if row is checked with checkbox"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 37,
      "name": "isCheckable",
      "comment": [
       "True if row has checkbox and can be checkable"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "isChildrenChecked",
      "comment": [
       "True if some of row's children are checked.",
       " Used to show 'indefinite' checkbox state, to show user that something inside is checked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 39,
      "name": "isSelected",
      "comment": [
       "True if row is selected (in single-select mode, or in case when interface use both single row selection and checkboxes)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 40,
      "name": "isChildrenSelected",
      "comment": [
       "True if any of row's children is selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 41,
      "name": "isFocused",
      "comment": [
       "True if row is focused. Focus can be changed via keyboard arrow keys, or by hovering mouse on top of the row"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 42,
      "name": "isLastChild",
      "comment": [
       "True if row is the last child of his parent"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 43,
      "name": "onFold",
      "comment": [
       "Handles row folding change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 44,
      "name": "onCheck",
      "comment": [
       "Handles row checkbox change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 45,
      "name": "onSelect",
      "comment": [
       "Handles row selection.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 46,
      "name": "onFocus",
      "comment": [
       "Handles row focusing."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>focusedIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 47,
      "name": "isPinned",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     }
    ]
   },
   "DataTableSelectedCellData": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableSelectedCellData",
    "typeValue": {
     "raw": "DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    row<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "column",
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "row",
      "typeValue": {
       "raw": "DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "DataTableState": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DataTableState",
    "typeValue": {
     "raw": "DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableState<span class=\"token operator\">&lt;</span>TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TViewState <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataSourceState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    columnsConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ColumnsConfig<span class=\"token punctuation\">;</span>",
      "    filtersConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FiltersConfig<span class=\"token punctuation\">;</span>",
      "    presetId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    viewState<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TViewState<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "columnsConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ColumnsConfig"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "filtersConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> FiltersConfig<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "presetId",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "viewState",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TViewState"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 6,
      "name": "checked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 7,
      "name": "folded",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 8,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 9,
      "name": "sorting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 10,
      "name": "selectedId",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 11,
      "name": "focusedIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 12,
      "name": "page",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 13,
      "name": "pageSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceState",
      "required": false
     },
     {
      "uid": 14,
      "name": "scrollTo",
      "comment": [
       "Virtual list ensures that row with this Index is within the visible area, if not Virtual List .",
       " Virtual list updates this value on scroll to null when appear in the visible area.",
       " If this value is updated manually, Virtual List would scroll to the specified items.",
       " It would attempt to put scroll so this item will be at the top of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ScrollToConfig"
      },
      "from": "@epam/uui-core:VirtualListState",
      "required": false
     },
     {
      "uid": 15,
      "name": "topIndex",
      "comment": [
       "Index of the topmost item, in rendered batch.",
       " Note - this item might not be visible, as Virtual List maintain some reserve of rows on top / at the bottom of the list"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:VirtualListRange",
      "required": false
     },
     {
      "uid": 16,
      "name": "visibleCount",
      "comment": [
       "Number of currently rendered items.",
       " Virtual list updates this value automatically, if it too small.",
       " Note Virtual List renders more items, that actually visible,",
       " as it need maintain some reserve of rows on top / at the bottom of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:VirtualListRange",
      "required": false
     }
    ]
   },
   "DatePickerCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DatePickerCoreProps",
    "typeValue": {
     "raw": "DatePickerCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DatePickerCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseDatePickerProps</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** render prop to add a custom footer inside the DatePicker dropdown body */</span>",
      "    renderFooter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "renderFooter",
      "comment": [
       "render prop to add a custom footer inside the DatePicker dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "format",
      "comment": [
       "Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "filter",
      "comment": [
       "Filter selectable days. Days, for which this callback returns false - will be disabled"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "renderTarget",
      "comment": [
       "Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach DatePicker to other components, e.g. Buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "iconPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "disableClear",
      "comment": [
       "Disable clearing date value (e.g. via cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "renderDay",
      "comment": [
       "Overrides rendering of the single day. For example, to highlight certain days"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "isHoliday",
      "comment": [
       "If this function returns true, the day will be highlighted as holiday"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "onBlur",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Attributes for HTML Element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "inputCx",
      "comment": [
       "Styles for input and body components in DatePicker"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "bodyCx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 20,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 21,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 22,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 23,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 24,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     }
    ]
   },
   "DndActorProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DndActorProps",
    "typeValue": {
     "raw": "DndActorProps<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DndActorProps<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IDndActor<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DndActorRenderParams<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "render",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DndActorRenderParams<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "srcData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TSrcData"
      },
      "from": "@epam/uui-core:IDndActor",
      "required": false
     },
     {
      "uid": 3,
      "name": "dstData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TDstData"
      },
      "from": "@epam/uui-core:IDndActor",
      "required": false
     },
     {
      "uid": 4,
      "name": "canAcceptDrop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DropPosition<span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span>"
      },
      "from": "@epam/uui-core:IDndActor",
      "required": false
     },
     {
      "uid": 5,
      "name": "onDrop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> DropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDndActor",
      "required": false
     }
    ]
   },
   "DndActorRenderParams": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DndActorRenderParams",
    "typeValue": {
     "raw": "DndActorRenderParams",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DndActorRenderParams</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** True, if the element can be dragged. Doesn't mean that DnD is active. */</span>",
      "    isDraggable<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True, if the element is dragged out. True for placeholder left when it's element it dragged out. False for Drag Ghost. */</span>",
      "    isDraggedOut<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True, if the element is rendered as Drag Ghost. All other flags are false for drag ghost. */</span>",
      "    isDragGhost<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True, if the element is being dragged over, even if drop is not accepted by the element (canAcceptDrop returned false) */</span>",
      "    isDraggedOver<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True, if the element is being dragged over, and drop on it is accepted - canAcceptDrop returned true */</span>",
      "    isDropAccepted<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if any drag and drop operation is in progress, even if the element not being dragged */</span>",
      "    isDndInProgress<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Drag data associated with the element. Specified always, even if there is no DnD operation happening. */</span>",
      "    dragData<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Drop position. Chosen from accepted drop positions according to pointer coordinates */</span>",
      "    position<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DropPosition<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Event handlers. Component is expected to pass these events to the top element it renders.",
      "     * As onClick event on the element will be overwritten, use DndActorProps.onClick to receive click events on the element",
      "     */</span>",
      "    eventHandlers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        onTouchStart<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>TouchEvent<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "        onPointerDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "        onPointerEnter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "        onPointerMove<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "        onPointerLeave<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "        onPointerUp<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * CSS class names to add to the element.",
      "     * Some of these markers are used by the DndActor internally, so they must be added even if no used by component itself to apply styles.",
      "     */</span>",
      "    classNames<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Ref to the DOM element to perform DnD actions",
      "     */</span>",
      "    ref<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>Ref<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isDraggable",
      "comment": [
       "True, if the element can be dragged. Doesn't mean that DnD is active."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "isDraggedOut",
      "comment": [
       "True, if the element is dragged out. True for placeholder left when it's element it dragged out. False for Drag Ghost."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isDragGhost",
      "comment": [
       "True, if the element is rendered as Drag Ghost. All other flags are false for drag ghost."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "isDraggedOver",
      "comment": [
       "True, if the element is being dragged over, even if drop is not accepted by the element (canAcceptDrop returned false)"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "isDropAccepted",
      "comment": [
       "True, if the element is being dragged over, and drop on it is accepted - canAcceptDrop returned true"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "isDndInProgress",
      "comment": [
       "True if any drag and drop operation is in progress, even if the element not being dragged"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "dragData",
      "comment": [
       "Drag data associated with the element. Specified always, even if there is no DnD operation happening."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "position",
      "comment": [
       "Drop position. Chosen from accepted drop positions according to pointer coordinates"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inside'</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "eventHandlers",
      "comment": [
       "Event handlers. Component is expected to pass these events to the top element it renders.",
       " As onClick event on the element will be overwritten, use DndActorProps.onClick to receive click events on the element"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> onTouchStart<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>TouchEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerEnter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerMove<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerLeave<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerUp<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": true
     },
     {
      "uid": 10,
      "name": "classNames",
      "comment": [
       "CSS class names to add to the element.",
       " Some of these markers are used by the DndActor internally, so they must be added even if no used by component itself to apply styles."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "ref",
      "comment": [
       "Ref to the DOM element to perform DnD actions"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     }
    ]
   },
   "DndContextState": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DndContextState",
    "typeValue": {
     "raw": "DndContextState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DndContextState</span> <span class=\"token punctuation\">{</span>",
      "    isDragging<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    ghostOffsetX<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    ghostOffsetY<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    ghostWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    renderGhost<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isDragging",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "ghostOffsetX",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "ghostOffsetY",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "ghostWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderGhost",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     }
    ]
   },
   "DragGhostProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DragGhostProps",
    "typeValue": {
     "raw": "DragGhostProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DragGhostProps</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    }
   },
   "DropdownBodyProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DropdownBodyProps",
    "typeValue": {
     "raw": "DropdownBodyProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownBodyProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IDropdownBodyProps</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "togglerWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "togglerHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "arrowProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> PopperArrowProps"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     }
    ]
   },
   "DropdownPlacement": {
    "typeValue": {
     "raw": "Placement",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DropdownPlacement</span> <span class=\"token operator\">=</span> Placement<span class=\"token punctuation\">;</span>"
     ]
    },
    "typeRef": "@epam/uui-core:DropdownPlacement",
    "kind": 264
   },
   "DropdownProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DropdownProps",
    "typeValue": {
     "raw": "DropdownProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Partial<span class=\"token operator\">&lt;</span>IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">>></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function-variable function\">renderTarget</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">renderBody</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    onClose<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    isNotUnfoldable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    zIndex<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    placement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DropdownPlacement<span class=\"token punctuation\">;</span>",
      "    modifiers<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Modifier<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Should we close dropdown on click on the Toggler, if it's already open? Default is true. */</span>",
      "    openDelay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default: 0</span>",
      "    closeDelay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default: 0</span>",
      "    openOnClick<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default: true</span>",
      "    openOnHover<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default: false</span>",
      "    closeOnTargetClick<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default: true</span>",
      "    closeOnClickOutside<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default: true</span>",
      "    closeOnMouseLeave<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'toggler'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundary'</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>",
      "    portalTarget<span class=\"token operator\">?</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span>",
      "    boundaryElement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Boundary<span class=\"token punctuation\">;</span>",
      "    closeBodyOnTogglerHidden<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// default: true; Set false if you do not want to hide the dropdown body in case Toggler is out of the viewport</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "renderTarget",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "renderBody",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "isNotUnfoldable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "placement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "modifiers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>Modifier<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> object<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "openDelay",
      "comment": [
       "Should we close dropdown on click on the Toggler, if it's already open? Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "closeDelay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "openOnClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "openOnHover",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "closeOnTargetClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "closeOnClickOutside",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "closeOnMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toggler'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundary'</span>"
      },
      "required": false
     },
     {
      "uid": 15,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "required": false
     },
     {
      "uid": 16,
      "name": "boundaryElement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement <span class=\"token operator\">|</span> HTMLElement<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'clippingParents'</span>"
      },
      "required": false
     },
     {
      "uid": 17,
      "name": "closeBodyOnTogglerHidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 18,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 19,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "DropdownState": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DropdownState",
    "typeValue": {
     "raw": "DropdownState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownState</span> <span class=\"token punctuation\">{</span>",
      "    opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    bodyBoundingRect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "        x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "        width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "        height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "opened",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "bodyBoundingRect",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": true
     }
    ]
   },
   "DropParams": {
    "kind": 263,
    "typeRef": "@epam/uui-core:DropParams",
    "typeValue": {
     "raw": "DropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AcceptDropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    position<span class=\"token operator\">:</span> DropPosition<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "position",
      "typeValue": {
       "raw": "<span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inside'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "srcData",
      "typeValue": {
       "raw": "TSrcData"
      },
      "from": "@epam/uui-core:AcceptDropParams",
      "required": true
     },
     {
      "uid": 3,
      "name": "dstData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TDstData"
      },
      "from": "@epam/uui-core:AcceptDropParams",
      "required": false
     },
     {
      "uid": 4,
      "name": "offsetLeft",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:AcceptDropParams",
      "required": true
     },
     {
      "uid": 5,
      "name": "offsetTop",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:AcceptDropParams",
      "required": true
     },
     {
      "uid": 6,
      "name": "targetWidth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:AcceptDropParams",
      "required": true
     },
     {
      "uid": 7,
      "name": "targetHeight",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:AcceptDropParams",
      "required": true
     }
    ]
   },
   "DropPosition": {
    "kind": 264,
    "typeRef": "@epam/uui-core:DropPosition",
    "typeValue": {
     "raw": "<span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inside'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DropPosition</span> <span class=\"token operator\">=</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inside'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "DropPositionOptions": {
    "typeValue": {
     "raw": "Partial<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span>DropPosition<span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">>></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">DropPositionOptions</span> <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span>DropPosition<span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "typeRef": "@epam/uui-core:DropPositionOptions",
    "kind": 264
   },
   "FileUploadOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:FileUploadOptions",
    "typeValue": {
     "raw": "FileUploadOptions",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FileUploadOptions</span> <span class=\"token punctuation\">{</span>",
      "    onProgress<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>progress<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    getXHR<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token operator\">:</span> XMLHttpRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// get xhr to be able to cancel the request</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onProgress",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>progress<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "getXHR",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token operator\">:</span> XMLHttpRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     }
    ]
   },
   "FileUploadResponse": {
    "kind": 263,
    "typeRef": "@epam/uui-core:FileUploadResponse",
    "typeValue": {
     "raw": "FileUploadResponse",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FileUploadResponse</span> <span class=\"token punctuation\">{</span>",
      "    id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    path<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> BlockTypes<span class=\"token punctuation\">;</span>",
      "    extension<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    error<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        isError<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "        message<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "path",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'attachment'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'iframe'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'image'</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "extension",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "error",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isError<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> message<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     }
    ]
   },
   "FilterPredicate": {
    "kind": 264,
    "typeRef": "@epam/uui-core:FilterPredicate",
    "typeValue": {
     "raw": "FilterPredicate<span class=\"token operator\">&lt;</span>TField<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FilterPredicate<span class=\"token operator\">&lt;</span>TField<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token keyword\">in</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    nin<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    isNull<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    gt<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">;</span>",
      "    gte<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">;</span>",
      "    lt<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">;</span>",
      "    lte<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">;</span>",
      "    inRange<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RangeValue<span class=\"token punctuation\">;</span>",
      "    notInRange<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RangeValue<span class=\"token punctuation\">;</span>",
      "    eq<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">;</span>",
      "    neq<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TField<span class=\"token punctuation\">;</span>",
      "    not<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FilterPredicate<span class=\"token operator\">&lt;</span>TField<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "in",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "nin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "isNull",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "gt",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "gte",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "lt",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "lte",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "inRange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeValue"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "notInRange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeValue"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "eq",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "neq",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TField"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "not",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> FilterPredicate<span class=\"token operator\">&lt;</span>TField<span class=\"token operator\">></span>"
      },
      "required": false
     }
    ]
   },
   "FilterPredicateName": {
    "kind": 264,
    "typeRef": "@epam/uui-core:FilterPredicateName",
    "typeValue": {
     "raw": "<span class=\"token string\">'in'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'nin'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'isNull'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gte'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lte'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inRange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'notInRange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'eq'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'neq'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'not'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FilterPredicateName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">keyof</span> FilterPredicate<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "FiltersConfig": {
    "kind": 264,
    "typeRef": "@epam/uui-core:FiltersConfig",
    "typeValue": {
     "raw": "FiltersConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FiltersConfig<span class=\"token operator\">&lt;</span>TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token punctuation\">[</span>key <span class=\"token keyword\">in</span> <span class=\"token keyword\">keyof</span> TFilter<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> IFilterConfig<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "FlexCellProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:FlexCellProps",
    "typeValue": {
     "raw": "FlexCellProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FlexCellProps</span> <span class=\"token operator\">=</span> IHasCX <span class=\"token operator\">&amp;</span> IClickable <span class=\"token operator\">&amp;</span> IHasRawProps<span class=\"token operator\">&lt;</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token operator\">&amp;</span> Attributes <span class=\"token operator\">&amp;</span> IHasChildren <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** CSS width. Set to 'auto' to make FlexCell resize to it's content */</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS min-width */</span>",
      "    minWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Flexbox flex-grow property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-flex-grow) */</span>",
      "    grow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Flexbox shrink property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-flex-shrink) */</span>",
      "    shrink<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS text-align property */</span>",
      "    textAlign<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Flexbox align-self property. Aligns items vertically for horizontal flexbox. [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-align-self) */</span>",
      "    alignSelf<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>AlignSelfProperty<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Standard style attribute. Styles are added to element style, overriding supplied flex styles */</span>",
      "    style<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>CSSProperties<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 5,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 6,
      "name": "width",
      "comment": [
       "CSS width. Set to 'auto' to make FlexCell resize to it's content"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'100%'</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "minWidth",
      "comment": [
       "CSS min-width"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "grow",
      "comment": [
       "Flexbox flex-grow property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-flex-grow)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "shrink",
      "comment": [
       "Flexbox shrink property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-flex-shrink)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "textAlign",
      "comment": [
       "CSS text-align property"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "alignSelf",
      "comment": [
       "Flexbox align-self property. Aligns items vertically for horizontal flexbox. [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-align-self)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "style",
      "comment": [
       "Standard style attribute. Styles are added to element style, overriding supplied flex styles"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "required": false
     }
    ]
   },
   "FlexRowProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:FlexRowProps",
    "typeValue": {
     "raw": "FlexRowProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FlexRowProps</span> <span class=\"token operator\">=</span> IHasCX <span class=\"token operator\">&amp;</span> IClickable <span class=\"token operator\">&amp;</span> Attributes <span class=\"token operator\">&amp;</span> IHasChildren <span class=\"token operator\">&amp;</span> IHasRawProps<span class=\"token operator\">&lt;</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) */</span>",
      "    alignItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Flexbox column gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap) */</span>",
      "    columnGap<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Flexbox row gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap) */</span>",
      "    rowGap<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 3,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "alignItems",
      "comment": [
       "Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "columnGap",
      "comment": [
       "Flexbox column gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "rowGap",
      "comment": [
       "Flexbox row gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span>"
      },
      "required": false
     }
    ]
   },
   "FormProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:FormProps",
    "typeValue": {
     "raw": "FormProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Current value of the form state */</span>",
      "    value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Render the form body, provided by form state",
      "     * */</span>",
      "    <span class=\"token function-variable function\">renderForm</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IFormApi<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Returns form metadata - information used to validate the form.",
      "     * @param state Metadata can depend on state, and will be re-computed on updates",
      "     */</span>",
      "    getMetadata<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Metadata<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Occurs when 'save' function is called on Form.",
      "     * Should save form data (usually with API call to server).",
      "     * Server can also reject form, and provide validation errors in response.",
      "     * @param state Form state to save",
      "     */</span>",
      "    <span class=\"token function\">onSave</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>FormSaveResponse<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Called when form is unmounted, but user still have unsaved changes.",
      "     * Accepts a Promise&lt;boolean> to be returned. If promise resolves to true - save procedure is performed.",
      "     * The common use-case is to show a modal with \"Save Changes?\" dialog",
      "     * Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it.",
      "     */</span>",
      "    beforeLeave<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Used to restore unsaved user edits from the last session (usually to localstorage, via uuiUserSettings context)",
      "     * If unsaved changes are detected, this callback is called. If it is resolved - the form restores unsaved edits.",
      "     * The common use-case is to show a modal with \"You have unsaved changes, restore them?\" dialog",
      "     * Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it.",
      "     */</span>",
      "    loadUnsavedChanges<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Called after successful save.",
      "     * @param state Saved state",
      "     * @param isSavedBeforeLeave true, if save is triggered via leaving the page, and \"Save Changes?\" dialog",
      "     */</span>",
      "    onSuccess<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> isSavedBeforeLeave<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when save fails */</span>",
      "    onError<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * The key, under which form save unsaved state usually to localstorage, via uuiUserSettings context)",
      "     */</span>",
      "    settingsKey<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Controls when form validation occurs:",
      "     * save (default, recommended) - form is validated on save. If form is invalid - it will be revalidated on every change, until become valid",
      "     * change - form is validated on every user change. Only fields changes in current edit session are validated",
      "     */</span>",
      "    validationOn<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ValidationMode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "value",
      "comment": [
       "Current value of the form state"
      ],
      "typeValue": {
       "raw": "<span class=\"token constant\">T</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "renderForm",
      "comment": [
       "Render the form body, provided by form state"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IFormApi<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "getMetadata",
      "comment": [
       "Returns form metadata - information used to validate the form.",
       " @param state Metadata can depend on state, and will be re-computed on updates"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Metadata<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "onSave",
      "comment": [
       "Occurs when 'save' function is called on Form.",
       " Should save form data (usually with API call to server).",
       " Server can also reject form, and provide validation errors in response.",
       " @param state Form state to save"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> FormSaveResponse<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "beforeLeave",
      "comment": [
       "Called when form is unmounted, but user still have unsaved changes.",
       " Accepts a Promise<boolean> to be returned. If promise resolves to true - save procedure is performed.",
       " The common use-case is to show a modal with \"Save Changes?\" dialog",
       " Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "loadUnsavedChanges",
      "comment": [
       "Used to restore unsaved user edits from the last session (usually to localstorage, via uuiUserSettings context)",
       " If unsaved changes are detected, this callback is called. If it is resolved - the form restores unsaved edits.",
       " The common use-case is to show a modal with \"You have unsaved changes, restore them?\" dialog",
       " Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "onSuccess",
      "comment": [
       "Called after successful save.",
       " @param state Saved state",
       " @param isSavedBeforeLeave true, if save is triggered via leaving the page, and \"Save Changes?\" dialog"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> isSavedBeforeLeave<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "onError",
      "comment": [
       "Called when save fails"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "settingsKey",
      "comment": [
       "The key, under which form save unsaved state usually to localstorage, via uuiUserSettings context)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "validationOn",
      "comment": [
       "Controls when form validation occurs:",
       " save (default, recommended) - form is validated on save. If form is invalid - it will be revalidated on every change, until become valid",
       " change - form is validated on every user change. Only fields changes in current edit session are validated"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'change'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'save'</span>"
      },
      "required": false
     }
    ]
   },
   "FormSaveResponse": {
    "kind": 263,
    "typeRef": "@epam/uui-core:FormSaveResponse",
    "typeValue": {
     "raw": "FormSaveResponse<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormSaveResponse<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    form<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>",
      "    validation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "form",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "validation",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICanBeInvalid"
      },
      "required": false
     }
    ]
   },
   "FormState": {
    "kind": 263,
    "typeRef": "@epam/uui-core:FormState",
    "typeValue": {
     "raw": "FormState<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormState<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    form<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>",
      "    validationState<span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span>",
      "    serverValidationState<span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span>",
      "    lastSentForm<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>",
      "    isChanged<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    formHistory<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    historyIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    isInProgress<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isInSaveMode<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "form",
      "typeValue": {
       "raw": "<span class=\"token constant\">T</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "validationState",
      "typeValue": {
       "raw": "ICanBeInvalid"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "serverValidationState",
      "typeValue": {
       "raw": "ICanBeInvalid"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "lastSentForm",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "isChanged",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "formHistory",
      "typeValue": {
       "raw": "<span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "historyIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "isInProgress",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "isInSaveMode",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     }
    ]
   },
   "IAdaptiveItem": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IAdaptiveItem",
    "typeValue": {
     "raw": "IAdaptiveItem",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IAdaptiveItem</span> <span class=\"token punctuation\">{</span>",
      "    estimatedWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    priority<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    showInBurgerMenu<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    collapseToMore<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    collapsedContainer<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "IAnalyticableClick": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IAnalyticableClick",
    "typeValue": {
     "raw": "IAnalyticableClick",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IAnalyticableClick</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * An analytics event to send (via AnalyticsContext) when component is clicked.",
      "     * See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&amp;mode=doc&amp;skin=UUI4_promo&amp;category=contexts).",
      "     */</span>",
      "    clickAnalyticsEvent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> AnalyticsEvent<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     }
    ]
   },
   "IAnalyticableOnChange": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IAnalyticableOnChange",
    "typeValue": {
     "raw": "IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Given a value, returns an analytics event to send when component is edited.",
      "     * See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&amp;mode=doc&amp;skin=UUI4_promo&amp;category=contexts).",
      "     */</span>",
      "    getValueChangeAnalyticsEvent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "required": false
     }
    ]
   },
   "IAnalyticsContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IAnalyticsContext",
    "typeValue": {
     "raw": "IAnalyticsContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IAnalyticsContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">sendEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">?</span><span class=\"token operator\">:</span> AnalyticsEvent<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token operator\">:</span> IAnalyticsListener<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "sendEvent",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>event<span class=\"token operator\">?</span><span class=\"token operator\">:</span> AnalyticsEvent <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "addListener",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>listener<span class=\"token operator\">:</span> IAnalyticsListener<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "IAnalyticsListener": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IAnalyticsListener",
    "typeValue": {
     "raw": "IAnalyticsListener",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IAnalyticsListener</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">sendEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> AnalyticsEvent<span class=\"token punctuation\">,</span> parameters<span class=\"token operator\">:</span> Omit<span class=\"token operator\">&lt;</span>AnalyticsEvent<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> eventType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'event'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'pageView'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'apiTiming'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "sendEvent",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> AnalyticsEvent<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> eventType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'event'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'pageView'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'apiTiming'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "IApiContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IApiContext",
    "typeValue": {
     "raw": "IApiContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IApiContext</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IBaseContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token keyword\">readonly</span> status<span class=\"token operator\">:</span> ApiStatus<span class=\"token punctuation\">;</span>",
      "    <span class=\"token keyword\">readonly</span> recoveryReason<span class=\"token operator\">:</span> ApiRecoveryReason <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getActiveCalls</span><span class=\"token punctuation\">(</span>status<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ApiCallStatus<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ApiCallInfo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">processRequest</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ApiCallOptions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> file<span class=\"token operator\">:</span> File<span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> FileUploadOptions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>FileUploadResponse<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "status",
      "typeValue": {
       "raw": "<span class=\"token string\">'running'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'idle'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'recovery'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "recoveryReason",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auth-lost'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'connection-lost'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'server-overload'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'maintenance'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "getActiveCalls",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>status<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ApiCallStatus <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ApiCallInfo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "reset",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "processRequest",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ApiCallOptions <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "uploadFile",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> file<span class=\"token operator\">:</span> File<span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> FileUploadResponse<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "subscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 8,
      "name": "unsubscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 9,
      "name": "destroyContext",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     }
    ]
   },
   "IBaseContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IBaseContext",
    "typeValue": {
     "raw": "IBaseContext<span class=\"token operator\">&lt;</span>TState<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IBaseContext<span class=\"token operator\">&lt;</span>TState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> TState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> TState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">destroyContext</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "subscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> TState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "unsubscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> TState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "destroyContext",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "IBasicPickerToggler": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IBasicPickerToggler",
    "typeValue": {
     "raw": "IBasicPickerToggler",
     "print": [
      "<span class=\"token comment\">/**",
      " * Component can be used as Toggler control for pickers.",
      " * This interface is enough for basic pickers.",
      " * Picker togglers with search or advanced selection display should implement IPickerToggler interface",
      " */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IBasicPickerToggler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IDropdownToggler</span> <span class=\"token punctuation\">{</span>",
      "    onClear<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component can be used as Toggler control for pickers.",
     " This interface is enough for basic pickers.",
     " Picker togglers with search or advanced selection display should implement IPickerToggler interface"
    ],
    "props": [
     {
      "uid": 1,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 3,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 4,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 5,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 6,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disables component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 8,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 9,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     }
    ]
   },
   "ICanBeFixed": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ICanBeFixed",
    "typeValue": {
     "raw": "ICanBeFixed",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ICanBeFixed</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** If specified, will make column fixed - it would not scroll horizontally */</span>",
      "    fix<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "fix",
      "comment": [
       "If specified, will make column fixed - it would not scroll horizontally"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "required": false
     }
    ]
   },
   "ICanBeInvalid": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ICanBeInvalid",
    "typeValue": {
     "raw": "ICanBeInvalid",
     "print": [
      "<span class=\"token comment\">/** Component value can be invalid */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ICanBeInvalid</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** True if component contains invalid input */</span>",
      "    isInvalid<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Message describing why the value is invalid */</span>",
      "    validationMessage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** If T is a complex value (object or array), this property contains validation states of inner items */</span>",
      "    validationProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component value can be invalid"
    ],
    "props": [
     {
      "uid": 1,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     }
    ]
   },
   "ICanBeReadonly": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ICanBeReadonly",
    "typeValue": {
     "raw": "ICanBeReadonly",
     "print": [
      "<span class=\"token comment\">/** Component can be not editable */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ICanBeReadonly</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Disable editing. Unlike isDisabled, keep component's value readable. */</span>",
      "    isReadonly<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component can be not editable"
    ],
    "props": [
     {
      "uid": 1,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "ICanBeRequired": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ICanBeRequired",
    "typeValue": {
     "raw": "ICanBeRequired",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ICanBeRequired</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Marks that component's value is required */</span>",
      "    isRequired<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "ICanFocus": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ICanFocus",
    "typeValue": {
     "raw": "ICanFocus<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Component can be focused */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ICanFocus<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Called when component gets input focus */</span>",
      "    onFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when component looses input focus */</span>",
      "    onBlur<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component can be focused"
    ],
    "props": [
     {
      "uid": 1,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     }
    ]
   },
   "ICanRedirect": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ICanRedirect",
    "typeValue": {
     "raw": "ICanRedirect",
     "print": [
      "<span class=\"token comment\">/** Component acts as a link, and can redirect */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ICanRedirect</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Link object to redirect to for SPA-redirects */</span>",
      "    link<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Link<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Href (URL) to redirect to, for non-SPA redirects */</span>",
      "    href<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Highlights component to show that link is active (browser is displaying the page to which link is pointing) */</span>",
      "    isLinkActive<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Controls where the link should be opened */</span>",
      "    target<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component acts as a link, and can redirect"
    ],
    "props": [
     {
      "uid": 1,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "required": false
     }
    ]
   },
   "ICheckable": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ICheckable",
    "typeValue": {
     "raw": "ICheckable",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ICheckable</span> <span class=\"token operator\">=</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IDisableable <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Sets checkbox in indeterminate state (neither checked or unchecked), which usually means that children elements has both values */</span>",
      "    indeterminate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 2,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 3,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 4,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 7,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 8,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 9,
      "name": "indeterminate",
      "comment": [
       "Sets checkbox in indeterminate state (neither checked or unchecked), which usually means that children elements has both values"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "IClickable": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IClickable",
    "typeValue": {
     "raw": "IClickable",
     "print": [
      "<span class=\"token comment\">/** Component supports click action */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IClickable</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Called when component is clicked */</span>",
      "    onClick<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component supports click action"
    ],
    "props": [
     {
      "uid": 1,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     }
    ]
   },
   "IColumnConfig": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IColumnConfig",
    "typeValue": {
     "raw": "IColumnConfig",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IColumnConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    isVisible<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    order<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> ICanBeFixed<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isVisible",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "order",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "fix",
      "comment": [
       "If specified, will make column fixed - it would not scroll horizontally"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ICanBeFixed",
      "required": false
     }
    ]
   },
   "Icon": {
    "typeValue": {
     "raw": "Icon",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">Icon</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "typeRef": "@epam/uui-core:Icon",
    "kind": 264
   },
   "IContextProviderSsrProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IContextProviderSsrProps",
    "typeValue": {
     "raw": "IContextProviderSsrProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IContextProviderSsrProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UseUuiServicesProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    router<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "router",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "appContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TAppContext"
      },
      "from": "@epam/uui-core:UseUuiServicesProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "apiDefinition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>processRequest<span class=\"token operator\">:</span> IProcessRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TApi"
      },
      "from": "@epam/uui-core:UuiServicesProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "skinContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ISkin"
      },
      "from": "@epam/uui-core:UuiServicesProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "apiReloginPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "apiPingPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "apiServerUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     }
    ]
   },
   "IdAndName": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IdAndName",
    "typeValue": {
     "raw": "IdAndName",
     "print": [
      "<span class=\"token comment\">/* Common interface for data items */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IdAndName</span> <span class=\"token punctuation\">{</span>",
      "    id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "IDataSource": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IDataSource",
    "typeValue": {
     "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TItem <span class=\"token operator\">|</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getView</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">onValueChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">useView</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">onValueChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> deps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">unsubscribeView</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">onValueChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getId",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "getById",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> TItem"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "setItem",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "getView",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "useView",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "unsubscribeView",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">onValueChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "IDataSourceView": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IDataSourceView",
    "typeValue": {
     "raw": "IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>",
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getListProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataSourceListProps<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getVisibleRows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getSelectedRows</span><span class=\"token punctuation\">(</span>range<span class=\"token operator\">?</span><span class=\"token operator\">:</span> VirtualListRange<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getSelectedRowsCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">_forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    selectAll<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ICheckable<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getById",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "getListProps",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataSourceListProps"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "getVisibleRows",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "getSelectedRows",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>range<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "getSelectedRowsCount",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "reload",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "destroy",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "loadData",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "_forceUpdate",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 10,
      "name": "selectAll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICheckable"
      },
      "required": false
     }
    ]
   },
   "IDisableable": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IDisableable",
    "typeValue": {
     "raw": "IDisableable",
     "print": [
      "<span class=\"token comment\">/** Component can be disabled */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDisableable</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Disable editing, and visually de-emphasize value of the component */</span>",
      "    isDisabled<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component can be disabled"
    ],
    "props": [
     {
      "uid": 1,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "IDndActor": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IDndActor",
    "typeValue": {
     "raw": "IDndActor<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDndActor<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    srcData<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TSrcData<span class=\"token punctuation\">;</span>",
      "    dstData<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TDstData<span class=\"token punctuation\">;</span>",
      "    canAcceptDrop<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> AcceptDropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DropPositionOptions <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    onDrop<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> DropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "srcData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TSrcData"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "dstData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TDstData"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "canAcceptDrop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DropPosition<span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "onDrop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> DropParams<span class=\"token operator\">&lt;</span>TSrcData<span class=\"token punctuation\">,</span> TDstData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     }
    ]
   },
   "IDndContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IDndContext",
    "typeValue": {
     "raw": "IDndContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDndContext</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IBaseContext<span class=\"token operator\">&lt;</span>DndContextState<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">startDrag</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Node<span class=\"token punctuation\">,</span> data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">renderGhost</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">endDrag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    isDragging<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    dragData<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">getMouseCoords</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TMouseCoords<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "startDrag",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Node<span class=\"token punctuation\">,</span> data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">renderGhost</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "endDrag",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isDragging",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "dragData",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "getMouseCoords",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TMouseCoords"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "subscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> DndContextState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 7,
      "name": "unsubscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> DndContextState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 8,
      "name": "destroyContext",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     }
    ]
   },
   "IDropdownBodyProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IDropdownBodyProps",
    "typeValue": {
     "raw": "IDropdownBodyProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDropdownBodyProps</span> <span class=\"token punctuation\">{</span>",
      "    onClose<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    togglerWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    togglerHeight<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    scheduleUpdate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    isOpen<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    arrowProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> PopperArrowProps<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/) */</span>",
      "    placement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Placement<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "togglerWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "togglerHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "arrowProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> PopperArrowProps"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "required": false
     }
    ]
   },
   "IDropdownToggler": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IDropdownToggler",
    "typeValue": {
     "raw": "IDropdownToggler",
     "print": [
      "<span class=\"token comment\">/** Component can be used as Toggler control for dropdown menus */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDropdownToggler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCaption</span><span class=\"token punctuation\">,</span> IClickable <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** When component acts as dropdown, indicate that dropdown is open */</span>",
      "    isOpen<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Enabled dropdown mode - component can toggle dropdown */</span>",
      "    isDropdown<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when associated dropdown should open or close  */</span>",
      "    toggleDropdownOpening<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when component is interacted outside, to close the dropdown */</span>",
      "    isInteractedOutside<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Component's ref */</span>",
      "    ref<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>Ref<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Disables component */</span>",
      "    isDisabled<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component can be used as Toggler control for dropdown menus"
    ],
    "props": [
     {
      "uid": 1,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "isDisabled",
      "comment": [
       "Disables component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 8,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     }
    ]
   },
   "IEditable": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IEditable",
    "typeValue": {
     "raw": "IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Components has an editable value. Text Input is a basic example. */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ICanBeInvalid</span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> ICanBeRequired <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** The current value of component */</span>",
      "    value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called when value needs to be changed (usually due to user interaction) */</span>",
      "    <span class=\"token function\">onValueChange</span><span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Components has an editable value. Text Input is a basic example."
    ],
    "props": [
     {
      "uid": 1,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token constant\">T</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 4,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 7,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 8,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "IEditableDebouncerOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IEditableDebouncerOptions",
    "typeValue": {
     "raw": "IEditableDebouncerOptions",
     "print": [
      "<span class=\"token comment\">/**",
      " * IEditableDebouncer component options.",
      " */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IEditableDebouncerOptions</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Pass true to disable debouncing */</span>",
      "    disableDebounce<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Debounce delay in ms */</span>",
      "    debounceDelay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "IEditableDebouncer component options."
    ],
    "props": [
     {
      "uid": 1,
      "name": "disableDebounce",
      "comment": [
       "Pass true to disable debouncing"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "debounceDelay",
      "comment": [
       "Debounce delay in ms"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "IEditableDebouncerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IEditableDebouncerProps",
    "typeValue": {
     "raw": "IEditableDebouncerProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/**",
      " * IEditableDebouncer component props.",
      " */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IEditableDebouncerProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IEditableDebouncerOptions<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Render wrapped component.",
      "     */</span>",
      "    <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "IEditableDebouncer component props."
    ],
    "props": [
     {
      "uid": 1,
      "name": "render",
      "comment": [
       "Render wrapped component."
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token constant\">T</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 3,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 9,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 10,
      "name": "disableDebounce",
      "comment": [
       "Pass true to disable debouncing"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditableDebouncerOptions",
      "required": false
     },
     {
      "uid": 11,
      "name": "debounceDelay",
      "comment": [
       "Debounce delay in ms"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IEditableDebouncerOptions",
      "required": false
     },
     {
      "uid": 12,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     }
    ]
   },
   "IErrorContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IErrorContext",
    "typeValue": {
     "raw": "IErrorContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IErrorContext</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IBaseContext</span> <span class=\"token punctuation\">{</span>",
      "    currentError<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Error<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">reportError</span><span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> Error<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span>callback<span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">discardError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">recover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "currentError",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Error"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "reportError",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> Error<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "onError",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>callback<span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "discardError",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "recover",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "subscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 7,
      "name": "unsubscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 8,
      "name": "destroyContext",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     }
    ]
   },
   "IFilterConfig": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IFilterConfig",
    "typeValue": {
     "raw": "IFilterConfig",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IFilterConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    order<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isVisible",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "order",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "IFilterItemBodyProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IFilterItemBodyProps",
    "typeValue": {
     "raw": "FilterConfigBase<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'singlePicker'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multiPicker'</span><span class=\"token punctuation\">;</span> dataSource<span class=\"token operator\">:</span> IDropdownBodyProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> selectedPredicate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> FilterConfigBase<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'datePicker'</span><span class=\"token punctuation\">;</span> filter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> IDropdownBodyProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> selectedPredicate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> FilterConfigBase<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'numeric'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IDropdownBodyProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> selectedPredicate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> FilterConfigBase<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'rangeDatePicker'</span><span class=\"token punctuation\">;</span> format<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> filter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> IDropdownBodyProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> selectedPredicate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> FilterConfigBase<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'custom'</span><span class=\"token punctuation\">;</span> render<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownBodyProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> selectedPredicate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IFilterItemBodyProps<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> TableFiltersConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IDropdownBodyProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    selectedPredicate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 103,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 104,
      "name": "field",
      "typeValue": {
       "raw": "<span class=\"token keyword\">keyof</span> TFilter"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 105,
      "name": "columnKey",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 106,
      "name": "isAlwaysVisible",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 107,
      "name": "predicates",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IFilterPredicate<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 108,
      "name": "maxCount",
      "comment": [
       "Count of words to show in the Filter toggler. By default, 2 item will be shown."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 7,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'singlePicker'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multiPicker'</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": true
     },
     {
      "uid": 8,
      "name": "dataSource",
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": true
     },
     {
      "uid": 9,
      "name": "getName",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 10,
      "name": "renderRow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 11,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 12,
      "name": "showSearch",
      "comment": [
       "Pass false to hide search in picker body.",
       " If omitted, true value will be used."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 112,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 113,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 114,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 115,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 116,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 117,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 118,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 119,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 120,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 121,
      "name": "togglerWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 122,
      "name": "togglerHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 123,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 124,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 125,
      "name": "arrowProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> PopperArrowProps"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 126,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 127,
      "name": "selectedPredicate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 35,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'datePicker'</span>"
      },
      "from": "@epam/uui-core:DatePickerFilterConfig",
      "required": true
     },
     {
      "uid": 36,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 37,
      "name": "format",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 60,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'numeric'</span>"
      },
      "from": "@epam/uui-core:NumericFilterConfig",
      "required": true
     },
     {
      "uid": 83,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'rangeDatePicker'</span>"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": true
     },
     {
      "uid": 84,
      "name": "format",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 85,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 86,
      "name": "presets",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 109,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'custom'</span>"
      },
      "from": "@epam/uui-core:CustomFilterConfig",
      "required": true
     },
     {
      "uid": 110,
      "name": "render",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IFilterItemBodyProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-core:CustomFilterConfig",
      "required": true
     },
     {
      "uid": 111,
      "name": "getTogglerValue",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IFilterItemBodyProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:CustomFilterConfig",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "IFilterPredicate": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IFilterPredicate",
    "typeValue": {
     "raw": "IFilterPredicate",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IFilterPredicate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    predicate<span class=\"token operator\">:</span> FilterPredicateName<span class=\"token punctuation\">;</span>",
      "    isDefault<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "predicate",
      "typeValue": {
       "raw": "<span class=\"token string\">'in'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'nin'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'isNull'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gte'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lte'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inRange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'notInRange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'eq'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'neq'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'not'</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isDefault",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "IFormApi": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IFormApi",
    "typeValue": {
     "raw": "IFormApi<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFormApi<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> ICanBeInvalid <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Lens - a helper to split parts of the form state, validation, and setState callbacks, and pass this to components",
      "     */</span>",
      "    lens<span class=\"token operator\">:</span> ILens<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Sets form value. The signature is the same for setState in React.useState - either new value, or callback to update the value.",
      "     * The change is threated as user input - sets isChanged and creates undo endpoint",
      "     */</span>",
      "    <span class=\"token function-variable function\">setValue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>s<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>SetStateAction<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Replaces form value. The signature is the same for setState in React.useState - either new value, or callback to update the value.",
      "     * The change is not threated as user input - it replaces last changed state, and doesn't create undo checkpoint.",
      "     */</span>",
      "    <span class=\"token function-variable function\">replaceValue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>s<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>SetStateAction<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Triggers save procedure - validation, calling props.onSave, and processing results",
      "     */</span>",
      "    <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Undo to last checkpoint",
      "     */</span>",
      "    <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Redo last action",
      "     */</span>",
      "    <span class=\"token function\">redo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Reverts all changes up to the initial or last saved state",
      "     */</span>",
      "    <span class=\"token function\">revert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Try to leave form and ask to save unsaved changes",
      "     */</span>",
      "    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Forces form to validate value.",
      "     * Validation is usually done automatically, according to validationOn prop.",
      "     * Use this method only in corner cases.",
      "     */</span>",
      "    <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if there are changes to undo */</span>",
      "    canUndo<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if there are changes to redo */</span>",
      "    canRedo<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if there are changes to revers */</span>",
      "    canRevert<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if form is changed since the initial state, or the last save */</span>",
      "    isChanged<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True if save is in progress */</span>",
      "    isInProgress<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "lens",
      "comment": [
       "Lens - a helper to split parts of the form state, validation, and setState callbacks, and pass this to components"
      ],
      "typeValue": {
       "raw": "ILens<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "setValue",
      "comment": [
       "Sets form value. The signature is the same for setState in React.useState - either new value, or callback to update the value.",
       " The change is threated as user input - sets isChanged and creates undo endpoint"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>s<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>SetStateAction<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "replaceValue",
      "comment": [
       "Replaces form value. The signature is the same for setState in React.useState - either new value, or callback to update the value.",
       " The change is not threated as user input - it replaces last changed state, and doesn't create undo checkpoint."
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>s<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>SetStateAction<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "save",
      "comment": [
       "Triggers save procedure - validation, calling props.onSave, and processing results"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "undo",
      "comment": [
       "Undo to last checkpoint"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "redo",
      "comment": [
       "Redo last action"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "revert",
      "comment": [
       "Reverts all changes up to the initial or last saved state"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "close",
      "comment": [
       "Try to leave form and ask to save unsaved changes"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "validate",
      "comment": [
       "Forces form to validate value.",
       " Validation is usually done automatically, according to validationOn prop.",
       " Use this method only in corner cases."
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ICanBeInvalid"
      },
      "required": true
     },
     {
      "uid": 10,
      "name": "canUndo",
      "comment": [
       "True if there are changes to undo"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "canRedo",
      "comment": [
       "True if there are changes to redo"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 12,
      "name": "canRevert",
      "comment": [
       "True if there are changes to revers"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 13,
      "name": "isChanged",
      "comment": [
       "True if form is changed since the initial state, or the last save"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 14,
      "name": "isInProgress",
      "comment": [
       "True if save is in progress"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 15,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token constant\">T</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 17,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 21,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 22,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "IHasCaption": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasCaption",
    "typeValue": {
     "raw": "IHasCaption",
     "print": [
      "<span class=\"token comment\">/** Component has a caption. E.g. Button */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasCaption</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Caption. Can be a string, or React.Elements. Certain components supports minimal markup (&lt;b>,&lt;i>,&lt;a>) in captions. */</span>",
      "    caption<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component has a caption. E.g. Button"
    ],
    "props": [
     {
      "uid": 1,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     }
    ]
   },
   "IHasChildren": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasChildren",
    "typeValue": {
     "raw": "IHasChildren",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasChildren</span> <span class=\"token punctuation\">{</span>",
      "    children<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     }
    ]
   },
   "IHasCX": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasCX",
    "typeValue": {
     "raw": "IHasCX",
     "print": [
      "<span class=\"token comment\">/**",
      " * Component can accept cx variable, which is more convenient shortcut for 'classname' property",
      " * It accepts string, arrays, object, recursively. All falsy values are thrown away. Examples:",
      " * - 'red' => 'red'",
      " * - ['red', 0, false, 'blue' ] => 'red blue'",
      " * - { 'red': true, 'blue': false, ['green', 'white']} => 'red green white'",
      " */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasCX</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details */</span>",
      "    cx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component can accept cx variable, which is more convenient shortcut for 'classname' property",
     " It accepts string, arrays, object, recursively. All falsy values are thrown away. Examples:",
     " - 'red' => 'red'",
     " - ['red', 0, false, 'blue' ] => 'red blue'",
     " - { 'red': true, 'blue': false, ['green', 'white']} => 'red green white'"
    ],
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     }
    ]
   },
   "IHasDirection": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasDirection",
    "typeValue": {
     "raw": "IHasDirection",
     "print": [
      "<span class=\"token comment\">/** Component has direction of child components. */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasDirection</span> <span class=\"token punctuation\">{</span>",
      "    direction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'vertical'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component has direction of child components."
    ],
    "props": [
     {
      "uid": 1,
      "name": "direction",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'vertical'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'horizontal'</span>"
      },
      "required": false
     }
    ]
   },
   "IHasForwardedRef": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasForwardedRef",
    "typeValue": {
     "raw": "IHasForwardedRef<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasForwardedRef<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> HTMLOrSVGElement<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** this ref is passed to the underlying component */</span>",
      "    forwardedRef<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ForwardedRef<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "required": false
     }
    ]
   },
   "IHasIcon": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasIcon",
    "typeValue": {
     "raw": "IHasIcon",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasIcon</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Icon can be an React element (usually an SVG element) */</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Position of the icon (left of right) */</span>",
      "    iconPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Click handler for the icon */</span>",
      "    onIconClick<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     }
    ]
   },
   "IHasLabel": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasLabel",
    "typeValue": {
     "raw": "IHasLabel",
     "print": [
      "<span class=\"token comment\">/** Component has label. E.g. User Name */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasLabel</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Label. Can be a string, or React.Elements. Certain components supports minimal markup (&lt;b>,&lt;i>,&lt;a>) in captions. */</span>",
      "    label<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component has label. E.g. User Name"
    ],
    "props": [
     {
      "uid": 1,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     }
    ]
   },
   "IHasPlaceholder": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasPlaceholder",
    "typeValue": {
     "raw": "IHasPlaceholder",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasPlaceholder</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Placeholder to display when empty */</span>",
      "    placeholder<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     }
    ]
   },
   "IHasRawProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IHasRawProps",
    "typeValue": {
     "raw": "IHasRawProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IHasRawProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Any HTML attributes (native or 'data-') to put on the underlying component */</span>",
      "    rawProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T</span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "required": false
     }
    ]
   },
   "IHasTabIndex": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHasTabIndex",
    "typeValue": {
     "raw": "IHasTabIndex",
     "print": [
      "<span class=\"token comment\">// TBD: merge with ICanFocus?</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasTabIndex</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Controls the order of keyboard navigation between components */</span>",
      "    tabIndex<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'tabIndex'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "IHistory4": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IHistory4",
    "typeValue": {
     "raw": "IHistory4",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHistory4</span> <span class=\"token punctuation\">{</span>",
      "    location<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">push</span><span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">createHref</span><span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">listener</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>location<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">block</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">listener</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "location",
      "typeValue": {
       "raw": "Link"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "push",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "replace",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "createHref",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "listen",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">listener</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>location<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "block",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">listener</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "ILayoutContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ILayoutContext",
    "typeValue": {
     "raw": "ILayoutContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ILayoutContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">getLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> LayoutLayer<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">releaseLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token operator\">:</span> LayoutLayer<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getPortalRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getPortalRootId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getLayer",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> LayoutLayer"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "releaseLayer",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>layer<span class=\"token operator\">:</span> LayoutLayer<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "getPortalRoot",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> HTMLElement"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "getPortalRootId",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "ILens": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ILens",
    "typeValue": {
     "raw": "ILens<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ILens<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>current<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TFocused<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">prop</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span> <span class=\"token keyword\">extends</span> <span class=\"token keyword\">keyof</span> TFocused<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ILens<span class=\"token operator\">&lt;</span>NonNullable<span class=\"token operator\">&lt;</span>TFocused<span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">]</span><span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ILens<span class=\"token operator\">&lt;</span>ArrayElement<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>oldValue<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">,</span> newValue<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TFocused<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ILens<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token keyword\">default</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ILens<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">toProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "get",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TFocused"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "set",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "update",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>current<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "prop",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span> <span class=\"token keyword\">extends</span> <span class=\"token keyword\">keyof</span> TFocused<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ILens<span class=\"token operator\">&lt;</span>NonNullable<span class=\"token operator\">&lt;</span>TFocused<span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">]</span><span class=\"token operator\">>></span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "index",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ArrayElement<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">>></span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "onChange",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>oldValue<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">,</span> newValue<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ILens<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "default",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> TFocused<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ILens<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "toProps",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> IEditable<span class=\"token operator\">&lt;</span>TFocused<span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "ILockContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ILockContext",
    "typeValue": {
     "raw": "ILockContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ILockContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">tryRelease</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>object<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">release</span><span class=\"token punctuation\">(</span>lock<span class=\"token operator\">:</span> object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">withLock</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">action</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>object<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">getCurrentLock</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Lock <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "acquire",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">tryRelease</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>object<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "release",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>lock<span class=\"token operator\">:</span> object<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "withLock",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">action</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>object<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "getCurrentLock",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Lock <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span>"
      },
      "required": true
     }
    ]
   },
   "IMap": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IMap",
    "typeValue": {
     "raw": "IMap<span class=\"token operator\">&lt;</span>TKey<span class=\"token punctuation\">,</span> TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IMap<span class=\"token operator\">&lt;</span>TKey<span class=\"token punctuation\">,</span> TValue<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    constructor<span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> IterableIterator<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>",
      "        TKey<span class=\"token punctuation\">,</span>",
      "        TValue",
      "    <span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> IMap<span class=\"token operator\">&lt;</span>TKey<span class=\"token punctuation\">,</span> TValue<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">has</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "constructor",
      "typeValue": {
       "raw": "<span class=\"token builtin\">Function</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "get",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TValue"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "set",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> IMap<span class=\"token operator\">&lt;</span>TKey<span class=\"token punctuation\">,</span> TValue<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "has",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "delete",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "[Symbol.iterator]",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> IterableIterator<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>TKey<span class=\"token punctuation\">,</span> TValue<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "IModal": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IModal",
    "typeValue": {
     "raw": "IModal<span class=\"token operator\">&lt;</span>TResult<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IModal<span class=\"token operator\">&lt;</span>TResult<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    isActive<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    zIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">success</span><span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TResult<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TResult<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "IModalContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IModalContext",
    "typeValue": {
     "raw": "IModalContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IModalContext</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IBaseContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">show</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TResult<span class=\"token punctuation\">,</span> TParameters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IModal<span class=\"token operator\">&lt;</span>TResult<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">,</span> parameters<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TParameters<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>TResult<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">closeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">isModalOperationActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getOperations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ModalOperation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "show",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TResult<span class=\"token punctuation\">,</span> TParameters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IModal<span class=\"token operator\">&lt;</span>TResult<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">,</span> parameters<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TParameters <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>TResult<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "closeAll",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isModalOperationActive",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "getOperations",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ModalOperation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "subscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 6,
      "name": "unsubscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 7,
      "name": "destroyContext",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     }
    ]
   },
   "INotification": {
    "kind": 263,
    "typeRef": "@epam/uui-core:INotification",
    "typeValue": {
     "raw": "INotification",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">INotification</span> <span class=\"token punctuation\">{</span>",
      "    onClose<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    onSuccess<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    clearTimer<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    refreshTimer<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "onSuccess",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "clearTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "refreshTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "INotificationContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:INotificationContext",
    "typeValue": {
     "raw": "INotificationContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">INotificationContext</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IBaseContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> INotification<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">,</span> notificationParams<span class=\"token operator\">?</span><span class=\"token operator\">:</span> NotificationParams<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getNotifications</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> NotificationOperation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">clearAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "show",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> NotificationParams <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "getNotifications",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> NotificationOperation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "remove",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "clearAll",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "subscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 6,
      "name": "unsubscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     },
     {
      "uid": 7,
      "name": "destroyContext",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBaseContext",
      "required": true
     }
    ]
   },
   "IPickerToggler": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IPickerToggler",
    "typeValue": {
     "raw": "IPickerToggler<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/**",
      " * Component can be used as Toggler control for pickers.",
      " * Only IDropdownToggler implementation is necessary for the picker to function.",
      " * Other props can be implemented for full-featured picker togglers.",
      " */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IPickerToggler<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IBasicPickerToggler</span><span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>IHasPlaceholder<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>IDisableable<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>ICanBeInvalid<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    selection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    selectedRowsCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Component can be used as Toggler control for pickers.",
     " Only IDropdownToggler implementation is necessary for the picker to function.",
     " Other props can be implemented for full-featured picker togglers."
    ],
    "props": [
     {
      "uid": 1,
      "name": "selection",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "selectedRowsCount",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 4,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 5,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 6,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 7,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 8,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 9,
      "name": "isDisabled",
      "comment": [
       "Disables component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 10,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 13,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 15,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 16,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 18,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 19,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     }
    ]
   },
   "IPresetsApi": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IPresetsApi",
    "typeValue": {
     "raw": "IPresetsApi<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IPresetsApi<span class=\"token operator\">&lt;</span>TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TViewState <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** ID of selected preset */</span>",
      "    activePresetId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that selects given preset  */</span>",
      "    <span class=\"token function\">choosePreset</span><span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that gives preset name and create new preset with this name and current table state  */</span>",
      "    <span class=\"token function\">createNewPreset</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that gives preset and return if this preset changed or not  */</span>",
      "    <span class=\"token function\">hasPresetChanged</span><span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that gives the preset and creat their duplicate  */</span>",
      "    <span class=\"token function\">duplicatePreset</span><span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that deletes given preset  */</span>",
      "    <span class=\"token function\">deletePreset</span><span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that updates given preset  */</span>",
      "    <span class=\"token function\">updatePreset</span><span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that gives preset and return URL link on given preset  */</span>",
      "    <span class=\"token function\">getPresetLink</span><span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Array of presets  */</span>",
      "    presets<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "activePresetId",
      "comment": [
       "ID of selected preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "choosePreset",
      "comment": [
       "Function that selects given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "createNewPreset",
      "comment": [
       "Function that gives preset name and create new preset with this name and current table state"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "hasPresetChanged",
      "comment": [
       "Function that gives preset and return if this preset changed or not"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "duplicatePreset",
      "comment": [
       "Function that gives the preset and creat their duplicate"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "deletePreset",
      "comment": [
       "Function that deletes given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "updatePreset",
      "comment": [
       "Function that updates given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "getPresetLink",
      "comment": [
       "Function that gives preset and return URL link on given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "presets",
      "comment": [
       "Array of presets"
      ],
      "typeValue": {
       "raw": "ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     }
    ]
   },
   "IProcessRequest": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IProcessRequest",
    "typeValue": {
     "raw": "IProcessRequest",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IProcessRequest</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ApiCallOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "IRouter6": {
    "kind": 264,
    "typeRef": "@epam/uui-core:IRouter6",
    "typeValue": {
     "raw": "IRouter6",
     "print": [
      "<span class=\"token comment\">/**",
      " * From: react-router version 6.14.0",
      " *",
      " * The type definition of the IRouter6 is not complete (It's OK as long as we only use a subset of its API)",
      " *",
      " * NOTE: Complete definitions of the router is located in @remix-run/router:",
      " * https://github.com/remix-run/react-router/blob/main/packages/router/router.ts#L57",
      " */</span>",
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IRouter6</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    state<span class=\"token operator\">:</span> RouterState<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span>to<span class=\"token operator\">:</span> To <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RouterNavigateOptions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span>to<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">getBlocker</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> fn<span class=\"token operator\">:</span> BlockerFunction<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">subscribe</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> RouterState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">deleteBlocker</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">createHref</span><span class=\"token punctuation\">(</span>location<span class=\"token operator\">:</span> Location <span class=\"token operator\">|</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "comment": [
     "From: react-router version 6.14.0",
     "",
     " The type definition of the IRouter6 is not complete (It's OK as long as we only use a subset of its API)",
     "",
     " NOTE: Complete definitions of the router is located in @remix-run/router:",
     " https://github.com/remix-run/react-router/blob/main/packages/router/router.ts#L57"
    ],
    "props": [
     {
      "uid": 1,
      "name": "state",
      "typeValue": {
       "raw": "RouterState"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "navigate",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>to<span class=\"token operator\">:</span> To <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RouterNavigateOptions <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>to<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "getBlocker",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> fn<span class=\"token operator\">:</span> BlockerFunction<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "subscribe",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> RouterState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "deleteBlocker",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "createHref",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>location<span class=\"token operator\">:</span> Location <span class=\"token operator\">|</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "IRouterContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IRouterContext",
    "typeValue": {
     "raw": "IRouterContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IRouterContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">getCurrentLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Link<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span>link<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Link <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">isActive</span><span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">createHref</span><span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">listener</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">block</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">callback</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getCurrentLink",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Link"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "redirect",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>link<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> Link <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "transfer",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "createHref",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "listen",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">listener</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "block",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">callback</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>link<span class=\"token operator\">:</span> Link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "ISkin": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ISkin",
    "typeValue": {
     "raw": "ISkin",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISkin</span> <span class=\"token punctuation\">{</span>",
      "    Button<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>ButtonCoreProps<span class=\"token punctuation\">,</span> ButtonSemanticProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    IconButton<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>ButtonCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    Checkbox<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>CheckboxCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    FlexRow<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>FlexRowProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    FlexCell<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>FlexCellProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    Spinner<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>SpinnerCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    TextInput<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>TextInputCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    ModalWindow<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>ModalWindowProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    ModalBlocker<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>ModalBlockerProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    ModalHeader<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>ModalHeaderCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    ModalFooter<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>ModalFooterCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    LabeledInput<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>LabeledInputCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    DatePicker<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>DatePickerCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    RangeDatePicker<span class=\"token operator\">:</span> ISkinComponent<span class=\"token operator\">&lt;</span>RangeDatePickerCoreProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "Button",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>ButtonSemanticProps<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "IconButton",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>ButtonCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "Checkbox",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>CheckboxCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "FlexRow",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>FlexRowProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "FlexCell",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>FlexCellProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "Spinner",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>SpinnerCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "TextInput",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>TextInputCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "ModalWindow",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>ModalWindowProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "ModalBlocker",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>ModalBlockerProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 10,
      "name": "ModalHeader",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>ModalHeaderCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "ModalFooter",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>ModalFooterCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 12,
      "name": "LabeledInput",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>LabeledInputCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 13,
      "name": "DatePicker",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>DatePickerCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 14,
      "name": "RangeDatePicker",
      "typeValue": {
       "raw": "ISkinComponent<span class=\"token operator\">&lt;</span>RangeDatePickerCoreProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "ITablePreset": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ITablePreset",
    "typeValue": {
     "raw": "ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ITablePreset<span class=\"token operator\">&lt;</span>TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TViewState <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">;</span>",
      "    isReadonly<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    columnsConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ColumnsConfig<span class=\"token punctuation\">;</span>",
      "    filtersConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FiltersConfig<span class=\"token punctuation\">;</span>",
      "    sorting<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    order<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    viewState<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TViewState<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "isReadonly",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "columnsConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ColumnsConfig"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "filtersConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> FiltersConfig<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "sorting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "order",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "viewState",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TViewState"
      },
      "required": false
     }
    ]
   },
   "ITableState": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ITableState",
    "typeValue": {
     "raw": "ITableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ITableState<span class=\"token operator\">&lt;</span>TFilter <span class=\"token operator\">=</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> TViewState <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IPresetsApi<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Table state value */</span>",
      "    tableState<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that updates table state value */</span>",
      "    <span class=\"token function\">setTableState</span><span class=\"token punctuation\">(</span>newState<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that updates filter value */</span>",
      "    <span class=\"token function\">setFilter</span><span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that updates columns config value */</span>",
      "    <span class=\"token function\">setColumnsConfig</span><span class=\"token punctuation\">(</span>columnsConfig<span class=\"token operator\">:</span> ColumnsConfig<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Function that updates filters config value */</span>",
      "    <span class=\"token function\">setFiltersConfig</span><span class=\"token punctuation\">(</span>filtersConfig<span class=\"token operator\">:</span> FiltersConfig<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "tableState",
      "comment": [
       "Table state value"
      ],
      "typeValue": {
       "raw": "DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "setTableState",
      "comment": [
       "Function that updates table state value"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newState<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "setFilter",
      "comment": [
       "Function that updates filter value"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "setColumnsConfig",
      "comment": [
       "Function that updates columns config value"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>columnsConfig<span class=\"token operator\">:</span> ColumnsConfig<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "setFiltersConfig",
      "comment": [
       "Function that updates filters config value"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>filtersConfig<span class=\"token operator\">:</span> FiltersConfig<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "activePresetId",
      "comment": [
       "ID of selected preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": false
     },
     {
      "uid": 7,
      "name": "choosePreset",
      "comment": [
       "Function that selects given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 8,
      "name": "createNewPreset",
      "comment": [
       "Function that gives preset name and create new preset with this name and current table state"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 9,
      "name": "hasPresetChanged",
      "comment": [
       "Function that gives preset and return if this preset changed or not"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 10,
      "name": "duplicatePreset",
      "comment": [
       "Function that gives the preset and creat their duplicate"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 11,
      "name": "deletePreset",
      "comment": [
       "Function that deletes given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 12,
      "name": "updatePreset",
      "comment": [
       "Function that updates given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 13,
      "name": "getPresetLink",
      "comment": [
       "Function that gives preset and return URL link on given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 14,
      "name": "presets",
      "comment": [
       "Array of presets"
      ],
      "typeValue": {
       "raw": "ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     }
    ]
   },
   "ItemsComparator": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ItemsComparator",
    "typeValue": {
     "raw": "ItemsComparator<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ItemsComparator<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newItem<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> existingItem<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ITree": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ITree",
    "typeValue": {
     "raw": "ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">clearStructure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getRootIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getRootItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TItem <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">NOT_FOUND_RECORD</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getChildren</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getChildrenByParentId</span><span class=\"token punctuation\">(</span>parentId<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getChildrenIdsByParentId</span><span class=\"token punctuation\">(</span>parentId<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getParentIdsRecursive</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getParents</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getPathById</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getPathItem</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getNodeInfo</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TreeNodeInfo<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">isFlatList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">patch</span><span class=\"token punctuation\">(</span>items<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> isDeletedProp<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> TItem<span class=\"token punctuation\">,</span> comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ItemsComparator<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">cascadeSelection</span><span class=\"token punctuation\">(</span>currentSelection<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selectedId<span class=\"token operator\">:</span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> isSelected<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        isSelectable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "        cascade<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CascadeSelection<span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">load</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> LoadTreeOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>DataSourceState<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> withNestedChildren<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">loadMissing</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> LoadTreeOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>DataSourceState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">loadMissingIdsAndParents</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> LoadTreeOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> idsToLoad<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">getTotalRecursiveCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">action</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">,</span> parentId<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">stop</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        direction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'bottom-up'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-down'</span><span class=\"token punctuation\">;</span>",
      "        parentId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "        includeParent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">computeSubtotals</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TSubtotals<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> hasChildren<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TSubtotals<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> TSubtotals<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> TSubtotals<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TSubtotals<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> CompositeKeysMap<span class=\"token operator\">&lt;</span>TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> TSubtotals<span class=\"token operator\">></span> <span class=\"token operator\">|</span> Map<span class=\"token operator\">&lt;</span>TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> TSubtotals<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">filter</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ApplyFilterOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">search</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ApplySearchOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">sort</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ApplySortOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "clearStructure",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "getRootIds",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "getRootItems",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "getById",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TItem <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">NOT_FOUND_RECORD</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "getChildren",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "getChildrenByParentId",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>parentId<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "getChildrenIdsByParentId",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>parentId<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "getParentIdsRecursive",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "getParents",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 10,
      "name": "getPathById",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "getPathItem",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 12,
      "name": "getNodeInfo",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TreeNodeInfo"
      },
      "required": true
     },
     {
      "uid": 13,
      "name": "isFlatList",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": true
     },
     {
      "uid": 14,
      "name": "patch",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>items<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> isDeletedProp<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> TItem <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 15,
      "name": "cascadeSelection",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>currentSelection<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selectedId<span class=\"token operator\">:</span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> isSelected<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> isSelectable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> cascade<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CascadeSelection <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 16,
      "name": "load",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">>></span>"
      },
      "required": true
     },
     {
      "uid": 17,
      "name": "loadMissing",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">>></span>"
      },
      "required": true
     },
     {
      "uid": 18,
      "name": "loadMissingIdsAndParents",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">>></span>"
      },
      "required": true
     },
     {
      "uid": 19,
      "name": "getTotalRecursiveCount",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 20,
      "name": "forEach",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token function-variable function\">action</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">,</span> parentId<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">stop</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> direction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'bottom-up'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-down'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> parentId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> includeParent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 21,
      "name": "computeSubtotals",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TSubtotals<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> hasChildren<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TSubtotals<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> TSubtotals<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> TSubtotals<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TSubtotals<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> CompositeKeysMap<span class=\"token operator\">&lt;</span>TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> TSubtotals<span class=\"token operator\">></span> <span class=\"token operator\">|</span> Map<span class=\"token operator\">&lt;</span>TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> TSubtotals<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 22,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 23,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 24,
      "name": "sort",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ITree<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "IUserSettingsContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:IUserSettingsContext",
    "typeValue": {
     "raw": "IUserSettingsContext",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUserSettingsContext</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> initial<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">;</span>",
      "    <span class=\"token generic-function\"><span class=\"token function\">set</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "get",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> initial<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TValue <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TValue"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "set",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "LabeledInputCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LabeledInputCoreProps",
    "typeValue": {
     "raw": "LabeledInputCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LabeledInputCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ICanBeInvalid</span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasLabel<span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> ICanBeRequired<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Position of the label, relative to the wrapped component (top of left) */</span>",
      "    labelPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Info hint text to show in tooltip */</span>",
      "    info<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Marks related field as optional */</span>",
      "    isOptional<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** HTML 'for' tag to bind the label to a component.",
      "     * Can be used when component can't be wrapped by the LabeledInput, e.g. when form is layed out as table with labels and inputs placed into different columns",
      "     */</span>",
      "    htmlFor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "labelPosition",
      "comment": [
       "Position of the label, relative to the wrapped component (top of left)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "info",
      "comment": [
       "Info hint text to show in tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "isOptional",
      "comment": [
       "Marks related field as optional"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "htmlFor",
      "comment": [
       "HTML 'for' tag to bind the label to a component.",
       " Can be used when component can't be wrapped by the LabeledInput, e.g. when form is layed out as table with labels and inputs placed into different columns"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 9,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 10,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 11,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "LayoutLayer": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LayoutLayer",
    "typeValue": {
     "raw": "LayoutLayer",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LayoutLayer</span> <span class=\"token punctuation\">{</span>",
      "    id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    depth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    zIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "depth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "LazyDataSourceApi": {
    "kind": 264,
    "typeRef": "@epam/uui-core:LazyDataSourceApi",
    "typeValue": {
     "raw": "LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Defines API to retrieve data for DataSources */</span>",
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>request<span class=\"token operator\">:</span> LazyDataSourceApiRequest<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> LazyDataSourceApiRequestContext<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>LazyDataSourceApiResponse<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "comment": [
     "Defines API to retrieve data for DataSources"
    ]
   },
   "LazyDataSourceApiRequest": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequest",
    "typeValue": {
     "raw": "LazyDataSourceApiRequest<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Defines input arguments for Lazy Data Source APIs */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LazyDataSourceApiRequest<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TFilter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LazyDataSourceApiRequestOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    range<span class=\"token operator\">?</span><span class=\"token operator\">:</span> LazyDataSourceApiRequestRange<span class=\"token punctuation\">;</span>",
      "    page<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    pageSize<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    ids<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Defines input arguments for Lazy Data Source APIs"
    ],
    "props": [
     {
      "uid": 1,
      "name": "range",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> LazyDataSourceApiRequestRange"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "page",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "pageSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "ids",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "from": "@epam/uui-core:LazyDataSourceApiRequestOptions",
      "required": false
     },
     {
      "uid": 6,
      "name": "sorting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:LazyDataSourceApiRequestOptions",
      "required": false
     },
     {
      "uid": 7,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:LazyDataSourceApiRequestOptions",
      "required": false
     }
    ]
   },
   "LazyDataSourceApiRequestContext": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequestContext",
    "typeValue": {
     "raw": "LazyDataSourceApiRequestContext<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Defines the context of API request. E.g. parent if we require to retrieve sub-list of the tree */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LazyDataSourceApiRequestContext<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    parentId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    parent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TItem <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Defines the context of API request. E.g. parent if we require to retrieve sub-list of the tree"
    ],
    "props": [
     {
      "uid": 1,
      "name": "parentId",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> TId"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "parent",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> TItem"
      },
      "required": false
     }
    ]
   },
   "LazyDataSourceApiRequestOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequestOptions",
    "typeValue": {
     "raw": "LazyDataSourceApiRequestOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">// Lazy Data Source API</span>",
      "<span class=\"token comment\">/** The common part of LazyDataSourceApiRequest, which defines how list should be filtered and sorted */</span>",
      "<span class=\"token comment\">// eslint-disable-next-line @typescript-eslint/no-unused-vars</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LazyDataSourceApiRequestOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">;</span>",
      "    sorting<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    search<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "sorting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "LazyDataSourceApiRequestRange": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LazyDataSourceApiRequestRange",
    "typeValue": {
     "raw": "LazyDataSourceApiRequestRange",
     "print": [
      "<span class=\"token comment\">/** The range (from/count) of required rows for LazyDataSourceApiRequest */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LazyDataSourceApiRequestRange</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    count<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "The range (from/count) of required rows for LazyDataSourceApiRequest"
    ],
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "LazyDataSourceApiResponse": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LazyDataSourceApiResponse",
    "typeValue": {
     "raw": "LazyDataSourceApiResponse<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/** Defines Lazy Data Source APIs response shape */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LazyDataSourceApiResponse<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** List of items which was requested via API */</span>",
      "    items<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * API can set 'from' field if it wants to return more items than what was requested in request.range.",
      "     * This can be used to return all items at once (with from:0, count: totalCount), or align response to pages.",
      "     */</span>",
      "    from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Total count of items which match current filter. If not specified, total count will be detected only when user scrolls to the end of the list. */</span>",
      "    count<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Defines Lazy Data Source APIs response shape"
    ],
    "props": [
     {
      "uid": 1,
      "name": "items",
      "comment": [
       "List of items which was requested via API"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "from",
      "comment": [
       "API can set 'from' field if it wants to return more items than what was requested in request.range.",
       " This can be used to return all items at once (with from:0, count: totalCount), or align response to pages."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "count",
      "comment": [
       "Total count of items which match current filter. If not specified, total count will be detected only when user scrolls to the end of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "LazyDataSourceProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LazyDataSourceProps",
    "typeValue": {
     "raw": "LazyDataSourceProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LazyDataSourceProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LazyListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "api",
      "comment": [
       "A function to retrieve the data, asynchronously.",
       " This function usually performs a REST API call.",
       " API is used to retrieve lists of items.",
       " It is expected to:",
       " - be able to handle paging (via from/count params)",
       " - be able to retrieve specific items by the list of their ids",
       " - be able to retrieve children by parents (when getChildCount is specified, and ctx.parentId is passed)"
      ],
      "typeValue": {
       "raw": "LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": true
     },
     {
      "uid": 2,
      "name": "getChildCount",
      "comment": [
       "Should return number of children of the item.",
       " If it returns > 0, the item is assumed to have children and to be foldable.",
       " Usually, this value should be returned from API.",
       "",
       " If you can't get number of children via API, you can return a guess value (avg number of children for this type of entity).",
       " Note, that this can lead to more API calls, and increased load times in the 'parallel' fetch mode.",
       " @param item"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "filter",
      "comment": [
       "A filter to pass to API.",
       " Note, that the DataSourceState also has a filter fields. These two filters are merged before API calls.",
       " Use this prop if you need to apply some filter in any case.",
       " Prefer to use filter in the DataSourceState for end-user editable filters."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "fetchStrategy",
      "comment": [
       "Defines how to fetch children:",
       " sequential (default) - fetch children for each parent one-by-one. Makes minimal over-querying, at cost of some speed.",
       " parallel - fetch children for several parents simultaneously. Can make a lot of over-querying for deep trees.",
       "      Recommended for 2 level trees (grouping), as it makes no over-querying in this case, and is faster than sequential strategy."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sequential'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'parallel'</span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "flattenSearchResults",
      "comment": [
       "Falls back to plain list from tree, if there's search.",
       " Default is true.",
       "",
       " If enabled, and search is active:",
       " - API will be called with parentId and parent undefined",
       " - getChildCount is ignored, all nodes are assumed to have no children",
       "",
       " See more here: https://github.com/epam/UUI/issues/8"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "legacyLoadDataBehavior",
      "comment": [
       "This options is added for the purpose of supporting legacy behavior of fetching data",
       " on `getVisibleRows` and `getListProps`, not to break users' own implementation of dataSources.",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     }
    ]
   },
   "LazyListViewProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LazyListViewProps",
    "typeValue": {
     "raw": "LazyListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LazyListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * A function to retrieve the data, asynchronously.",
      "     * This function usually performs a REST API call.",
      "     * API is used to retrieve lists of items.",
      "     * It is expected to:",
      "     * - be able to handle paging (via from/count params)",
      "     * - be able to retrieve specific items by the list of their ids",
      "     * - be able to retrieve children by parents (when getChildCount is specified, and ctx.parentId is passed)",
      "     */</span>",
      "    api<span class=\"token operator\">:</span> LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Should return number of children of the item.",
      "     * If it returns > 0, the item is assumed to have children and to be foldable.",
      "     * Usually, this value should be returned from API.",
      "     *",
      "     * If you can't get number of children via API, you can return a guess value (avg number of children for this type of entity).",
      "     * Note, that this can lead to more API calls, and increased load times in the 'parallel' fetch mode.",
      "     * @param item",
      "     */</span>",
      "    getChildCount<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * A filter to pass to API.",
      "     * Note, that the DataSourceState also has a filter fields. These two filters are merged before API calls.",
      "     * Use this prop if you need to apply some filter in any case.",
      "     * Prefer to use filter in the DataSourceState for end-user editable filters.",
      "     */</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TFilter<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Defines how to fetch children:",
      "     * sequential (default) - fetch children for each parent one-by-one. Makes minimal over-querying, at cost of some speed.",
      "     * parallel - fetch children for several parents simultaneously. Can make a lot of over-querying for deep trees.",
      "     *      Recommended for 2 level trees (grouping), as it makes no over-querying in this case, and is faster than sequential strategy.",
      "     */</span>",
      "    fetchStrategy<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'sequential'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'parallel'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Falls back to plain list from tree, if there's search.",
      "     * Default is true.",
      "     *",
      "     * If enabled, and search is active:",
      "     * - API will be called with parentId and parent undefined",
      "     * - getChildCount is ignored, all nodes are assumed to have no children",
      "     *",
      "     * See more here: https://github.com/epam/UUI/issues/8",
      "     */</span>",
      "    flattenSearchResults<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * This options is added for the purpose of supporting legacy behavior of fetching data",
      "     * on `getVisibleRows` and `getListProps`, not to break users' own implementation of dataSources.",
      "     * @default true",
      "     */</span>",
      "    legacyLoadDataBehavior<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "api",
      "comment": [
       "A function to retrieve the data, asynchronously.",
       " This function usually performs a REST API call.",
       " API is used to retrieve lists of items.",
       " It is expected to:",
       " - be able to handle paging (via from/count params)",
       " - be able to retrieve specific items by the list of their ids",
       " - be able to retrieve children by parents (when getChildCount is specified, and ctx.parentId is passed)"
      ],
      "typeValue": {
       "raw": "LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "getChildCount",
      "comment": [
       "Should return number of children of the item.",
       " If it returns > 0, the item is assumed to have children and to be foldable.",
       " Usually, this value should be returned from API.",
       "",
       " If you can't get number of children via API, you can return a guess value (avg number of children for this type of entity).",
       " Note, that this can lead to more API calls, and increased load times in the 'parallel' fetch mode.",
       " @param item"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "filter",
      "comment": [
       "A filter to pass to API.",
       " Note, that the DataSourceState also has a filter fields. These two filters are merged before API calls.",
       " Use this prop if you need to apply some filter in any case.",
       " Prefer to use filter in the DataSourceState for end-user editable filters."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "fetchStrategy",
      "comment": [
       "Defines how to fetch children:",
       " sequential (default) - fetch children for each parent one-by-one. Makes minimal over-querying, at cost of some speed.",
       " parallel - fetch children for several parents simultaneously. Can make a lot of over-querying for deep trees.",
       "      Recommended for 2 level trees (grouping), as it makes no over-querying in this case, and is faster than sequential strategy."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sequential'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'parallel'</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "flattenSearchResults",
      "comment": [
       "Falls back to plain list from tree, if there's search.",
       " Default is true.",
       "",
       " If enabled, and search is active:",
       " - API will be called with parentId and parent undefined",
       " - getChildCount is ignored, all nodes are assumed to have no children",
       "",
       " See more here: https://github.com/epam/UUI/issues/8"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "legacyLoadDataBehavior",
      "comment": [
       "This options is added for the purpose of supporting legacy behavior of fetching data",
       " on `getVisibleRows` and `getListProps`, not to break users' own implementation of dataSources.",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "getId",
      "comment": [
       "Should return unique ID of the TItem",
       " If omitted, we assume that every TItem has and unique id in its 'id' field.",
       " @param item An item to get ID of"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "complexIds",
      "comment": [
       "Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).",
       " In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "getParentId",
      "comment": [
       "Should return ID of the Item's parent. Usually it's i => i.parentId.",
       " If specified, Data Source will build items hierarchy.",
       "",
       " Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:",
       " - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain",
       "   to highlight parents with selected children",
       " - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),",
       "   We need to load parents with a separate call (if backend doesn't pre-fetch them)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "rowOptions",
      "comment": [
       "Specifies if rows are selectable, checkable, draggable, clickable, and more.",
       " See DataRowOptions for more details.",
       " If options depends on the item itself, use getRowOptions.",
       " Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "getRowOptions",
      "comment": [
       "For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.",
       " To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.",
       " See DataRowOptions for more details.",
       " If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.",
       " Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance",
       " @param item An item to get options for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "isFoldedByDefault",
      "comment": [
       "Can be specified to unfold all or some items at start.",
       " If not specified, all rows would be folded."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "selectAll",
      "comment": [
       "Enables or disables \"select all\" checkbox. Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "backgroundReload",
      "comment": [
       "Enables background reloading of data on search/sort/filter/reload, which turns off the rows placeholders displaying while data loading.",
       " During data reloading, previous data is displayed. To prevent any interaction with visible not actual rows, a blocker/spinner should be displayed.",
       " In UUI components, such as `PickerInput`, `PickerList`, `PickerModal` and `DataTable`, blockers are added.",
       " It is required to add blockers/spinners to the components, built on your own.",
       " If reloading is started, `view.getListProps` returns `isReloading` flag, set to `true`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseListViewProps",
      "required": false
     }
    ]
   },
   "LazyLoadedMapLoadCallback": {
    "kind": 264,
    "typeRef": "@epam/uui-core:LazyLoadedMapLoadCallback",
    "typeValue": {
     "raw": "LazyLoadedMapLoadCallback<span class=\"token operator\">&lt;</span>TKey<span class=\"token punctuation\">,</span> TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token comment\">/**",
      " * An callback to pass to LazyLoadedMap constructor",
      " */</span>",
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">LazyLoadedMapLoadCallback<span class=\"token operator\">&lt;</span>TKey<span class=\"token punctuation\">,</span> TValue<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pending<span class=\"token operator\">:</span> TKey<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>",
      "    TKey<span class=\"token punctuation\">,</span>",
      "    TValue",
      "<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "comment": [
     "An callback to pass to LazyLoadedMap constructor"
    ]
   },
   "Link": {
    "kind": 263,
    "typeRef": "@epam/uui-core:Link",
    "typeValue": {
     "raw": "Link",
     "print": [
      "<span class=\"token comment\">// Defines location within SPA application</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Link</span> <span class=\"token punctuation\">{</span>",
      "    pathname<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    query<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    search<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    key<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    hash<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    state<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "pathname",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "query",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "hash",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "state",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     }
    ]
   },
   "ListApiResponse": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ListApiResponse",
    "typeValue": {
     "raw": "ListApiResponse<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ListApiResponse<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Items according to the request. For items that are not fetched yet, null will be returned. */</span>",
      "    items<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "comment": [
       "Items according to the request. For items that are not fetched yet, null will be returned."
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     }
    ]
   },
   "ListApiSettings": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ListApiSettings",
    "typeValue": {
     "raw": "ListApiSettings<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ListApiSettings<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Lazy List API used to fetch items */</span>",
      "    api<span class=\"token operator\">:</span> LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Get ID from an item. Id is expected to be value-type, i.e. can be used as Map's key */</span>",
      "    <span class=\"token function-variable function\">getId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Will be called after new data is fetched into the list */</span>",
      "    onUpdate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "api",
      "comment": [
       "Lazy List API used to fetch items"
      ],
      "typeValue": {
       "raw": "LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "getId",
      "comment": [
       "Get ID from an item. Id is expected to be value-type, i.e. can be used as Map's key"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "onUpdate",
      "comment": [
       "Will be called after new data is fetched into the list"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     }
    ]
   },
   "LoadingStatus": {
    "kind": 264,
    "typeRef": "@epam/uui-core:LoadingStatus",
    "typeValue": {
     "raw": "<span class=\"token keyword\">typeof</span> <span class=\"token constant\">UNKNOWN</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">LOADING</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">PENDING</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">LOADED</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">FAILED</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">LoadingStatus</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">UNKNOWN</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">LOADING</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">PENDING</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">LOADED</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">FAILED</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "LoadTreeOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:LoadTreeOptions",
    "typeValue": {
     "raw": "LoadTreeOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LoadTreeOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pick<span class=\"token operator\">&lt;</span>LazyListViewProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'api'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'getChildCount'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'filter'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fetchStrategy'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'flattenSearchResults'</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    loadAllChildren<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isFolded<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "loadAllChildren",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isFolded",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "filter",
      "comment": [
       "A filter to pass to API.",
       " Note, that the DataSourceState also has a filter fields. These two filters are merged before API calls.",
       " Use this prop if you need to apply some filter in any case.",
       " Prefer to use filter in the DataSourceState for end-user editable filters."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TFilter"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "api",
      "comment": [
       "A function to retrieve the data, asynchronously.",
       " This function usually performs a REST API call.",
       " API is used to retrieve lists of items.",
       " It is expected to:",
       " - be able to handle paging (via from/count params)",
       " - be able to retrieve specific items by the list of their ids",
       " - be able to retrieve children by parents (when getChildCount is specified, and ctx.parentId is passed)"
      ],
      "typeValue": {
       "raw": "LazyDataSourceApi<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": true
     },
     {
      "uid": 5,
      "name": "getChildCount",
      "comment": [
       "Should return number of children of the item.",
       " If it returns > 0, the item is assumed to have children and to be foldable.",
       " Usually, this value should be returned from API.",
       "",
       " If you can't get number of children via API, you can return a guess value (avg number of children for this type of entity).",
       " Note, that this can lead to more API calls, and increased load times in the 'parallel' fetch mode.",
       " @param item"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "fetchStrategy",
      "comment": [
       "Defines how to fetch children:",
       " sequential (default) - fetch children for each parent one-by-one. Makes minimal over-querying, at cost of some speed.",
       " parallel - fetch children for several parents simultaneously. Can make a lot of over-querying for deep trees.",
       "      Recommended for 2 level trees (grouping), as it makes no over-querying in this case, and is faster than sequential strategy."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sequential'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'parallel'</span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "flattenSearchResults",
      "comment": [
       "Falls back to plain list from tree, if there's search.",
       " Default is true.",
       "",
       " If enabled, and search is active:",
       " - API will be called with parentId and parent undefined",
       " - getChildCount is ignored, all nodes are assumed to have no children",
       "",
       " See more here: https://github.com/epam/UUI/issues/8"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:LazyListViewProps",
      "required": false
     }
    ]
   },
   "Metadata": {
    "kind": 263,
    "typeRef": "@epam/uui-core:Metadata",
    "typeValue": {
     "raw": "Metadata<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Metadata<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IDisableable</span><span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> ICanBeRequired <span class=\"token punctuation\">{</span>",
      "    props<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        <span class=\"token punctuation\">[</span><span class=\"token constant\">P</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> Metadata<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token constant\">P</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    all<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Metadata<span class=\"token operator\">&lt;</span>ElementType<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>",
      "    minValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    maxValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    maxLength<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    validators<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CustomValidator<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "props",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">P</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> Metadata<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token constant\">P</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "all",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Metadata<span class=\"token operator\">&lt;</span>ElementType<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "minValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "maxValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "maxLength",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "validators",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> CustomValidator<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 9,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "ModalBlockerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ModalBlockerProps",
    "typeValue": {
     "raw": "ModalBlockerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalBlockerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IModal<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    disableFocusLock<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    disableCloseByEsc<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    disallowClickOutside<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "disableFocusLock",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "disableCloseByEsc",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "disallowClickOutside",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 5,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 6,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 7,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 8,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 9,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 10,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "ModalComponentProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ModalComponentProps",
    "typeValue": {
     "raw": "ModalComponentProps<span class=\"token operator\">&lt;</span>TParameters<span class=\"token punctuation\">,</span> TResult<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalComponentProps<span class=\"token operator\">&lt;</span>TParameters<span class=\"token punctuation\">,</span> TResult<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    parameters<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TParameters<span class=\"token punctuation\">;</span>",
      "    isActive<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    depth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    zIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">success</span><span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TResult<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "parameters",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TParameters"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "depth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TResult<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "ModalFooterCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ModalFooterCoreProps",
    "typeValue": {
     "raw": "ModalFooterCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalFooterCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasChildren</span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    borderTop<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "borderTop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ModalHeaderCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ModalHeaderCoreProps",
    "typeValue": {
     "raw": "ModalHeaderCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalHeaderCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasChildren</span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    onClose<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ModalOperation": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ModalOperation",
    "typeValue": {
     "raw": "ModalOperation",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalOperation</span> <span class=\"token punctuation\">{</span>",
      "    component<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    props<span class=\"token operator\">:</span> ModalComponentProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "component",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "props",
      "typeValue": {
       "raw": "ModalComponentProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "ModalWindowProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ModalWindowProps",
    "typeValue": {
     "raw": "ModalWindowProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalWindowProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">VPanelProps</span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 6,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 7,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "from": "@epam/uui-core:VPanelProps",
      "required": false
     }
    ]
   },
   "NotificationOperation": {
    "kind": 263,
    "typeRef": "@epam/uui-core:NotificationOperation",
    "typeValue": {
     "raw": "NotificationOperation",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NotificationOperation</span> <span class=\"token punctuation\">{</span>",
      "    component<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    props<span class=\"token operator\">:</span> INotification<span class=\"token punctuation\">;</span>",
      "    config<span class=\"token operator\">:</span> NotificationParams<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "component",
      "typeValue": {
       "raw": "React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "props",
      "typeValue": {
       "raw": "INotification"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "config",
      "typeValue": {
       "raw": "NotificationParams"
      },
      "required": true
     }
    ]
   },
   "NotificationParams": {
    "kind": 263,
    "typeRef": "@epam/uui-core:NotificationParams",
    "typeValue": {
     "raw": "NotificationParams",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NotificationParams</span> <span class=\"token punctuation\">{</span>",
      "    duration<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'forever'</span><span class=\"token punctuation\">;</span>",
      "    position<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'bot-left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bot-right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bot-center'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "duration",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'forever'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "position",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bot-left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bot-right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bot-center'</span>"
      },
      "required": false
     }
    ]
   },
   "PickerBaseOptions": {
    "kind": 264,
    "typeRef": "@epam/uui-core:PickerBaseOptions",
    "typeValue": {
     "raw": "PickerBaseOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerBaseOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Name of the entity being selected. Affects wording like \"Please select [entity]\" */</span>",
      "    entityName<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Plural name of the entity being selected. Affects wording like \"X [entities] selected\" */</span>",
      "    entityPluralName<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Provides items to the Picker */</span>",
      "    dataSource<span class=\"token operator\">:</span> IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Gets entity display name. Default it item.name. */</span>",
      "    getName<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc. */</span>",
      "    renderRow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> dataSourceState<span class=\"token operator\">:</span> DataSourceState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks. */</span>",
      "    getRowOptions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides the default 'no records found' banner.",
      "     * The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything.  */</span>",
      "    renderNotFound<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "        <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers */</span>",
      "    emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span>",
      "    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource */</span>",
      "    sortBy<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario. */</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Defines sorting to pass to the DataSource */</span>",
      "    sorting<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
      "     * - false: All nodes are selected independently (default).",
      "     * - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
      "     * - 'implicit': Selecting a parent node means that all children are considered checked.",
      "     *   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
      "     *   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
      "     *   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
      "     *   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked.",
      "     */</span>",
      "    cascadeSelection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CascadeSelection<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** You can return true for all, or some items to fold them. */</span>",
      "    isFoldedByDefault<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field. */</span>",
      "    getSearchFields<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     }
    ]
   },
   "PickerBaseProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:PickerBaseProps",
    "typeValue": {
     "raw": "IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> PickerBaseOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> PickerBindingProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 76,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 77,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 78,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 79,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 80,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 81,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 82,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 83,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 84,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 85,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 86,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 87,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 88,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 89,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 40,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 16,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 94,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 95,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 96,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 97,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 98,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 99,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 100,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 41,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 42,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 43,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 90,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 66,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 67,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 68,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 91,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 92,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 93,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerBindingProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:PickerBindingProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerBindingProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> SinglePickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span> <span class=\"token operator\">|</span> ArrayPickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 11,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 37,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 38,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 39,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 40,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 41,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 42,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 13,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 32,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 22,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 34,
      "name": "emptyValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 25,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 33,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 35,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 36,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerBindingValueType": {
    "kind": 264,
    "typeRef": "@epam/uui-core:PickerBindingValueType",
    "typeValue": {
     "raw": "<span class=\"token string\">'scalar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'array'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerBindingValueType</span> <span class=\"token operator\">=</span> <span class=\"token string\">'scalar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'array'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "PickerFilterConfig": {
    "kind": 264,
    "typeRef": "@epam/uui-core:PickerFilterConfig",
    "typeValue": {
     "raw": "PickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> FilterConfigBase<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    type<span class=\"token operator\">:</span> <span class=\"token string\">'singlePicker'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multiPicker'</span><span class=\"token punctuation\">;</span>",
      "    dataSource<span class=\"token operator\">:</span> IDataSource<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    getName<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    renderRow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactNode<span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass false to hide search in picker body.",
      "     * If omitted, true value will be used.",
      "     */</span>",
      "    showSearch<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 2,
      "name": "field",
      "typeValue": {
       "raw": "<span class=\"token keyword\">keyof</span> TFilter"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 3,
      "name": "columnKey",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 4,
      "name": "isAlwaysVisible",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 5,
      "name": "predicates",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IFilterPredicate<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 6,
      "name": "maxCount",
      "comment": [
       "Count of words to show in the Filter toggler. By default, 2 item will be shown."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 7,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'singlePicker'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multiPicker'</span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "dataSource",
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "getName",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "renderRow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "showSearch",
      "comment": [
       "Pass false to hide search in picker body.",
       " If omitted, true value will be used."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "PickerFooterProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:PickerFooterProps",
    "typeValue": {
     "raw": "PickerFooterProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerFooterProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    view<span class=\"token operator\">:</span> IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    showSelected<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">clearSelection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    disableClear<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "view",
      "typeValue": {
       "raw": "IDataSourceView<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "showSelected",
      "typeValue": {
       "raw": "IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "clearSelection",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'single'</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "disableClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "RangeDatePickerCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:RangeDatePickerCoreProps",
    "typeValue": {
     "raw": "RangeDatePickerCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeDatePickerCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseRangeDatePickerProps</span> <span class=\"token punctuation\">{</span>",
      "    getPlaceholder<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> RangeDatePickerInputType<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    rawProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "        to<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "        body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getPlaceholder",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> RangeDatePickerInputType<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "rawProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> to<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "format",
      "comment": [
       "Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "filter",
      "comment": [
       "Filter selectable days. Days, for which this callback returns false - will be disabled"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "renderTarget",
      "comment": [
       "Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach RangeDatePicker to other components, e.g. Buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "renderFooter",
      "comment": [
       "Allows to add a custom footer to the Picker's dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> RangeDatePickerValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "renderDay",
      "comment": [
       "Overrides rendering of the single day. For example, to highlight certain days"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "presets",
      "comment": [
       "Range presets (like 'this week', 'this month', etc.) to display at the right of the Picker's body.",
       " UUI provides defaults in the 'rangeDatePickerPresets' exported variable - you can use it as is, or build on top of it (e.g. add your presets)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "disableClear",
      "comment": [
       "Disables clearing component (with the cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "isHoliday",
      "comment": [
       "If this function returns true, the day will be highlighted as holiday"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "onOpenChange",
      "comment": [
       "Called when component is opened/closed"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "inputCx",
      "comment": [
       "Styles for input and body components in RangeDatePicker"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "bodyCx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "RangeDatePickerValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> RangeDatePickerValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 19,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 23,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 24,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 25,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     }
    ]
   },
   "RangeDatePickerInputType": {
    "kind": 264,
    "typeRef": "@epam/uui-core:RangeDatePickerInputType",
    "typeValue": {
     "raw": "<span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">RangeDatePickerInputType</span> <span class=\"token operator\">=</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "RangeDatePickerPresets": {
    "kind": 264,
    "typeRef": "@epam/uui-core:RangeDatePickerPresets",
    "typeValue": {
     "raw": "RangeDatePickerPresets",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">RangeDatePickerPresets</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        name<span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>",
      "        <span class=\"token function-variable function\">getRange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> RangeDatePickerPresetValue<span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "[key: string]",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">getRange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> RangeDatePickerPresetValue<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": true
     }
    ]
   },
   "RangeDatePickerPresetValue": {
    "kind": 264,
    "typeRef": "@epam/uui-core:RangeDatePickerPresetValue",
    "typeValue": {
     "raw": "RangeDatePickerPresetValue",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">RangeDatePickerPresetValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    to<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    order<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "to",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "order",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "RangeDatePickerValue": {
    "kind": 263,
    "typeRef": "@epam/uui-core:RangeDatePickerValue",
    "typeValue": {
     "raw": "RangeDatePickerValue",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeDatePickerValue</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    to<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "to",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "RenderCellProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:RenderCellProps",
    "typeValue": {
     "raw": "RenderCellProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RenderCellProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataTableCellOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Lens instance, wrapping IEditable on the row, to help binding to row's value.",
      "     * E.g. &lt;TextInput { ...rowLens.prop('name').toProps() } />",
      "     */</span>",
      "    rowLens<span class=\"token operator\">:</span> ILens<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rowLens",
      "comment": [
       "Lens instance, wrapping IEditable on the row, to help binding to row's value.",
       " E.g. <TextInput { ...rowLens.prop('name').toProps() } />"
      ],
      "typeValue": {
       "raw": "ILens<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "key",
      "comment": [
       "Key to use as component's key"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 3,
      "name": "rowProps",
      "comment": [
       "DataTableRowsProps object for the table row the cell is at"
      ],
      "typeValue": {
       "raw": "DataTableRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 4,
      "name": "column",
      "comment": [
       "DataColumnProps object for the column the cell is at"
      ],
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 5,
      "name": "index",
      "comment": [
       "Column index in table"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": false
     },
     {
      "uid": 6,
      "name": "isFirstColumn",
      "comment": [
       "True if the cell is in the first column"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 7,
      "name": "isLastColumn",
      "comment": [
       "True if the cell is in the last column"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": true
     },
     {
      "uid": 8,
      "name": "tabIndex",
      "comment": [
       "HTML tabIndex attribute to set on the cell"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataTableCellOptions",
      "required": false
     }
    ]
   },
   "RenderEditorProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:RenderEditorProps",
    "typeValue": {
     "raw": "RenderEditorProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RenderEditorProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TCellValue<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>TCellValue<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> ICanFocus<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    mode<span class=\"token operator\">:</span> <span class=\"token string\">'cell'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This can signal the editor component to adapt it's visuals to cell editor</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rowProps",
      "typeValue": {
       "raw": "DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token string\">'cell'</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TCellValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TCellValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 5,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 9,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 10,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 11,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 12,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     }
    ]
   },
   "ScrollAlign": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ScrollAlign",
    "typeValue": {
     "raw": "<span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'nearest'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ScrollAlign</span> <span class=\"token operator\">=</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'nearest'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ScrollToConfig": {
    "kind": 263,
    "typeRef": "@epam/uui-core:ScrollToConfig",
    "typeValue": {
     "raw": "ScrollToConfig",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ScrollToConfig</span> <span class=\"token punctuation\">{</span>",
      "    index<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    behavior<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ScrollBehavior<span class=\"token punctuation\">;</span>",
      "    align<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ScrollAlign<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "index",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "behavior",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'instant'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'smooth'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "align",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'nearest'</span>"
      },
      "required": false
     }
    ]
   },
   "SearchResultItem": {
    "kind": 264,
    "typeRef": "@epam/uui-core:SearchResultItem",
    "typeValue": {
     "raw": "SearchResultItem<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SearchResultItem<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> TItem <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    parents<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>",
      "        TItem",
      "    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "parents",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span>TItem<span class=\"token punctuation\">]</span>"
      },
      "required": false
     }
    ]
   },
   "SinglePickerProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:SinglePickerProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SinglePickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** 'single' - only one item is selected. 'multi' - multiple items are selected */</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem) */</span>",
      "    valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 11,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 16,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 20,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "required": true
     },
     {
      "uid": 13,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "SkinContextComponentProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:SkinContextComponentProps",
    "typeValue": {
     "raw": "SkinContextComponentProps<span class=\"token operator\">&lt;</span>TProps<span class=\"token punctuation\">,</span> TSemanticProps<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SkinContextComponentProps<span class=\"token operator\">&lt;</span>TProps<span class=\"token punctuation\">,</span> TSemanticProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> TProps <span class=\"token operator\">&amp;</span> TSemanticProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    usageContext<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "usageContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     }
    ]
   },
   "SortDirection": {
    "kind": 264,
    "typeRef": "@epam/uui-core:SortDirection",
    "typeValue": {
     "raw": "<span class=\"token string\">'asc'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'desc'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SortDirection</span> <span class=\"token operator\">=</span> <span class=\"token string\">'asc'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'desc'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "SortingOption": {
    "kind": 263,
    "typeRef": "@epam/uui-core:SortingOption",
    "typeValue": {
     "raw": "SortingOption<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SortingOption<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    field<span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>",
      "    direction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SortDirection<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "field",
      "typeValue": {
       "raw": "<span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "direction",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'asc'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'desc'</span>"
      },
      "required": false
     }
    ]
   },
   "SpinnerCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:SpinnerCoreProps",
    "typeValue": {
     "raw": "SpinnerCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SpinnerCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "StatefulProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:StatefulProps",
    "typeValue": {
     "raw": "StatefulProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">StatefulProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    initialState<span class=\"token operator\">:</span> Partial<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    storage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> StatefulStorageSettings<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "initialState",
      "typeValue": {
       "raw": "Partial<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "render",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "storage",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'state'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'query'</span>"
      },
      "required": false
     }
    ]
   },
   "TableFiltersConfig": {
    "kind": 264,
    "typeRef": "@epam/uui-core:TableFiltersConfig",
    "typeValue": {
     "raw": "PickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> DatePickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> NumericFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> RangeDatePickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> CustomFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TableFiltersConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> PickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> DatePickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> NumericFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> RangeDatePickerFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span> <span class=\"token operator\">|</span> CustomFilterConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 39,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 40,
      "name": "field",
      "typeValue": {
       "raw": "<span class=\"token keyword\">keyof</span> TFilter"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 41,
      "name": "columnKey",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": true
     },
     {
      "uid": 42,
      "name": "isAlwaysVisible",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 43,
      "name": "predicates",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IFilterPredicate<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 44,
      "name": "maxCount",
      "comment": [
       "Count of words to show in the Filter toggler. By default, 2 item will be shown."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:FilterConfigBase",
      "required": false
     },
     {
      "uid": 7,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'singlePicker'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multiPicker'</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": true
     },
     {
      "uid": 8,
      "name": "dataSource",
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": true
     },
     {
      "uid": 9,
      "name": "getName",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 10,
      "name": "renderRow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 11,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 12,
      "name": "showSearch",
      "comment": [
       "Pass false to hide search in picker body.",
       " If omitted, true value will be used."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:PickerFilterConfig",
      "required": false
     },
     {
      "uid": 19,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'datePicker'</span>"
      },
      "from": "@epam/uui-core:DatePickerFilterConfig",
      "required": true
     },
     {
      "uid": 20,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 21,
      "name": "format",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 28,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'numeric'</span>"
      },
      "from": "@epam/uui-core:NumericFilterConfig",
      "required": true
     },
     {
      "uid": 35,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'rangeDatePicker'</span>"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": true
     },
     {
      "uid": 36,
      "name": "format",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 37,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 38,
      "name": "presets",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "from": "@epam/uui-core:RangeDatePickerFilterConfig",
      "required": false
     },
     {
      "uid": 45,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token string\">'custom'</span>"
      },
      "from": "@epam/uui-core:CustomFilterConfig",
      "required": true
     },
     {
      "uid": 46,
      "name": "render",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IFilterItemBodyProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-core:CustomFilterConfig",
      "required": true
     },
     {
      "uid": 47,
      "name": "getTogglerValue",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IFilterItemBodyProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:CustomFilterConfig",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "TextInputCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:TextInputCoreProps",
    "typeValue": {
     "raw": "TextInputCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextInputCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IClickable<span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasPlaceholder<span class=\"token punctuation\">,</span> IHasIcon<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IDropdownToggler<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> ICanFocus<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasTabIndex <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Enables cancel (cross) icon, and fires when the icon is clicked */</span>",
      "    onCancel<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Enables accept (check) icon, and fires when the icon is clicked */</span>",
      "    onAccept<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** keydown event handler to put on the HTML input element */</span>",
      "    onKeyDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Put focus on the element, when component is mounted */</span>",
      "    autoFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Standard 'type' attribute to put on the HTML input element (e.g. 'password') */</span>",
      "    type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Standard [autocomplete attribute]{@link https://www.w3schools.com/tags/att_input_autocomplete.asp} */</span>",
      "    autoComplete<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Standard [name attribute]{@link https://www.w3schools.com/tags/att_input_name.asp} */</span>",
      "    name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Maximum input length in characters */</span>",
      "    maxLength<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Standard [inputMode attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode} */</span>",
      "    inputMode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>InputHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'inputMode'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** HTML ID attribute for input */</span>",
      "    id<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onCancel",
      "comment": [
       "Enables cancel (cross) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "onAccept",
      "comment": [
       "Enables accept (check) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onKeyDown",
      "comment": [
       "keydown event handler to put on the HTML input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "autoFocus",
      "comment": [
       "Put focus on the element, when component is mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "type",
      "comment": [
       "Standard 'type' attribute to put on the HTML input element (e.g. 'password')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "autoComplete",
      "comment": [
       "Standard [autocomplete attribute]{@link https://www.w3schools.com/tags/att_input_autocomplete.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "name",
      "comment": [
       "Standard [name attribute]{@link https://www.w3schools.com/tags/att_input_name.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "maxLength",
      "comment": [
       "Maximum input length in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "inputMode",
      "comment": [
       "Standard [inputMode attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "id",
      "comment": [
       "HTML ID attribute for input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 12,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 20,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 21,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 22,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 23,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 24,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 25,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 29,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 30,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 31,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 32,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 33,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 34,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 35,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     }
    ]
   },
   "TimePickerValue": {
    "kind": 263,
    "typeRef": "@epam/uui-core:TimePickerValue",
    "typeValue": {
     "raw": "TimePickerValue",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimePickerValue</span> <span class=\"token punctuation\">{</span>",
      "    hours<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    minutes<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "hours",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "minutes",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "TMouseCoords": {
    "kind": 264,
    "typeRef": "@epam/uui-core:TMouseCoords",
    "typeValue": {
     "raw": "TMouseCoords",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TMouseCoords</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    mousePageX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    mousePageY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    mouseDx<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    mouseDy<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    mouseDxSmooth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    mouseDySmooth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    mouseDownPageX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    mouseDownPageY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    buttons<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "mousePageX",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "mousePageY",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "mouseDx",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "mouseDy",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "mouseDxSmooth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "mouseDySmooth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "mouseDownPageX",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "mouseDownPageY",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "buttons",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "TooltipCoreProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:TooltipCoreProps",
    "typeValue": {
     "raw": "TooltipCoreProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TooltipCoreProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> Pick<span class=\"token operator\">&lt;</span>DropdownProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'onClose'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'placement'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modifiers'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'openDelay'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'closeDelay'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'closeOnMouseLeave'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'portalTarget'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundaryElement'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'closeBodyOnTogglerHidden'</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Content to show in the tooltip (ReactNode) */</span>",
      "    content<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Alternative to 'content' prop, you can pass a render function.",
      "     * The function will only be called when content is shown, this can save performance. */</span>",
      "    renderContent<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** See [Popper docs]{@link https://popper.js.org/docs/v2/modifiers/offset/} */</span>",
      "    offset<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Options<span class=\"token punctuation\">[</span><span class=\"token string\">'offset'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** React Node(s) to show tooltip for */</span>",
      "    children<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Max width of tooltip */</span>",
      "    maxWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "content",
      "comment": [
       "Content to show in the tooltip (ReactNode)"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "renderContent",
      "comment": [
       "Alternative to 'content' prop, you can pass a render function.",
       " The function will only be called when content is shown, this can save performance."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "offset",
      "comment": [
       "See [Popper docs]{@link https://popper.js.org/docs/v2/modifiers/offset/}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> OffsetsFunction <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "comment": [
       "React Node(s) to show tooltip for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "maxWidth",
      "comment": [
       "Max width of tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "placement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "modifiers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>Modifier<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> object<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "openDelay",
      "comment": [
       "Should we close dropdown on click on the Toggler, if it's already open? Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "closeDelay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "closeOnMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toggler'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundary'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "boundaryElement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement <span class=\"token operator\">|</span> HTMLElement<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'clippingParents'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "closeBodyOnTogglerHidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     }
    ]
   },
   "TreeNodeInfo": {
    "kind": 263,
    "typeRef": "@epam/uui-core:TreeNodeInfo",
    "typeValue": {
     "raw": "TreeNodeInfo",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeNodeInfo</span> <span class=\"token punctuation\">{</span>",
      "    count<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "TreeParams": {
    "kind": 263,
    "typeRef": "@epam/uui-core:TreeParams",
    "typeValue": {
     "raw": "TreeParams<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeParams<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    getId<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "    getParentId<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>",
      "    complexIds<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getId",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "getParentId",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TId <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "complexIds",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "UseFormProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:UseFormProps",
    "typeValue": {
     "raw": "UseFormProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">UseFormProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>FormProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'renderForm'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "value",
      "comment": [
       "Current value of the form state"
      ],
      "typeValue": {
       "raw": "<span class=\"token constant\">T</span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": true
     },
     {
      "uid": 2,
      "name": "getMetadata",
      "comment": [
       "Returns form metadata - information used to validate the form.",
       " @param state Metadata can depend on state, and will be re-computed on updates"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Metadata<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "onSave",
      "comment": [
       "Occurs when 'save' function is called on Form.",
       " Should save form data (usually with API call to server).",
       " Server can also reject form, and provide validation errors in response.",
       " @param state Form state to save"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> FormSaveResponse<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": true
     },
     {
      "uid": 4,
      "name": "beforeLeave",
      "comment": [
       "Called when form is unmounted, but user still have unsaved changes.",
       " Accepts a Promise<boolean> to be returned. If promise resolves to true - save procedure is performed.",
       " The common use-case is to show a modal with \"Save Changes?\" dialog",
       " Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "loadUnsavedChanges",
      "comment": [
       "Used to restore unsaved user edits from the last session (usually to localstorage, via uuiUserSettings context)",
       " If unsaved changes are detected, this callback is called. If it is resolved - the form restores unsaved edits.",
       " The common use-case is to show a modal with \"You have unsaved changes, restore them?\" dialog",
       " Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "onSuccess",
      "comment": [
       "Called after successful save.",
       " @param state Saved state",
       " @param isSavedBeforeLeave true, if save is triggered via leaving the page, and \"Save Changes?\" dialog"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> isSavedBeforeLeave<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onError",
      "comment": [
       "Called when save fails"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "settingsKey",
      "comment": [
       "The key, under which form save unsaved state usually to localstorage, via uuiUserSettings context)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationOn",
      "comment": [
       "Controls when form validation occurs:",
       " save (default, recommended) - form is validated on save. If form is invalid - it will be revalidated on every change, until become valid",
       " change - form is validated on every user change. Only fields changes in current edit session are validated"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'change'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'save'</span>"
      },
      "from": "@epam/uui-core:FormProps",
      "required": false
     }
    ]
   },
   "UseTableStateHookParams": {
    "kind": 263,
    "typeRef": "@epam/uui-core:UseTableStateHookParams",
    "typeValue": {
     "raw": "UseTableStateHookParams<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UseTableStateHookParams<span class=\"token operator\">&lt;</span>TFilter <span class=\"token operator\">=</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> TViewState <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UseTableStateHookBaseParams<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> Partial<span class=\"token operator\">&lt;</span>IEditable<span class=\"token operator\">&lt;</span>DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">>>></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "columns",
      "comment": [
       "Columns configuration, can be omitted if used without tables"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataColumnProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:UseTableStateHookBaseParams",
      "required": false
     },
     {
      "uid": 2,
      "name": "filters",
      "comment": [
       "Filters configuration, can be omitted if you don't need filters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TableFiltersConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:UseTableStateHookBaseParams",
      "required": false
     },
     {
      "uid": 3,
      "name": "initialPresets",
      "comment": [
       "Initial presets array"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:UseTableStateHookBaseParams",
      "required": false
     },
     {
      "uid": 4,
      "name": "onPresetCreate",
      "comment": [
       "Called when preset was created. Should return the ID of new preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:UseTableStateHookBaseParams",
      "required": false
     },
     {
      "uid": 5,
      "name": "onPresetUpdate",
      "comment": [
       "Called when preset was updated"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:UseTableStateHookBaseParams",
      "required": false
     },
     {
      "uid": 6,
      "name": "onPresetDelete",
      "comment": [
       "Called when preset was deleted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:UseTableStateHookBaseParams",
      "required": false
     },
     {
      "uid": 7,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span>TFilter<span class=\"token punctuation\">,</span> TViewState<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 13,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 14,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "UseUuiErrorOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-core:UseUuiErrorOptions",
    "typeValue": {
     "raw": "UseUuiErrorOptions",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UseUuiErrorOptions</span> <span class=\"token punctuation\">{</span>",
      "    errorConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>ApiCallErrorType<span class=\"token punctuation\">,</span> UuiErrorInfo<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    recoveryConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>ApiRecoveryReason<span class=\"token punctuation\">,</span> UuiRecoveryErrorInfo<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "errorConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Record<span class=\"token operator\">&lt;</span>UuiErrorInfo<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "recoveryConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Record<span class=\"token operator\">&lt;</span>UuiRecoveryErrorInfo<span class=\"token operator\">></span>"
      },
      "required": false
     }
    ]
   },
   "UseUuiErrorProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:UseUuiErrorProps",
    "typeValue": {
     "raw": "UseUuiErrorProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UseUuiErrorProps</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function-variable function\">getErrorInfo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> defaultErrorInfo<span class=\"token operator\">:</span> UuiErrorInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> UuiErrorInfo<span class=\"token punctuation\">;</span>",
      "    options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> UseUuiErrorOptions<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getErrorInfo",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> defaultErrorInfo<span class=\"token operator\">:</span> UuiErrorInfo"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "options",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> UseUuiErrorOptions"
      },
      "required": false
     }
    ]
   },
   "UseUuiServicesProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:UseUuiServicesProps",
    "typeValue": {
     "raw": "UseUuiServicesProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UseUuiServicesProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token punctuation\">,</span> TAppContext<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UuiServicesProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    appContext<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TAppContext<span class=\"token punctuation\">;</span>",
      "    router<span class=\"token operator\">:</span> IRouterContext<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "appContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TAppContext"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "router",
      "typeValue": {
       "raw": "IRouterContext"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "apiDefinition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>processRequest<span class=\"token operator\">:</span> IProcessRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TApi"
      },
      "from": "@epam/uui-core:UuiServicesProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "skinContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ISkin"
      },
      "from": "@epam/uui-core:UuiServicesProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "apiReloginPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "apiPingPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "apiServerUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     }
    ]
   },
   "UuiContexts": {
    "kind": 263,
    "typeRef": "@epam/uui-core:UuiContexts",
    "typeValue": {
     "raw": "UuiContexts",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UuiContexts</span> <span class=\"token punctuation\">{</span>",
      "    uuiApi<span class=\"token operator\">:</span> IApiContext<span class=\"token punctuation\">;</span>",
      "    uuiRouter<span class=\"token operator\">:</span> IRouterContext<span class=\"token punctuation\">;</span>",
      "    uuiModals<span class=\"token operator\">:</span> IModalContext<span class=\"token punctuation\">;</span>",
      "    uuiDnD<span class=\"token operator\">:</span> IDndContext<span class=\"token punctuation\">;</span>",
      "    uuiUserSettings<span class=\"token operator\">:</span> IUserSettingsContext<span class=\"token punctuation\">;</span>",
      "    uuiAnalytics<span class=\"token operator\">:</span> IAnalyticsContext<span class=\"token punctuation\">;</span>",
      "    uuiErrors<span class=\"token operator\">:</span> IErrorContext<span class=\"token punctuation\">;</span>",
      "    uuiNotifications<span class=\"token operator\">:</span> INotificationContext<span class=\"token punctuation\">;</span>",
      "    uuiLayout<span class=\"token operator\">:</span> ILayoutContext<span class=\"token punctuation\">;</span>",
      "    uuiLocks<span class=\"token operator\">:</span> ILockContext<span class=\"token punctuation\">;</span>",
      "    uuiSkin<span class=\"token operator\">:</span> SkinContext<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "uuiApi",
      "typeValue": {
       "raw": "IApiContext"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "uuiRouter",
      "typeValue": {
       "raw": "IRouterContext"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "uuiModals",
      "typeValue": {
       "raw": "IModalContext"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "uuiDnD",
      "typeValue": {
       "raw": "IDndContext"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "uuiUserSettings",
      "typeValue": {
       "raw": "IUserSettingsContext"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "uuiAnalytics",
      "typeValue": {
       "raw": "IAnalyticsContext"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "uuiErrors",
      "typeValue": {
       "raw": "IErrorContext"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "uuiNotifications",
      "typeValue": {
       "raw": "INotificationContext"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "uuiLayout",
      "typeValue": {
       "raw": "ILayoutContext"
      },
      "required": true
     },
     {
      "uid": 10,
      "name": "uuiLocks",
      "typeValue": {
       "raw": "ILockContext"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "uuiSkin",
      "typeValue": {
       "raw": "SkinContext"
      },
      "required": true
     }
    ]
   },
   "UuiErrorInfo": {
    "kind": 263,
    "typeRef": "@epam/uui-core:UuiErrorInfo",
    "typeValue": {
     "raw": "UuiErrorInfo",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UuiErrorInfo</span> <span class=\"token punctuation\">{</span>",
      "    status<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    subtitle<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    imageUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    mobileImageUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "status",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "subtitle",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "imageUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "mobileImageUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "UuiRecoveryErrorInfo": {
    "kind": 264,
    "typeRef": "@epam/uui-core:UuiRecoveryErrorInfo",
    "typeValue": {
     "raw": "UuiRecoveryErrorInfo",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">UuiRecoveryErrorInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    subtitle<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "subtitle",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "UuiServicesProps": {
    "kind": 263,
    "typeRef": "@epam/uui-core:UuiServicesProps",
    "typeValue": {
     "raw": "UuiServicesProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UuiServicesProps<span class=\"token operator\">&lt;</span>TApi<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ApiContextProps</span> <span class=\"token punctuation\">{</span>",
      "    apiDefinition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>processRequest<span class=\"token operator\">:</span> IProcessRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TApi<span class=\"token punctuation\">;</span>",
      "    skinContext<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ISkin<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "apiDefinition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>processRequest<span class=\"token operator\">:</span> IProcessRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> TApi"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "skinContext",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ISkin"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "apiReloginPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "apiPingPath",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "apiServerUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ApiContextProps",
      "required": false
     }
    ]
   },
   "ValidationMode": {
    "kind": 264,
    "typeRef": "@epam/uui-core:ValidationMode",
    "typeValue": {
     "raw": "<span class=\"token string\">'change'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'save'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ValidationMode</span> <span class=\"token operator\">=</span> <span class=\"token string\">'change'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'save'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "VirtualListRange": {
    "kind": 263,
    "typeRef": "@epam/uui-core:VirtualListRange",
    "typeValue": {
     "raw": "VirtualListRange",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">VirtualListRange</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Index of the topmost item, in rendered batch.",
      "     * Note - this item might not be visible, as Virtual List maintain some reserve of rows on top / at the bottom of the list",
      "     */</span>",
      "    topIndex<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Number of currently rendered items.",
      "     * Virtual list updates this value automatically, if it too small.",
      "     * Note Virtual List renders more items, that actually visible,",
      "     * as it need maintain some reserve of rows on top / at the bottom of the list.",
      "     */</span>",
      "    visibleCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "topIndex",
      "comment": [
       "Index of the topmost item, in rendered batch.",
       " Note - this item might not be visible, as Virtual List maintain some reserve of rows on top / at the bottom of the list"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "visibleCount",
      "comment": [
       "Number of currently rendered items.",
       " Virtual list updates this value automatically, if it too small.",
       " Note Virtual List renders more items, that actually visible,",
       " as it need maintain some reserve of rows on top / at the bottom of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "VirtualListState": {
    "kind": 263,
    "typeRef": "@epam/uui-core:VirtualListState",
    "typeValue": {
     "raw": "VirtualListState",
     "print": [
      "<span class=\"token comment\">/** Holds state of a Virtual List - top visible item index, and estimated count of visible items */</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">VirtualListState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">VirtualListRange</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Virtual list ensures that row with this Index is within the visible area, if not Virtual List .",
      "     * Virtual list updates this value on scroll to null when appear in the visible area.",
      "     * If this value is updated manually, Virtual List would scroll to the specified items.",
      "     * It would attempt to put scroll so this item will be at the top of the list.",
      "     */</span>",
      "    scrollTo<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ScrollToConfig<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Virtual List manually scroll to this Index when it appears not within the visible area.",
      "     * It would attempt to put scroll so this item will be in the middle of the list.",
      "     */</span>",
      "    focusedIndex<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "comment": [
     "Holds state of a Virtual List - top visible item index, and estimated count of visible items"
    ],
    "props": [
     {
      "uid": 1,
      "name": "scrollTo",
      "comment": [
       "Virtual list ensures that row with this Index is within the visible area, if not Virtual List .",
       " Virtual list updates this value on scroll to null when appear in the visible area.",
       " If this value is updated manually, Virtual List would scroll to the specified items.",
       " It would attempt to put scroll so this item will be at the top of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ScrollToConfig"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "focusedIndex",
      "comment": [
       "Virtual List manually scroll to this Index when it appears not within the visible area.",
       " It would attempt to put scroll so this item will be in the middle of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "topIndex",
      "comment": [
       "Index of the topmost item, in rendered batch.",
       " Note - this item might not be visible, as Virtual List maintain some reserve of rows on top / at the bottom of the list"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:VirtualListRange",
      "required": false
     },
     {
      "uid": 4,
      "name": "visibleCount",
      "comment": [
       "Number of currently rendered items.",
       " Virtual list updates this value automatically, if it too small.",
       " Note Virtual List renders more items, that actually visible,",
       " as it need maintain some reserve of rows on top / at the bottom of the list."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:VirtualListRange",
      "required": false
     }
    ]
   },
   "VPanelProps": {
    "kind": 264,
    "typeRef": "@epam/uui-core:VPanelProps",
    "typeValue": {
     "raw": "VPanelProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">VPanelProps</span> <span class=\"token operator\">=</span> IHasCX <span class=\"token operator\">&amp;</span> IHasChildren <span class=\"token operator\">&amp;</span> IClickable <span class=\"token operator\">&amp;</span> IHasRawProps<span class=\"token operator\">&lt;</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token operator\">&amp;</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IAnalyticableClick <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    style<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CSSProperties<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 6,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 7,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "required": false
     }
    ]
   }
  },
  "@epam/uui-components": {
   "AccordionProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:AccordionProps",
    "typeValue": {
     "raw": "GeneralAccordionProps <span class=\"token operator\">|</span> EditableAccordionProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">AccordionProps</span> <span class=\"token operator\">=</span> GeneralAccordionProps <span class=\"token operator\">|</span> EditableAccordionProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 10,
      "name": "title",
      "comment": [
       "Accordion title"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "renderTitle",
      "comment": [
       "Overrides default title rendering."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "dropdownIcon",
      "comment": [
       "Overrides the default dropdown (folding) icon.Pass null to disable the folding icon completely"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "renderAdditionalItems",
      "comment": [
       "Renders additional items to component's header (after the title, and before the folding icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 15,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 16,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 17,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 19,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 21,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ],
    "propsFromUnion": true
   },
   "AccordionState": {
    "kind": 263,
    "typeRef": "@epam/uui-components:AccordionState",
    "typeValue": {
     "raw": "AccordionState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccordionState</span> <span class=\"token punctuation\">{</span>",
      "    opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "opened",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     }
    ]
   },
   "AdaptiveItemProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:AdaptiveItemProps",
    "typeValue": {
     "raw": "AdaptiveItemProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">AdaptiveItemProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token constant\">T</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> AdaptiveItemProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> hiddenItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> AdaptiveItemProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> displayedItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> AdaptiveItemProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    priority<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    collapsedContainer<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "render",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> AdaptiveItemProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "AdaptivePanelProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:AdaptivePanelProps",
    "typeValue": {
     "raw": "AdaptivePanelProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AdaptivePanelProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    items<span class=\"token operator\">:</span> AdaptiveItemProps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> hiddenItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> displayedItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> priority<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> collapsedContainer<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "AnchorProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:AnchorProps",
    "typeValue": {
     "raw": "AnchorProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AnchorProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> ICanRedirect<span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IClickable<span class=\"token punctuation\">,</span> IAnalyticableClick<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLAnchorElement <span class=\"token operator\">|</span> HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 3,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 4,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 5,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 6,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 9,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 10,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "ArrayPickerProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:ArrayPickerProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ArrayPickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span>",
      "    emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>",
      "    <span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span>",
      "    emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>",
      "    <span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 12,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "required": true
     },
     {
      "uid": 14,
      "name": "emptyValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 5,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 17,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 21,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 22,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 13,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "required": true
     },
     {
      "uid": 15,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "AvatarProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:AvatarProps",
    "typeValue": {
     "raw": "AvatarProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AvatarProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>ImgHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLImageElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLImageElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** HTML alt attribute value */</span>",
      "    alt<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Image URL */</span>",
      "    img<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Size  */</span>",
      "    size<span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'54'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'72'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'78'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'90'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'144'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** True to show placeholder */</span>",
      "    isLoading<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Avatar onClick.",
      "     *  @deprecated Property onClick is deprecated and will be removed in future release.",
      "     * */</span>",
      "    onClick<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "alt",
      "comment": [
       "HTML alt attribute value"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "img",
      "comment": [
       "Image URL"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "size",
      "comment": [
       "Size"
      ],
      "typeValue": {
       "raw": "<span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'54'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'72'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'78'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'90'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'144'</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "isLoading",
      "comment": [
       "True to show placeholder"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "onClick",
      "comment": [
       "Avatar onClick.",
       "  @deprecated Property onClick is deprecated and will be removed in future release."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ImgHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLImageElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLImageElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLImageElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "AvatarStackProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:AvatarStackProps",
    "typeValue": {
     "raw": "AvatarStackProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AvatarStackProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    avatarSize<span class=\"token operator\">:</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'144'</span><span class=\"token punctuation\">;</span>",
      "    urlArray<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    direction<span class=\"token operator\">:</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">;</span>",
      "    avatarsCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    renderItem<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "avatarSize",
      "typeValue": {
       "raw": "<span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'144'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "urlArray",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "direction",
      "typeValue": {
       "raw": "<span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "avatarsCount",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderItem",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "BaseRatingProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:BaseRatingProps",
    "typeValue": {
     "raw": "BaseRatingProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseRatingProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    to<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    step<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>",
      "    renderRating<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>rating<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> markWidth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> numberOfMarks<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "to",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "step",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderRating",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rating<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> markWidth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> numberOfMarks<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 7,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 13,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "BaseTimePickerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:BaseTimePickerProps",
    "typeValue": {
     "raw": "BaseTimePickerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseTimePickerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>TimePickerValue <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IHasPlaceholder <span class=\"token punctuation\">{</span>",
      "    minutesStep<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    format<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>",
      "    id<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    renderTarget<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    rawProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "        body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS class(es) to put on input-part component. See https://github.com/JedWatson/classnames#usage for details */</span>",
      "    inputCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS class(es) to put on body-part component. See https://github.com/JedWatson/classnames#usage for details */</span>",
      "    bodyCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "minutesStep",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "format",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put on input-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "bodyCx",
      "comment": [
       "CSS class(es) to put on body-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> TimePickerValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TimePickerValue <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     }
    ]
   },
   "BlockerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:BlockerProps",
    "typeValue": {
     "raw": "BlockerProps",
     "print": [
      "<span class=\"token comment\">// TBD: move to loveship-specific mods</span>",
      "<span class=\"token comment\">// import { EpamColor, SpinnerMods } from '@epam/oswald';</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BlockerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Turns the blocker on or off */</span>",
      "    isEnabled<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Disables spinner animation display */</span>",
      "    hideSpinner<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Sets the minimal height in px, for cases when blocked content is empty */</span>",
      "    spacerHeight<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Replaces default spinner */</span>",
      "    renderSpinner<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span> <span class=\"token comment\">// React.ComponentClass&lt;SpinnerMods>;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isEnabled",
      "comment": [
       "Turns the blocker on or off"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "hideSpinner",
      "comment": [
       "Disables spinner animation display"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "spacerHeight",
      "comment": [
       "Sets the minimal height in px, for cases when blocked content is empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderSpinner",
      "comment": [
       "Replaces default spinner"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "BurgerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:BurgerProps",
    "typeValue": {
     "raw": "BurgerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BurgerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    burgerIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    crossIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    burgerContentCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    renderBurgerContent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    bg<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    logoUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "burgerIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "crossIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "burgerContentCx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderBurgerContent",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "bg",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "logoUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 9,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "ButtonBaseProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:ButtonBaseProps",
    "typeValue": {
     "raw": "ButtonBaseProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonBaseProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ButtonBaseCoreProps</span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 3,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 4,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 5,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 6,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 9,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 10,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 11,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 12,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "ButtonProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:ButtonProps",
    "typeValue": {
     "raw": "ButtonProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ButtonCoreProps</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Icon for clear value button (usually cross) */</span>",
      "    clearIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS classes to put on the caption */</span>",
      "    captionCX<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 9,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 10,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 15,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 16,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 18,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 19,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 21,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "CalendarPresetsProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:CalendarPresetsProps",
    "typeValue": {
     "raw": "CalendarPresetsProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CalendarPresetsProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    presets<span class=\"token operator\">:</span> RangeDatePickerPresets<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">onPresetSet</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nV<span class=\"token operator\">:</span> RangeDatePickerPresetValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "presets",
      "typeValue": {
       "raw": "RangeDatePickerPresets"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "onPresetSet",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>nV<span class=\"token operator\">:</span> RangeDatePickerPresetValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "CalendarProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:CalendarProps",
    "typeValue": {
     "raw": "CalendarProps<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CalendarProps<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    value<span class=\"token operator\">:</span> TSelection<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">onValueChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    displayedDate<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">;</span>",
      "    renderDay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">onDayClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    hideAnotherMonths<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    getDayCX<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    isHoliday<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "value",
      "typeValue": {
       "raw": "TSelection"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "onValueChange",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "displayedDate",
      "typeValue": {
       "raw": "Dayjs"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "renderDay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "hideAnotherMonths",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "getDayCX",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "isHoliday",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 10,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "CarouselProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:CarouselProps",
    "typeValue": {
     "raw": "CarouselProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CarouselProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    items<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">renderItem</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    divideBy<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    arrowIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "renderItem",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "divideBy",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "arrowIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "CarouselState": {
    "kind": 263,
    "typeRef": "@epam/uui-components:CarouselState",
    "typeValue": {
     "raw": "CarouselState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CarouselState</span> <span class=\"token punctuation\">{</span>",
      "    activeSlide<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "activeSlide",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "CheckboxGroupProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:CheckboxGroupProps",
    "typeValue": {
     "raw": "CheckboxGroupProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CheckboxGroupProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ICanBeInvalid</span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>TValue<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IHasDirection<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>FieldsetHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLFieldSetElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLFieldSetElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Overrides the component to render a single checkbox  */</span>",
      "    CheckboxInput<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>CheckboxProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Each item defines: name: string, id: TValue (which item to put into array when item is checked), renderName() - an alternative to passing name  */</span>",
      "    items<span class=\"token operator\">:</span> CheckboxGroupItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "CheckboxInput",
      "comment": [
       "Overrides the component to render a single checkbox"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span>CheckboxProps<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span>CheckboxProps<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "items",
      "comment": [
       "Each item defines: name: string, id: TValue (which item to put into array when item is checked), renderName() - an alternative to passing name"
      ],
      "typeValue": {
       "raw": "CheckboxGroupItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 4,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TValue<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 10,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 11,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "direction",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'vertical'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'horizontal'</span>"
      },
      "from": "@epam/uui-core:IHasDirection",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FieldsetHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLFieldSetElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLFieldSetElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLFieldSetElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "CheckboxProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:CheckboxProps",
    "typeValue": {
     "raw": "CheckboxProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CheckboxProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CheckboxCoreProps</span><span class=\"token punctuation\">,</span> IHasTabIndex <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Check icon */</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Indeterminate state icon */</span>",
      "    indeterminateIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    renderLabel<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    id<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Check icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "indeterminateIcon",
      "comment": [
       "Indeterminate state icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "renderLabel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 6,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 11,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 12,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 13,
      "name": "indeterminate",
      "comment": [
       "Sets checkbox in indeterminate state (neither checked or unchecked), which usually means that children elements has both values"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICheckable",
      "required": false
     },
     {
      "uid": 14,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 15,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 16,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 17,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 18,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 19,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 21,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     }
    ]
   },
   "ColumnsConfigurationRowProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:ColumnsConfigurationRowProps",
    "typeValue": {
     "raw": "ColumnsConfigurationRowProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ColumnsConfigurationRowProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">GroupedDataColumnProps</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function-variable function\">toggleVisibility</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">togglePin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">onCanAcceptDrop</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> AcceptDropParams<span class=\"token operator\">&lt;</span>DndDataType<span class=\"token punctuation\">,</span> DndDataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DropPositionOptions <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">onDrop</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DropParams<span class=\"token operator\">&lt;</span>DndDataType<span class=\"token punctuation\">,</span> DndDataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    columnConfig<span class=\"token operator\">:</span> IColumnConfig<span class=\"token punctuation\">;</span>",
      "    isDndAllowed<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isPinned<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isPinnedAlways<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "toggleVisibility",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "togglePin",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "onCanAcceptDrop",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DropPosition<span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "onDrop",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> DndDataType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "columnConfig",
      "typeValue": {
       "raw": "IColumnConfig"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "isDndAllowed",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "isPinned",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 8,
      "name": "isPinnedAlways",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 9,
      "name": "groupKey",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'hidden'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'displayedUnpinned'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'displayedPinned'</span>"
      },
      "from": "@epam/uui-components:GroupedDataColumnProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "key",
      "comment": [
       "Unique key to identify the column. Used to reference columns, e.g. in ColumnsConfig.",
       " Also, used as React key for cells, header cells, and other components inside tables."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": true
     },
     {
      "uid": 11,
      "name": "caption",
      "comment": [
       "Column caption. Can be a plain text, or any React Component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "width",
      "comment": [
       "The width of the column. Usually, columns has exact this width.",
       " When all columns fit, and there's spare horizontal space, you can use 'grow' prop to use this space for certain columns.",
       " DataTable's columns can't shrink below width - table will add horizontal scrolling instead of shrinking columns"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": true
     },
     {
      "uid": 13,
      "name": "minWidth",
      "comment": [
       "Minimal width to which column can be resized manually"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "grow",
      "comment": [
       "The flex grow for the column. Allows column to grow in width if there's spare horizontal space"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "textAlign",
      "comment": [
       "Aligns cell content horizontally"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "justifyContent",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "alignSelf",
      "comment": [
       "Align cell content vertically"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "isSortable",
      "comment": [
       "Enables sorting arrows on the column.",
       " Sorting state is kept in DataSourceState.sorting"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "isAlwaysVisible",
      "comment": [
       "Disallows to hide column via ColumnsConfiguration"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "isHiddenByDefault",
      "comment": [
       "Makes column hidden by default. User can turn it on later, via ColumnsConfiguration"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "info",
      "comment": [
       "Info tooltip displayed in the table header"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "isFilterActive",
      "comment": [
       "Should return true, if current filter affects the column.",
       " Usually, this prop is filled automatically by the useTableState hook.",
       " If you use the useTableState hook, you don't need to specify it manually."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "canCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>cell<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "canAcceptCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>from<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 25,
      "name": "render",
      "comment": [
       "Render the cell content. The item props is the value of the whole row (TItem)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 26,
      "name": "renderCell",
      "comment": [
       "Overrides rendering of the whole cell"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>cellProps<span class=\"token operator\">:</span> RenderCellProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 27,
      "name": "renderDropdown",
      "comment": [
       "Renders column header dropdown.",
       " Usually, this prop is filled automatically by the useTableState hook.",
       " If you use the useTableState hook, you don't need to specify it manually."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 28,
      "name": "renderFilter",
      "comment": [
       "Renders column filter.",
       " If you use useTableState hook, and you specify filter for the column, default filter will be rendered automatically.",
       " You can use this prop to render a custom filter component."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>lens<span class=\"token operator\">:</span> IDropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:DataColumnProps",
      "required": false
     },
     {
      "uid": 29,
      "name": "fix",
      "comment": [
       "If specified, will make column fixed - it would not scroll horizontally"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:ICanBeFixed",
      "required": false
     },
     {
      "uid": 30,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 31,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 32,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLDivElement <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ControlGroupProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:ControlGroupProps",
    "typeValue": {
     "raw": "ControlGroupProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ControlGroupProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "ControlIconProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:ControlIconProps",
    "typeValue": {
     "raw": "ControlIconProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ControlIconProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasTabIndex <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Icon to display */</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Flips the icon vertically */</span>",
      "    flipY<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Rotate the icon (cw stands for 'clock-wise', ccw stands for 'counter clock-wise)) */</span>",
      "    rotate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'90cw'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'180'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'90ccw'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Click handler */</span>",
      "    onClick<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>SyntheticEvent<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS style prop to put on the component */</span>",
      "    style<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>CSSProperties<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Icon size in pixels (both width and height, as icons are assumed to be square-shaped) */</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon to display"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "flipY",
      "comment": [
       "Flips the icon vertically"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "rotate",
      "comment": [
       "Rotate the icon (cw stands for 'clock-wise', ccw stands for 'counter clock-wise))"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'90cw'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'180'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'90ccw'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "onClick",
      "comment": [
       "Click handler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>SyntheticEvent<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token punctuation\">,</span> Event<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "style",
      "comment": [
       "CSS style prop to put on the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "size",
      "comment": [
       "Icon size in pixels (both width and height, as icons are assumed to be square-shaped)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 9,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     }
    ]
   },
   "DataSourceKeyboardParams": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DataSourceKeyboardParams",
    "typeValue": {
     "raw": "DataSourceKeyboardParams",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataSourceKeyboardParams</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>DataSourceState<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    listView<span class=\"token operator\">:</span> IDataSourceView<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    rows<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    editMode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'dropdown'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modal'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "listView",
      "typeValue": {
       "raw": "IDataSourceView<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "rows",
      "typeValue": {
       "raw": "DataRowProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "editMode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dropdown'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modal'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 5,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 6,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 10,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 11,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "DataTableSelectionProviderProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DataTableSelectionProviderProps",
    "typeValue": {
     "raw": "DataTableSelectionProviderProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableSelectionProviderProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React</span><span class=\"token punctuation\">.</span>PropsWithChildren <span class=\"token punctuation\">{</span>",
      "    rows<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    columns<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    onCopy<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>copyFrom<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> selectedCells<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rows",
      "typeValue": {
       "raw": "DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "columns",
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "onCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>copyFrom<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "node_modules/@types/react/index.d.ts:PropsWithChildren",
      "required": false
     }
    ]
   },
   "DatePickerBodyBaseOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DatePickerBodyBaseOptions",
    "typeValue": {
     "raw": "DatePickerBodyBaseOptions",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DatePickerBodyBaseOptions</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    changeIsOpen<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    presets<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RangeDatePickerPresets<span class=\"token punctuation\">;</span>",
      "    renderDay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">onDayClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "changeIsOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "presets",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderDay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "DatePickerBodyBaseProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DatePickerBodyBaseProps",
    "typeValue": {
     "raw": "DatePickerBodyBaseProps<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DatePickerBodyBaseProps<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DatePickerBodyBaseOptions</span> <span class=\"token punctuation\">{</span>",
      "    value<span class=\"token operator\">:</span> PickerBodyValue<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">setSelectedDate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>newDate<span class=\"token operator\">:</span> TSelection<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">setDisplayedDateAndView</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>displayedDate<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">,</span> view<span class=\"token operator\">:</span> ViewType<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "value",
      "typeValue": {
       "raw": "PickerBodyValue<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "setSelectedDate",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newDate<span class=\"token operator\">:</span> TSelection<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "setDisplayedDateAndView",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>displayedDate<span class=\"token operator\">:</span> ViewType<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 5,
      "name": "changeIsOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 6,
      "name": "presets",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 7,
      "name": "renderDay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 8,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 9,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "DatePickerState": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DatePickerState",
    "typeValue": {
     "raw": "DatePickerState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DatePickerState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PickerBodyValue<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    inputValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "inputValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "selectedDate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:PickerBodyValue",
      "required": false
     },
     {
      "uid": 4,
      "name": "displayedDate",
      "typeValue": {
       "raw": "Dayjs"
      },
      "from": "@epam/uui-components:PickerBodyValue",
      "required": true
     },
     {
      "uid": 5,
      "name": "view",
      "typeValue": {
       "raw": "<span class=\"token string\">'DAY_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'MONTH_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'YEAR_SELECTION'</span>"
      },
      "from": "@epam/uui-components:PickerBodyValue",
      "required": true
     }
    ]
   },
   "DayProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DayProps",
    "typeValue": {
     "raw": "DayProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DayProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>Dayjs<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    filter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    getDayCX<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    renderDayNumber<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>param<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    isSelected<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isHoliday<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "getDayCX",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> ClassValue"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "renderDayNumber",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>param<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "isSelected",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "isHoliday",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "Dayjs"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 12,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 13,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "DragHandleProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DragHandleProps",
    "typeValue": {
     "raw": "DragHandleProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DragHandleProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IDisableable <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     }
    ]
   },
   "DropdownContainerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DropdownContainerProps",
    "typeValue": {
     "raw": "DropdownContainerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownContainerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IDropdownBodyProps <span class=\"token punctuation\">{</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span><span class=\"token punctuation\">;</span>",
      "    maxWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    height<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    showArrow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    style<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>CSSProperties<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass true to wrap DropdownContainer with FocusLock component to support keyboard navigation.",
      "     * If omitted, true value will be used.",
      "     *",
      "     * After DropdownContainer appeared the focus will be set on the first focusable element inside.",
      "     */</span>",
      "    focusLock<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass true to return focus into initial position on unmount.",
      "     * If omitted, true value will be used. It's used if focusLock=true.",
      "     * */</span>",
      "    returnFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass true to lock focus within DropdownContainer.",
      "     * If omitted, true value will be used. It's used if focusLock=true.",
      "     */</span>",
      "    persistentFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass any extra props to the FocusLock wrapper.",
      "     */</span>",
      "    lockProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass an array of ref pointing to the nodes, which focus lock should consider and a part of it. This is a way of focus scattering.",
      "     */</span>",
      "    shards<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass element name if you need to change internal FocusLock div element, to any other.",
      "     */</span>",
      "    <span class=\"token keyword\">as</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Pass true to handle Escape key press and call props.onClose().",
      "     * If omitted, true value will be used. It's used if focusLock=true.",
      "     */</span>",
      "    closeOnEsc<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Called on keyDown event in DropdownContainer.",
      "     Can be used to provide your own handlers.",
      "     */</span>",
      "    onKeyDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "maxWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "showArrow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "focusLock",
      "comment": [
       "Pass true to wrap DropdownContainer with FocusLock component to support keyboard navigation.",
       " If omitted, true value will be used.",
       "",
       " After DropdownContainer appeared the focus will be set on the first focusable element inside."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "returnFocus",
      "comment": [
       "Pass true to return focus into initial position on unmount.",
       " If omitted, true value will be used. It's used if focusLock=true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "persistentFocus",
      "comment": [
       "Pass true to lock focus within DropdownContainer.",
       " If omitted, true value will be used. It's used if focusLock=true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "lockProps",
      "comment": [
       "Pass any extra props to the FocusLock wrapper."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "shards",
      "comment": [
       "Pass an array of ref pointing to the nodes, which focus lock should consider and a part of it. This is a way of focus scattering."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "as",
      "comment": [
       "Pass element name if you need to change internal FocusLock div element, to any other."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "closeOnEsc",
      "comment": [
       "Pass true to handle Escape key press and call props.onClose().",
       " If omitted, true value will be used. It's used if focusLock=true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "onKeyDown",
      "comment": [
       "Called on keyDown event in DropdownContainer.",
       "     Can be used to provide your own handlers."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 15,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 16,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 18,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "togglerWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "togglerHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "arrowProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> PopperArrowProps"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     }
    ]
   },
   "DropSpotRenderParams": {
    "kind": 263,
    "typeRef": "@epam/uui-components:DropSpotRenderParams",
    "typeValue": {
     "raw": "DropSpotRenderParams",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropSpotRenderParams</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DropSpotState</span> <span class=\"token punctuation\">{</span>",
      "    eventHandlers<span class=\"token operator\">:</span> EventHandlers<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "eventHandlers",
      "typeValue": {
       "raw": "EventHandlers"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "isDraggingOver",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:DropSpotState",
      "required": true
     },
     {
      "uid": 3,
      "name": "isDragStart",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:DropSpotState",
      "required": true
     }
    ]
   },
   "FlexSpacerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:FlexSpacerProps",
    "typeValue": {
     "raw": "FlexSpacerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FlexSpacerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IAdaptiveItem</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 2,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 3,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 4,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 5,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     }
    ]
   },
   "HeaderCellContentProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:HeaderCellContentProps",
    "typeValue": {
     "raw": "HeaderCellContentProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">HeaderCellContentProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DndActorRenderParams</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function-variable function\">onResizeStart</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">onResizeEnd</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">onResize</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">toggleSort</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onResizeStart",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> MouseEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "onResizeEnd",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> MouseEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "onResize",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "toggleSort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> MouseEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "isDraggable",
      "comment": [
       "True, if the element can be dragged. Doesn't mean that DnD is active."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 6,
      "name": "isDraggedOut",
      "comment": [
       "True, if the element is dragged out. True for placeholder left when it's element it dragged out. False for Drag Ghost."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 7,
      "name": "isDragGhost",
      "comment": [
       "True, if the element is rendered as Drag Ghost. All other flags are false for drag ghost."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 8,
      "name": "isDraggedOver",
      "comment": [
       "True, if the element is being dragged over, even if drop is not accepted by the element (canAcceptDrop returned false)"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 9,
      "name": "isDropAccepted",
      "comment": [
       "True, if the element is being dragged over, and drop on it is accepted - canAcceptDrop returned true"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 10,
      "name": "isDndInProgress",
      "comment": [
       "True if any drag and drop operation is in progress, even if the element not being dragged"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 11,
      "name": "dragData",
      "comment": [
       "Drag data associated with the element. Specified always, even if there is no DnD operation happening."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": false
     },
     {
      "uid": 12,
      "name": "position",
      "comment": [
       "Drop position. Chosen from accepted drop positions according to pointer coordinates"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inside'</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": false
     },
     {
      "uid": 13,
      "name": "eventHandlers",
      "comment": [
       "Event handlers. Component is expected to pass these events to the top element it renders.",
       " As onClick event on the element will be overwritten, use DndActorProps.onClick to receive click events on the element"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> onTouchStart<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>TouchEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerEnter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerMove<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerLeave<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerUp<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 14,
      "name": "classNames",
      "comment": [
       "CSS class names to add to the element.",
       " Some of these markers are used by the DndActor internally, so they must be added even if no used by component itself to apply styles."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 15,
      "name": "ref",
      "comment": [
       "Ref to the DOM element to perform DnD actions"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": false
     }
    ]
   },
   "IconButtonBaseProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:IconButtonBaseProps",
    "typeValue": {
     "raw": "IconButtonBaseProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IconButtonBaseProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ButtonBaseProps</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 3,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 4,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 5,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 6,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 9,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 10,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 11,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 12,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "InputAddonProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:InputAddonProps",
    "typeValue": {
     "raw": "InputAddonProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">InputAddonProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span> <span class=\"token punctuation\">{</span>",
      "    content<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "content",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     }
    ]
   },
   "IProgressBarProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:IProgressBarProps",
    "typeValue": {
     "raw": "IProgressBarProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IProgressBarProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    progress<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    label<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    hideLabel<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "progress",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "label",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "hideLabel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "IRenderInputProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:IRenderInputProps",
    "typeValue": {
     "raw": "IRenderInputProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IRenderInputProps</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span>DetailedHTMLProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>InputHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "ref",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLInputElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:ClassAttributes",
      "required": false
     },
     {
      "uid": 2,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 3,
      "name": "accept",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 4,
      "name": "alt",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 5,
      "name": "autoComplete",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 6,
      "name": "autoFocus",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 7,
      "name": "capture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'user'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'environment'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 8,
      "name": "checked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 9,
      "name": "crossOrigin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 10,
      "name": "disabled",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 11,
      "name": "enterKeyHint",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'enter'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'done'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'go'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'next'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'previous'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'send'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 12,
      "name": "form",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 13,
      "name": "formAction",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 14,
      "name": "formEncType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 15,
      "name": "formMethod",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 16,
      "name": "formNoValidate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 17,
      "name": "formTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 18,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 19,
      "name": "list",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 20,
      "name": "max",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 21,
      "name": "maxLength",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 22,
      "name": "min",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 23,
      "name": "minLength",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 24,
      "name": "multiple",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 25,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 26,
      "name": "pattern",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 27,
      "name": "placeholder",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 28,
      "name": "readOnly",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 29,
      "name": "required",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 30,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 31,
      "name": "src",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 32,
      "name": "step",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 33,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'number'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'hidden'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'button'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'checkbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'color'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'date'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'datetime-local'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'file'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'image'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'month'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'password'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'radio'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'range'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'reset'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'submit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'time'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'week'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 34,
      "name": "value",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 35,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 36,
      "name": "onChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ChangeEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:InputHTMLAttributes",
      "required": false
     },
     {
      "uid": 37,
      "name": "defaultChecked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 38,
      "name": "defaultValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 39,
      "name": "suppressContentEditableWarning",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 40,
      "name": "suppressHydrationWarning",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 41,
      "name": "accessKey",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 42,
      "name": "className",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 43,
      "name": "contentEditable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inherit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 44,
      "name": "contextMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 45,
      "name": "dir",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 46,
      "name": "draggable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 47,
      "name": "hidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 48,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 49,
      "name": "lang",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 50,
      "name": "nonce",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 51,
      "name": "slot",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 52,
      "name": "spellCheck",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 53,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 54,
      "name": "tabIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 55,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 56,
      "name": "translate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'yes'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'no'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 57,
      "name": "radioGroup",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 58,
      "name": "role",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'button'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'checkbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'radio'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token string\">'alert'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'alertdialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'application'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'article'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'banner'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'columnheader'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'combobox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'complementary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contentinfo'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'definition'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'directory'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'document'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'feed'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'figure'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gridcell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'group'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'heading'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'img'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'link'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'list'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listitem'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'log'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'main'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'marquee'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'math'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menu'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menubar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitem'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitemcheckbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitemradio'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'navigation'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'note'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'option'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'presentation'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'progressbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'radiogroup'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'region'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'row'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rowgroup'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rowheader'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'scrollbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'searchbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'separator'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'slider'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'spinbutton'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'status'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'switch'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tab'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'table'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tablist'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tabpanel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'term'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'textbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'timer'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toolbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tooltip'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tree'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'treegrid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'treeitem'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 59,
      "name": "about",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 60,
      "name": "datatype",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 61,
      "name": "inlist",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 62,
      "name": "prefix",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 63,
      "name": "property",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 64,
      "name": "resource",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 65,
      "name": "typeof",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 66,
      "name": "vocab",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 67,
      "name": "autoCapitalize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 68,
      "name": "autoCorrect",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 69,
      "name": "autoSave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 70,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 71,
      "name": "itemProp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 72,
      "name": "itemScope",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 73,
      "name": "itemType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 74,
      "name": "itemID",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 75,
      "name": "itemRef",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 76,
      "name": "results",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 77,
      "name": "security",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 78,
      "name": "unselectable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'on'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'off'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 79,
      "name": "inputMode",
      "comment": [
       "Hints at the type of data that might be entered by the user while editing the element or its contents",
       " @see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 80,
      "name": "is",
      "comment": [
       "Specify that a standard HTML element should behave like a defined custom built-in element",
       " @see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 81,
      "name": "'aria-activedescendant'",
      "comment": [
       "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 82,
      "name": "'aria-atomic'",
      "comment": [
       "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 83,
      "name": "'aria-autocomplete'",
      "comment": [
       "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be",
       " presented if they are made."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'list'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'both'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 84,
      "name": "'aria-busy'",
      "comment": [
       "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 85,
      "name": "'aria-checked'",
      "comment": [
       "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
       " @see aria-pressed @see aria-selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'mixed'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 86,
      "name": "'aria-colcount'",
      "comment": [
       "Defines the total number of columns in a table, grid, or treegrid.",
       " @see aria-colindex."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 87,
      "name": "'aria-colindex'",
      "comment": [
       "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
       " @see aria-colcount @see aria-colspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 88,
      "name": "'aria-colspan'",
      "comment": [
       "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
       " @see aria-colindex @see aria-rowspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 89,
      "name": "'aria-controls'",
      "comment": [
       "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
       " @see aria-owns."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 90,
      "name": "'aria-current'",
      "comment": [
       "Indicates the element that represents the current item within a container or set of related elements."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'date'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'time'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'page'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'step'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'location'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 91,
      "name": "'aria-describedby'",
      "comment": [
       "Identifies the element (or elements) that describes the object.",
       " @see aria-labelledby"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 92,
      "name": "'aria-details'",
      "comment": [
       "Identifies the element that provides a detailed, extended description for the object.",
       " @see aria-describedby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 93,
      "name": "'aria-disabled'",
      "comment": [
       "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
       " @see aria-hidden @see aria-readonly."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 94,
      "name": "'aria-dropeffect'",
      "comment": [
       "Indicates what functions can be performed when a dragged object is released on the drop target.",
       " @deprecated in ARIA 1.1"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'link'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'copy'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'execute'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'move'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'popup'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 95,
      "name": "'aria-errormessage'",
      "comment": [
       "Identifies the element that provides an error message for the object.",
       " @see aria-invalid @see aria-describedby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 96,
      "name": "'aria-expanded'",
      "comment": [
       "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 97,
      "name": "'aria-flowto'",
      "comment": [
       "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,",
       " allows assistive technology to override the general default of reading in document source order."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 98,
      "name": "'aria-grabbed'",
      "comment": [
       "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
       " @deprecated in ARIA 1.1"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 99,
      "name": "'aria-haspopup'",
      "comment": [
       "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menu'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tree'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 100,
      "name": "'aria-hidden'",
      "comment": [
       "Indicates whether the element is exposed to an accessibility API.",
       " @see aria-disabled."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 101,
      "name": "'aria-invalid'",
      "comment": [
       "Indicates the entered value does not conform to the format expected by the application.",
       " @see aria-errormessage."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grammar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'spelling'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 102,
      "name": "'aria-keyshortcuts'",
      "comment": [
       "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 103,
      "name": "'aria-label'",
      "comment": [
       "Defines a string value that labels the current element.",
       " @see aria-labelledby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 104,
      "name": "'aria-labelledby'",
      "comment": [
       "Identifies the element (or elements) that labels the current element.",
       " @see aria-describedby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 105,
      "name": "'aria-level'",
      "comment": [
       "Defines the hierarchical level of an element within a structure."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 106,
      "name": "'aria-live'",
      "comment": [
       "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'off'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'assertive'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'polite'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 107,
      "name": "'aria-modal'",
      "comment": [
       "Indicates whether an element is modal when displayed."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 108,
      "name": "'aria-multiline'",
      "comment": [
       "Indicates whether a text box accepts multiple lines of input or only a single line."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 109,
      "name": "'aria-multiselectable'",
      "comment": [
       "Indicates that the user may select more than one item from the current selectable descendants."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 110,
      "name": "'aria-orientation'",
      "comment": [
       "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'vertical'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'horizontal'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 111,
      "name": "'aria-owns'",
      "comment": [
       "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship",
       " between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
       " @see aria-controls."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 112,
      "name": "'aria-placeholder'",
      "comment": [
       "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.",
       " A hint could be a sample value or a brief description of the expected format."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 113,
      "name": "'aria-posinset'",
      "comment": [
       "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
       " @see aria-setsize."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 114,
      "name": "'aria-pressed'",
      "comment": [
       "Indicates the current \"pressed\" state of toggle buttons.",
       " @see aria-checked @see aria-selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'mixed'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 115,
      "name": "'aria-readonly'",
      "comment": [
       "Indicates that the element is not editable, but is otherwise operable.",
       " @see aria-disabled."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 116,
      "name": "'aria-relevant'",
      "comment": [
       "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
       " @see aria-atomic."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'additions'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'additions removals'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'additions text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'all'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'removals'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'removals additions'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'removals text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text additions'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text removals'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 117,
      "name": "'aria-required'",
      "comment": [
       "Indicates that user input is required on the element before a form may be submitted."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 118,
      "name": "'aria-roledescription'",
      "comment": [
       "Defines a human-readable, author-localized description for the role of an element."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 119,
      "name": "'aria-rowcount'",
      "comment": [
       "Defines the total number of rows in a table, grid, or treegrid.",
       " @see aria-rowindex."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 120,
      "name": "'aria-rowindex'",
      "comment": [
       "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
       " @see aria-rowcount @see aria-rowspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 121,
      "name": "'aria-rowspan'",
      "comment": [
       "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
       " @see aria-rowindex @see aria-colspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 122,
      "name": "'aria-selected'",
      "comment": [
       "Indicates the current \"selected\" state of various widgets.",
       " @see aria-checked @see aria-pressed."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 123,
      "name": "'aria-setsize'",
      "comment": [
       "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
       " @see aria-posinset."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 124,
      "name": "'aria-sort'",
      "comment": [
       "Indicates if items in a table or grid are sorted in ascending or descending order."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ascending'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descending'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'other'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 125,
      "name": "'aria-valuemax'",
      "comment": [
       "Defines the maximum allowed value for a range widget."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 126,
      "name": "'aria-valuemin'",
      "comment": [
       "Defines the minimum allowed value for a range widget."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 127,
      "name": "'aria-valuenow'",
      "comment": [
       "Defines the current value for a range widget.",
       " @see aria-valuetext."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 128,
      "name": "'aria-valuetext'",
      "comment": [
       "Defines the human readable text alternative of aria-valuenow for a range widget."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 129,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 130,
      "name": "dangerouslySetInnerHTML",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> __html<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 131,
      "name": "onCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 132,
      "name": "onCopyCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 133,
      "name": "onCut",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 134,
      "name": "onCutCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 135,
      "name": "onPaste",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 136,
      "name": "onPasteCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 137,
      "name": "onCompositionEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 138,
      "name": "onCompositionEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 139,
      "name": "onCompositionStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 140,
      "name": "onCompositionStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 141,
      "name": "onCompositionUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 142,
      "name": "onCompositionUpdateCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 143,
      "name": "onFocus",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 144,
      "name": "onFocusCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 145,
      "name": "onBlur",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 146,
      "name": "onBlurCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 147,
      "name": "onChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 148,
      "name": "onBeforeInput",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 149,
      "name": "onBeforeInputCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 150,
      "name": "onInput",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 151,
      "name": "onInputCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 152,
      "name": "onReset",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 153,
      "name": "onResetCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 154,
      "name": "onSubmit",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 155,
      "name": "onSubmitCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 156,
      "name": "onInvalid",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 157,
      "name": "onInvalidCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 158,
      "name": "onLoad",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 159,
      "name": "onLoadCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 160,
      "name": "onError",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 161,
      "name": "onErrorCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 162,
      "name": "onKeyDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 163,
      "name": "onKeyDownCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 164,
      "name": "onKeyPress",
      "comment": [
       "@deprecated"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 165,
      "name": "onKeyPressCapture",
      "comment": [
       "@deprecated"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 166,
      "name": "onKeyUp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 167,
      "name": "onKeyUpCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 168,
      "name": "onAbort",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 169,
      "name": "onAbortCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 170,
      "name": "onCanPlay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 171,
      "name": "onCanPlayCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 172,
      "name": "onCanPlayThrough",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 173,
      "name": "onCanPlayThroughCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 174,
      "name": "onDurationChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 175,
      "name": "onDurationChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 176,
      "name": "onEmptied",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 177,
      "name": "onEmptiedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 178,
      "name": "onEncrypted",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 179,
      "name": "onEncryptedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 180,
      "name": "onEnded",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 181,
      "name": "onEndedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 182,
      "name": "onLoadedData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 183,
      "name": "onLoadedDataCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 184,
      "name": "onLoadedMetadata",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 185,
      "name": "onLoadedMetadataCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 186,
      "name": "onLoadStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 187,
      "name": "onLoadStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 188,
      "name": "onPause",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 189,
      "name": "onPauseCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 190,
      "name": "onPlay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 191,
      "name": "onPlayCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 192,
      "name": "onPlaying",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 193,
      "name": "onPlayingCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 194,
      "name": "onProgress",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 195,
      "name": "onProgressCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 196,
      "name": "onRateChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 197,
      "name": "onRateChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 198,
      "name": "onResize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 199,
      "name": "onResizeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 200,
      "name": "onSeeked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 201,
      "name": "onSeekedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 202,
      "name": "onSeeking",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 203,
      "name": "onSeekingCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 204,
      "name": "onStalled",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 205,
      "name": "onStalledCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 206,
      "name": "onSuspend",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 207,
      "name": "onSuspendCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 208,
      "name": "onTimeUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 209,
      "name": "onTimeUpdateCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 210,
      "name": "onVolumeChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 211,
      "name": "onVolumeChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 212,
      "name": "onWaiting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 213,
      "name": "onWaitingCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 214,
      "name": "onAuxClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 215,
      "name": "onAuxClickCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 216,
      "name": "onClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 217,
      "name": "onClickCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 218,
      "name": "onContextMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 219,
      "name": "onContextMenuCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 220,
      "name": "onDoubleClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 221,
      "name": "onDoubleClickCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 222,
      "name": "onDrag",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 223,
      "name": "onDragCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 224,
      "name": "onDragEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 225,
      "name": "onDragEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 226,
      "name": "onDragEnter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 227,
      "name": "onDragEnterCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 228,
      "name": "onDragExit",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 229,
      "name": "onDragExitCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 230,
      "name": "onDragLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 231,
      "name": "onDragLeaveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 232,
      "name": "onDragOver",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 233,
      "name": "onDragOverCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 234,
      "name": "onDragStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 235,
      "name": "onDragStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 236,
      "name": "onDrop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 237,
      "name": "onDropCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 238,
      "name": "onMouseDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 239,
      "name": "onMouseDownCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 240,
      "name": "onMouseEnter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 241,
      "name": "onMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 242,
      "name": "onMouseMove",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 243,
      "name": "onMouseMoveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 244,
      "name": "onMouseOut",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 245,
      "name": "onMouseOutCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 246,
      "name": "onMouseOver",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 247,
      "name": "onMouseOverCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 248,
      "name": "onMouseUp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 249,
      "name": "onMouseUpCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 250,
      "name": "onSelect",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 251,
      "name": "onSelectCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 252,
      "name": "onTouchCancel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 253,
      "name": "onTouchCancelCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 254,
      "name": "onTouchEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 255,
      "name": "onTouchEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 256,
      "name": "onTouchMove",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 257,
      "name": "onTouchMoveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 258,
      "name": "onTouchStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 259,
      "name": "onTouchStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 260,
      "name": "onPointerDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 261,
      "name": "onPointerDownCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 262,
      "name": "onPointerMove",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 263,
      "name": "onPointerMoveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 264,
      "name": "onPointerUp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 265,
      "name": "onPointerUpCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 266,
      "name": "onPointerCancel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 267,
      "name": "onPointerCancelCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 268,
      "name": "onPointerEnter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 269,
      "name": "onPointerEnterCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 270,
      "name": "onPointerLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 271,
      "name": "onPointerLeaveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 272,
      "name": "onPointerOver",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 273,
      "name": "onPointerOverCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 274,
      "name": "onPointerOut",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 275,
      "name": "onPointerOutCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 276,
      "name": "onGotPointerCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 277,
      "name": "onGotPointerCaptureCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 278,
      "name": "onLostPointerCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 279,
      "name": "onLostPointerCaptureCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 280,
      "name": "onScroll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>UIEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 281,
      "name": "onScrollCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>UIEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 282,
      "name": "onWheel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>WheelEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 283,
      "name": "onWheelCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>WheelEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 284,
      "name": "onAnimationStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 285,
      "name": "onAnimationStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 286,
      "name": "onAnimationEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 287,
      "name": "onAnimationEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 288,
      "name": "onAnimationIteration",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 289,
      "name": "onAnimationIterationCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 290,
      "name": "onTransitionEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TransitionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 291,
      "name": "onTransitionEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TransitionEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     }
    ]
   },
   "IScrollSpyApi": {
    "kind": 263,
    "typeRef": "@epam/uui-components:IScrollSpyApi",
    "typeValue": {
     "raw": "IScrollSpyApi",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IScrollSpyApi</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function-variable function\">scrollToElement</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    currentActive<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">setRef</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>ref<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "scrollToElement",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "currentActive",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "setRef",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>ref<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     }
    ]
   },
   "IScrollSpyProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:IScrollSpyProps",
    "typeValue": {
     "raw": "IScrollSpyProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IScrollSpyProps</span> <span class=\"token punctuation\">{</span>",
      "    elements<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    initialActive<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IntersectionObserverInit<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "elements",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "initialActive",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "options",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IntersectionObserverInit"
      },
      "required": false
     }
    ]
   },
   "LabeledInputProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:LabeledInputProps",
    "typeValue": {
     "raw": "LabeledInputProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LabeledInputProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LabeledInputCoreProps</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Overrides the default Tooltip component to use for info tooltip */</span>",
      "    Tooltip<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>TooltipProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides the default info icon */</span>",
      "    infoIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "Tooltip",
      "comment": [
       "Overrides the default Tooltip component to use for info tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span>TooltipProps<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span>TooltipProps<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "infoIcon",
      "comment": [
       "Overrides the default info icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "labelPosition",
      "comment": [
       "Position of the label, relative to the wrapped component (top of left)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span>"
      },
      "from": "@epam/uui-core:LabeledInputCoreProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "info",
      "comment": [
       "Info hint text to show in tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:LabeledInputCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "isOptional",
      "comment": [
       "Marks related field as optional"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:LabeledInputCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "htmlFor",
      "comment": [
       "HTML 'for' tag to bind the label to a component.",
       " Can be used when component can't be wrapped by the LabeledInput, e.g. when form is layed out as table with labels and inputs placed into different columns"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:LabeledInputCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 11,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 12,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 13,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "MainMenuCustomElementProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:MainMenuCustomElementProps",
    "typeValue": {
     "raw": "MainMenuCustomElementProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuCustomElementProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IAdaptiveItem</span><span class=\"token punctuation\">,</span> IHasChildren <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 2,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 3,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 4,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 5,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 6,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     }
    ]
   },
   "MainMenuDropdownProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:MainMenuDropdownProps",
    "typeValue": {
     "raw": "MainMenuDropdownProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuDropdownProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasChildren</span><span class=\"token punctuation\">,</span> IHasCaption<span class=\"token punctuation\">,</span> IAdaptiveItem<span class=\"token punctuation\">,</span> ICanRedirect<span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    renderBody<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "renderBody",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DropdownBodyProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 4,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 5,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 6,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 7,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 8,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 9,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 10,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "MainMenuLogoProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:MainMenuLogoProps",
    "typeValue": {
     "raw": "MainMenuLogoProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuLogoProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IAdaptiveItem</span><span class=\"token punctuation\">,</span> ICanRedirect<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    logoUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    logoBgColor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    showArrow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    onContextMenu<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    link<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Link<span class=\"token punctuation\">;</span>",
      "    onClick<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "logoUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "logoBgColor",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "showArrow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "onContextMenu",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "link",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "onClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> MouseEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 8,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 9,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 10,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 11,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 12,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "MainMenuProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:MainMenuProps",
    "typeValue": {
     "raw": "MainMenuProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    items<span class=\"token operator\">?</span><span class=\"token operator\">:</span> AdaptiveItemProps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    children<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    externalGap<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    appLogoUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    appLogoBgColor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    customerLogoUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    customerLogoBgColor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    customerLogoWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    isTransparent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    renderBurger<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    alwaysShowBurger<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    serverBadge<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    tooltipTechInfo<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    logoLink<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Link<span class=\"token punctuation\">;</span>",
      "    logoHref<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    logoWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    onLogoClick<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    customerLogoLink<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Link<span class=\"token punctuation\">;</span>",
      "    customerLogoHref<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    MainMenuDropdown<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>MainMenuDropdownProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    Burger<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>BurgerProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> hiddenItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> displayedItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> priority<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> collapsedContainer<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "externalGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "appLogoUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "appLogoBgColor",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "customerLogoUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "customerLogoBgColor",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "customerLogoWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "isTransparent",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "renderBurger",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "alwaysShowBurger",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "serverBadge",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "tooltipTechInfo",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "logoLink",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "required": false
     },
     {
      "uid": 15,
      "name": "logoHref",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 16,
      "name": "logoWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 17,
      "name": "onLogoClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> MouseEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 18,
      "name": "customerLogoLink",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "required": false
     },
     {
      "uid": 19,
      "name": "customerLogoHref",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 20,
      "name": "MainMenuDropdown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span>MainMenuDropdownProps<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span>MainMenuDropdownProps<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 21,
      "name": "Burger",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span>BurgerProps<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span>BurgerProps<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 22,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 23,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "MonthSelectionProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:MonthSelectionProps",
    "typeValue": {
     "raw": "MonthSelectionProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MonthSelectionProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>Dayjs<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    selectedDate<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "selectedDate",
      "typeValue": {
       "raw": "Dayjs"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "Dayjs"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 3,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 9,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 10,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "NumericInputProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:NumericInputProps",
    "typeValue": {
     "raw": "NumericInputProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NumericInputProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ICanFocus<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IClickable<span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasPlaceholder<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Maximum value (default is Number.MAX_SAFE_INTEGER) */</span>",
      "    max<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Minimum value (default is 0) */</span>",
      "    min<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides the up/increase icon */</span>",
      "    upIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides the down/decrease icon */</span>",
      "    downIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Increase/decrease step (for icons and ) */</span>",
      "    step<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS classes to put directly on the Input element */</span>",
      "    inputCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** HTML ID */</span>",
      "    id<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Turn off up/down (increase/decrease) buttons */</span>",
      "    disableArrows<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Align text inside the component. Useful for tables (in cell-mode) - to align numbers in table column */</span>",
      "    align<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Turns off locale-based formatting, standard Number.toString() is used instead */</span>",
      "    disableLocaleFormatting<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Number formatting options. See #{link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat} */</span>",
      "    formatOptions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Intl<span class=\"token punctuation\">.</span>NumberFormatOptions<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * A function to convert current input value to displayed text.",
      "     * Overrides standard Intl-based formatting.",
      "     * If passed, only maximumFractionDigits considered from formatOptions when both properties provided.",
      "     * Note, that formatting is used when input is out of focus.",
      "     */</span>",
      "    formatValue<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "max",
      "comment": [
       "Maximum value (default is Number.MAX_SAFE_INTEGER)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "min",
      "comment": [
       "Minimum value (default is 0)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "upIcon",
      "comment": [
       "Overrides the up/increase icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "downIcon",
      "comment": [
       "Overrides the down/decrease icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "step",
      "comment": [
       "Increase/decrease step (for icons and )"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "inputCx",
      "comment": [
       "CSS classes to put directly on the Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "id",
      "comment": [
       "HTML ID"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "disableArrows",
      "comment": [
       "Turn off up/down (increase/decrease) buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "align",
      "comment": [
       "Align text inside the component. Useful for tables (in cell-mode) - to align numbers in table column"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "disableLocaleFormatting",
      "comment": [
       "Turns off locale-based formatting, standard Number.toString() is used instead"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 11,
      "name": "formatOptions",
      "comment": [
       "Number formatting options. See #{link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Intl<span class=\"token punctuation\">.</span>NumberFormatOptions"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "formatValue",
      "comment": [
       "A function to convert current input value to displayed text.",
       " Overrides standard Intl-based formatting.",
       " If passed, only maximumFractionDigits considered from formatOptions when both properties provided.",
       " Note, that formatting is used when input is out of focus."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 14,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 15,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 16,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 17,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 18,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 19,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 24,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 25,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 26,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 27,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "PaginatorParams": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PaginatorParams",
    "typeValue": {
     "raw": "PaginatorParams",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PaginatorParams</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>ReactHTMLElement<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">>></span></span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">:</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span><span class=\"token punctuation\">;</span>",
      "    pages<span class=\"token operator\">:</span> PaginatorItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">goToNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">goToPrev</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    isLast<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isFirst<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "pages",
      "typeValue": {
       "raw": "PaginatorItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "goToNext",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "goToPrev",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "isLast",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "isFirst",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactHTMLElement<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "PaginatorProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PaginatorProps",
    "typeValue": {
     "raw": "PaginatorProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PaginatorProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>ReactHTMLElement<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Component size */</span>",
      "    size<span class=\"token operator\">:</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Total number of pages */</span>",
      "    totalPages<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Override default rendering, keeping the component behavior */</span>",
      "    render<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> PaginatorParams<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "comment": [
       "Component size"
      ],
      "typeValue": {
       "raw": "<span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "totalPages",
      "comment": [
       "Total number of pages"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "render",
      "comment": [
       "Override default rendering, keeping the component behavior"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>params<span class=\"token operator\">:</span> PaginatorParams<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 5,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 6,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 10,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 11,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactHTMLElement<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "PickerBindingHelper": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PickerBindingHelper",
    "typeValue": {
     "raw": "PickerBindingHelper<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerBindingHelper<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">dataSourceStateToValue</span><span class=\"token punctuation\">(</span>dsState<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> props<span class=\"token operator\">:</span> PickerBaseProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> dataSource<span class=\"token operator\">:</span> IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">applyValueToDataSourceState</span><span class=\"token punctuation\">(</span>dsState<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> props<span class=\"token operator\">:</span> PickerBaseProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> dataSource<span class=\"token operator\">:</span> IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "dataSourceStateToValue",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>dsState<span class=\"token operator\">:</span> IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "applyValueToDataSourceState",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>dsState<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "PickerBindingProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:PickerBindingProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> emptyValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerBindingProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> SinglePickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span> <span class=\"token operator\">|</span> ArrayPickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 11,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-components:SinglePickerProps",
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-components:SinglePickerProps",
      "required": true
     },
     {
      "uid": 3,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 37,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 38,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 39,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 40,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 41,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 42,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-components:SinglePickerProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 32,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-components:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 22,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-components:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 34,
      "name": "emptyValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 25,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 33,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-components:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 35,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 36,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerBindingValueType": {
    "kind": 264,
    "typeRef": "@epam/uui-components:PickerBindingValueType",
    "typeValue": {
     "raw": "<span class=\"token string\">'scalar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'array'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerBindingValueType</span> <span class=\"token operator\">=</span> <span class=\"token string\">'scalar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'array'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "PickerBodyBaseProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PickerBodyBaseProps",
    "typeValue": {
     "raw": "PickerBodyBaseProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerBodyBaseProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataSourceListProps</span><span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>DataSourceState<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    onKeyDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    renderNotFound<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    rows<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    scheduleUpdate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    search<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    showSearch<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span><span class=\"token punctuation\">;</span>",
      "    fixedBodyPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onKeyDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "renderNotFound",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "rows",
      "typeValue": {
       "raw": "React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "search",
      "typeValue": {
       "raw": "IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 6,
      "name": "showSearch",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "fixedBodyPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "selectAll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICheckable"
      },
      "from": "@epam/uui-core:DataSourceListProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "isReloading",
      "comment": [
       "Signals that data is reloading on search/sort/filter/reload."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataSourceListProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "rowsCount",
      "comment": [
       "Count of rows, after applying filter, and folding on tree nodes.",
       " Obsolete! Please switch to exactRowsCount / knownRowsCount"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 11,
      "name": "exactRowsCount",
      "comment": [
       "Count of rows, if all rows loaded. Can be null while initial loading, or if API doesn't return count"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 12,
      "name": "knownRowsCount",
      "comment": [
       "There's at least knownRowsCount rows. There can be more if list is lazy loaded.",
       " Equals to exactRowsCount if all rows are loaded, or if API returns rows count",
       " Otherwise, exactRowsCount will be null, and knownRowsCount will specify number of loaded rows."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 13,
      "name": "totalCount",
      "comment": [
       "Total count of items, before applying the filter. If there's a tree, it counts all nodes, including folded children"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 14,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 20,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 21,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 22,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "PickerBodyValue": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PickerBodyValue",
    "typeValue": {
     "raw": "PickerBodyValue<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerBodyValue<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    selectedDate<span class=\"token operator\">:</span> TSelection <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    displayedDate<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">;</span>",
      "    view<span class=\"token operator\">:</span> ViewType<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "selectedDate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> TSelection"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "displayedDate",
      "typeValue": {
       "raw": "Dayjs"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "view",
      "typeValue": {
       "raw": "<span class=\"token string\">'DAY_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'MONTH_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'YEAR_SELECTION'</span>"
      },
      "required": true
     }
    ]
   },
   "PickerInputBaseProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:PickerInputBaseProps",
    "typeValue": {
     "raw": "ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerInputBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> PickerBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ICanFocus<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IHasPlaceholder <span class=\"token operator\">&amp;</span> IDisableable <span class=\"token operator\">&amp;</span> ICanBeReadonly <span class=\"token operator\">&amp;</span> IHasIcon <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** dropdown (default) - show selection in dropdown; modal - opens modal window to select items */</span>",
      "    editMode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'dropdown'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modal'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Maximum number of tags to display in input, before collapsing to \"N items selected\" mode */</span>",
      "    maxItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Minimum width of dropdown body */</span>",
      "    minBodyWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Prevents selected items tags to occupy multiple lines  */</span>",
      "    isSingleLine<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/) */</span>",
      "    dropdownPlacement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Placement<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Replaces default 'toggler' - an input to which Picker attaches dropdown */</span>",
      "    renderToggler<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerTogglerProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "      *  Defines where search field is:",
      "      * 'input' - try to place search inside the toggler (default for single-select),",
      "      * 'body' - put search inside the dropdown (default for multi-select)",
      "      * 'none' - disables search completely",
      "      *",
      "      * Note: 'searchPosition' cannot be 'input' if 'editMode' is 'modal'",
      "      */</span>",
      "    searchPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'input'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'body'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Disallow to clear Picker value (cross icon) */</span>",
      "    disableClear<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Minimum characters to type, before search will trigger. If input characters number is less then 'minCharsToSearch', it will disable opening dropdown body.",
      "     * By default search triggers after input value is changed.",
      "     *",
      "     * Note: defined minCharsToSearch isn't compatible with searchPosition=body.",
      "     */</span>",
      "    minCharsToSearch<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides default height of the dropdown body */</span>",
      "    dropdownHeight<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Sets focus to component when it's mounted */</span>",
      "    autoFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** HTML attributes to put directly to the input and body elements */</span>",
      "    rawProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "        body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">[</span><span class=\"token string\">'rawProps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Adds custom footer to the dropdown body */</span>",
      "    renderFooter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerInputFooterProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Disables moving the dropdown body, when togglers is moved. Used in filters panel, to prevent filter selection to 'jump' after adding a filter. */</span>",
      "    fixedBodyPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    portalTarget<span class=\"token operator\">?</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS class(es) to put on input-part component. See https://github.com/JedWatson/classnames#usage for details */</span>",
      "    inputCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS class(es) to put on body-part component. See https://github.com/JedWatson/classnames#usage for details */</span>",
      "    bodyCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Enables highlighting of the items' text with search-matching results.",
      "     * */</span>",
      "    highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 148,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 149,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 150,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 151,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 152,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 153,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 154,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 155,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 156,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 157,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 158,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 159,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 160,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 161,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 64,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 16,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 166,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 167,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 168,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 169,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 170,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 171,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 172,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 173,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 174,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 175,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 176,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 177,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 178,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 179,
      "name": "editMode",
      "comment": [
       "dropdown (default) - show selection in dropdown; modal - opens modal window to select items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dropdown'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modal'</span>"
      },
      "required": false
     },
     {
      "uid": 180,
      "name": "maxItems",
      "comment": [
       "Maximum number of tags to display in input, before collapsing to \"N items selected\" mode"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 181,
      "name": "minBodyWidth",
      "comment": [
       "Minimum width of dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 182,
      "name": "isSingleLine",
      "comment": [
       "Prevents selected items tags to occupy multiple lines"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 183,
      "name": "dropdownPlacement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "required": false
     },
     {
      "uid": 184,
      "name": "renderToggler",
      "comment": [
       "Replaces default 'toggler' - an input to which Picker attaches dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerTogglerProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 185,
      "name": "searchPosition",
      "comment": [
       "Defines where search field is:",
       " 'input' - try to place search inside the toggler (default for single-select),",
       " 'body' - put search inside the dropdown (default for multi-select)",
       " 'none' - disables search completely",
       "",
       " Note: 'searchPosition' cannot be 'input' if 'editMode' is 'modal'"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'input'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'body'</span>"
      },
      "required": false
     },
     {
      "uid": 186,
      "name": "disableClear",
      "comment": [
       "Disallow to clear Picker value (cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 187,
      "name": "minCharsToSearch",
      "comment": [
       "Minimum characters to type, before search will trigger. If input characters number is less then 'minCharsToSearch', it will disable opening dropdown body.",
       " By default search triggers after input value is changed.",
       "",
       " Note: defined minCharsToSearch isn't compatible with searchPosition=body."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 188,
      "name": "dropdownHeight",
      "comment": [
       "Overrides default height of the dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 189,
      "name": "autoFocus",
      "comment": [
       "Sets focus to component when it's mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 190,
      "name": "rawProps",
      "comment": [
       "HTML attributes to put directly to the input and body elements"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 191,
      "name": "renderFooter",
      "comment": [
       "Adds custom footer to the dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerInputFooterProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 192,
      "name": "fixedBodyPosition",
      "comment": [
       "Disables moving the dropdown body, when togglers is moved. Used in filters panel, to prevent filter selection to 'jump' after adding a filter."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 193,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "required": false
     },
     {
      "uid": 194,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put on input-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 195,
      "name": "bodyCx",
      "comment": [
       "CSS class(es) to put on body-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 196,
      "name": "highlightSearchMatches",
      "comment": [
       "Enables highlighting of the items' text with search-matching results."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 65,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 66,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 67,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 162,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 114,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 115,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 116,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 163,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 164,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 165,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerListBaseProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:PickerListBaseProps",
    "typeValue": {
     "raw": "SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerListBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Exclude<span class=\"token operator\">&lt;</span>PickerBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cascadeSelection'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/**",
      "     * Number of default items to show initially, when nothing is selected.",
      "     * Default it 10 items",
      "     */</span>",
      "    maxDefaultItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Maximum total number of items to show, including selected */</span>",
      "    maxTotalItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Ids of items to show first.",
      "     * If not specified, top props.maxDefaultItems will be shown according to the DataSource sorting settings (default is 10)",
      "     */</span>",
      "    defaultIds<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** If provided, top picks will be automatically adjusted based on last user selection, and stored as user setting under provided key */</span>",
      "    settingsKey<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    sortBy<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 88,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 89,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 90,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 91,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 92,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 93,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 94,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 95,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 96,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 97,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 98,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 99,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 100,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 101,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 44,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 16,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 106,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 107,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 108,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 109,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 110,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 111,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 112,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 113,
      "name": "maxDefaultItems",
      "comment": [
       "Number of default items to show initially, when nothing is selected.",
       " Default it 10 items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 114,
      "name": "maxTotalItems",
      "comment": [
       "Maximum total number of items to show, including selected"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 115,
      "name": "defaultIds",
      "comment": [
       "Ids of items to show first.",
       " If not specified, top props.maxDefaultItems will be shown according to the DataSource sorting settings (default is 10)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 116,
      "name": "settingsKey",
      "comment": [
       "If provided, top picks will be automatically adjusted based on last user selection, and stored as user setting under provided key"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 45,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 46,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 47,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 102,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 74,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 75,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 76,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 103,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 104,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 105,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerModalArrayProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:PickerModalArrayProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span> initialValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> initialValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerModalArrayProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span>",
      "    initialValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span>",
      "    initialValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 9,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "initialValue",
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 12,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 13,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 14,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 7,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 16,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 10,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "initialValue",
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 15,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerModalOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PickerModalOptions",
    "typeValue": {
     "raw": "PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span></span> <span class=\"token punctuation\">{</span>",
      "    renderFilter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>editableFilter<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    renderFooter<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerFooterProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Partial<span class=\"token operator\">&lt;</span>IModal<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    disallowClickOutside<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "renderFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>editableFilter<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "renderFooter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IModal<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "disallowClickOutside",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "PickerModalScalarProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:PickerModalScalarProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span> initialValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span> initialValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerModalScalarProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span>",
      "    initialValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span>",
      "    initialValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IModal<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 9,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "initialValue",
      "typeValue": {
       "raw": "TId"
      },
      "required": true
     },
     {
      "uid": 12,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 13,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 14,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 7,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 16,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 10,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "initialValue",
      "typeValue": {
       "raw": "TItem"
      },
      "required": true
     },
     {
      "uid": 15,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerTogglerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PickerTogglerProps",
    "typeValue": {
     "raw": "PickerTogglerProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerTogglerProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IPickerToggler<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> ICanFocus<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasIcon<span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    cancelIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    dropdownIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    autoFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    renderItem<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    getName<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    entityName<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    maxItems<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    isSingleLine<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    pickerMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "    searchPosition<span class=\"token operator\">:</span> <span class=\"token string\">'input'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'body'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>",
      "    onKeyDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">closePickerBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    disableSearch<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    disableClear<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    minCharsToSearch<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cancelIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "dropdownIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "autoFocus",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderItem",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "getName",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "entityName",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "maxItems",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "isSingleLine",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "pickerMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'single'</span>"
      },
      "required": true
     },
     {
      "uid": 10,
      "name": "searchPosition",
      "typeValue": {
       "raw": "<span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'input'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'body'</span>"
      },
      "required": true
     },
     {
      "uid": 11,
      "name": "onKeyDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 12,
      "name": "closePickerBody",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 13,
      "name": "disableSearch",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 14,
      "name": "disableClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 15,
      "name": "minCharsToSearch",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 16,
      "name": "selection",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IPickerToggler",
      "required": false
     },
     {
      "uid": 17,
      "name": "selectedRowsCount",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IPickerToggler",
      "required": false
     },
     {
      "uid": 18,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 19,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 20,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 21,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isDisabled",
      "comment": [
       "Disables component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 26,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 27,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 28,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 29,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 30,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 31,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 32,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 33,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 34,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 35,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 36,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 37,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 38,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 39,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 40,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 41,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "PortalProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PortalProps",
    "typeValue": {
     "raw": "PortalProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PortalProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasChildren</span> <span class=\"token punctuation\">{</span>",
      "    target<span class=\"token operator\">?</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span>",
      "    key<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "target",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     }
    ]
   },
   "PositionValues": {
    "kind": 263,
    "typeRef": "@epam/uui-components:PositionValues",
    "typeValue": {
     "raw": "PositionValues",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PositionValues</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">positionValues</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "top",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     },
     {
      "uid": 2,
      "name": "left",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     },
     {
      "uid": 3,
      "name": "clientWidth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     },
     {
      "uid": 4,
      "name": "clientHeight",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     },
     {
      "uid": 5,
      "name": "scrollWidth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     },
     {
      "uid": 6,
      "name": "scrollHeight",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     },
     {
      "uid": 7,
      "name": "scrollLeft",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     },
     {
      "uid": 8,
      "name": "scrollTop",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues",
      "required": true
     }
    ]
   },
   "RadioGroupItem": {
    "kind": 263,
    "typeRef": "@epam/uui-components:RadioGroupItem",
    "typeValue": {
     "raw": "RadioGroupItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RadioGroupItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IDisableable</span> <span class=\"token punctuation\">{</span>",
      "    name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    renderName<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    id<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "renderName",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "id",
      "typeValue": {
       "raw": "TValue"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     }
    ]
   },
   "RadioGroupProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:RadioGroupProps",
    "typeValue": {
     "raw": "RadioGroupProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RadioGroupProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IHasDirection<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>FieldsetHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLFieldSetElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLFieldSetElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    RadioInput<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>RadioInputProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    items<span class=\"token operator\">:</span> RadioGroupItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    radioInputProps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RadioInputProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "        key<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>Key<span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "RadioInput",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span>RadioInputProps<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span>RadioInputProps<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "items",
      "typeValue": {
       "raw": "RadioGroupItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "radioInputProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RadioInputProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> key<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>Key<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 5,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 6,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 11,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 12,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 13,
      "name": "direction",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'vertical'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'horizontal'</span>"
      },
      "from": "@epam/uui-core:IHasDirection",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FieldsetHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLFieldSetElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLFieldSetElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLFieldSetElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "RadioInputProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:RadioInputProps",
    "typeValue": {
     "raw": "RadioInputProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RadioInputProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasLabel<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    renderLabel<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    tabIndex<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    id<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "renderLabel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "tabIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 7,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 13,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 14,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 15,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 16,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "RangeSliderState": {
    "kind": 263,
    "typeRef": "@epam/uui-components:RangeSliderState",
    "typeValue": {
     "raw": "RangeSliderState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeSliderState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SliderBaseState</span> <span class=\"token punctuation\">{</span>",
      "    activeHandle<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "activeHandle",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:SliderBaseState",
      "required": true
     },
     {
      "uid": 3,
      "name": "valueWidth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:SliderBaseState",
      "required": true
     }
    ]
   },
   "RangeSliderValue": {
    "kind": 263,
    "typeRef": "@epam/uui-components:RangeSliderValue",
    "typeValue": {
     "raw": "RangeSliderValue",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeSliderValue</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    to<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "to",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "RatingProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:RatingProps",
    "typeValue": {
     "raw": "RatingProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RatingProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseRatingProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    filledStarIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    emptyStarIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    hideTooltip<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    hint<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    Tooltip<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span>TooltipProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "filledStarIcon",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "emptyStarIcon",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "hideTooltip",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "hint",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "Tooltip",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span>TooltipProps<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span>TooltipProps<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:BaseRatingProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "to",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:BaseRatingProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "step",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span>"
      },
      "from": "@epam/uui-components:BaseRatingProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "renderRating",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rating<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> markWidth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> numberOfMarks<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:BaseRatingProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 11,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 12,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 13,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 15,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 16,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 18,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 19,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "RichTextViewProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:RichTextViewProps",
    "typeValue": {
     "raw": "RichTextViewProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RichTextViewProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    htmlContent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "htmlContent",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ScrollbarProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:ScrollbarProps",
    "typeValue": {
     "raw": "ScrollbarProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ScrollbarProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> Omit<span class=\"token operator\">&lt;</span>LibScrollbarProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'ref'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>Scrollbars<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    disableScroll<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    hasTopShadow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    hasBottomShadow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    renderView<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "disableScroll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "hasTopShadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "hasBottomShadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderView",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 7,
      "name": "tabIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 8,
      "name": "hidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 9,
      "name": "start",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 10,
      "name": "value",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 11,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 12,
      "name": "form",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 13,
      "name": "list",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 14,
      "name": "step",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 15,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 16,
      "name": "placeholder",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 17,
      "name": "onScroll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>UIEventHandler<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "onScrollFrame",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>values<span class=\"token operator\">:</span> ReactCustomScrollbars<span class=\"token punctuation\">.</span>positionValues<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "onScrollStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "onScrollStop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "onUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>values<span class=\"token operator\">:</span> ReactCustomScrollbars<span class=\"token punctuation\">.</span>positionValues<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "renderTrackHorizontal",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "renderTrackVertical",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "renderThumbHorizontal",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 25,
      "name": "renderThumbVertical",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FunctionComponent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 26,
      "name": "tagName",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 27,
      "name": "hideTracksWhenNotNeeded",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 28,
      "name": "autoHide",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 29,
      "name": "autoHideTimeout",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 30,
      "name": "autoHideDuration",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 31,
      "name": "thumbSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 32,
      "name": "thumbMinSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 33,
      "name": "universal",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 34,
      "name": "autoHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 35,
      "name": "autoHeightMin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 36,
      "name": "autoHeightMax",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 37,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "accept",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 39,
      "name": "acceptCharset",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 40,
      "name": "action",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 41,
      "name": "allowFullScreen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 42,
      "name": "allowTransparency",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 43,
      "name": "alt",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 44,
      "name": "as",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 45,
      "name": "async",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 46,
      "name": "autoComplete",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 47,
      "name": "autoFocus",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 48,
      "name": "autoPlay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 49,
      "name": "capture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'user'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'environment'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 50,
      "name": "cellPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 51,
      "name": "cellSpacing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 52,
      "name": "charSet",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 53,
      "name": "challenge",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 54,
      "name": "checked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 55,
      "name": "cite",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 56,
      "name": "classID",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 57,
      "name": "cols",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 58,
      "name": "colSpan",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 59,
      "name": "content",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 60,
      "name": "controls",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 61,
      "name": "coords",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 62,
      "name": "crossOrigin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 63,
      "name": "data",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 64,
      "name": "dateTime",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 65,
      "name": "default",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 66,
      "name": "defer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 67,
      "name": "disabled",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 68,
      "name": "download",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 69,
      "name": "encType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 70,
      "name": "formAction",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 71,
      "name": "formEncType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 72,
      "name": "formMethod",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 73,
      "name": "formNoValidate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 74,
      "name": "formTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 75,
      "name": "frameBorder",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 76,
      "name": "headers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 77,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 78,
      "name": "high",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 79,
      "name": "href",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 80,
      "name": "hrefLang",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 81,
      "name": "htmlFor",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 82,
      "name": "httpEquiv",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 83,
      "name": "integrity",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 84,
      "name": "keyParams",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 85,
      "name": "keyType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 86,
      "name": "kind",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 87,
      "name": "label",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 88,
      "name": "loop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 89,
      "name": "low",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 90,
      "name": "manifest",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 91,
      "name": "marginHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 92,
      "name": "marginWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 93,
      "name": "max",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 94,
      "name": "maxLength",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 95,
      "name": "media",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 96,
      "name": "mediaGroup",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 97,
      "name": "method",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 98,
      "name": "min",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 99,
      "name": "minLength",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 100,
      "name": "multiple",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 101,
      "name": "muted",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 102,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 103,
      "name": "noValidate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 104,
      "name": "open",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 105,
      "name": "optimum",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 106,
      "name": "pattern",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 107,
      "name": "playsInline",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 108,
      "name": "poster",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 109,
      "name": "preload",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 110,
      "name": "readOnly",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 111,
      "name": "rel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 112,
      "name": "required",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 113,
      "name": "reversed",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 114,
      "name": "rows",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 115,
      "name": "rowSpan",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 116,
      "name": "sandbox",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 117,
      "name": "scope",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 118,
      "name": "scoped",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 119,
      "name": "scrolling",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 120,
      "name": "seamless",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 121,
      "name": "selected",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 122,
      "name": "shape",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 123,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 124,
      "name": "sizes",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 125,
      "name": "span",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 126,
      "name": "src",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 127,
      "name": "srcDoc",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 128,
      "name": "srcLang",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 129,
      "name": "srcSet",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 130,
      "name": "summary",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 131,
      "name": "target",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 132,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 133,
      "name": "useMap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 134,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 135,
      "name": "wmode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 136,
      "name": "wrap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AllHTMLAttributes",
      "required": false
     },
     {
      "uid": 137,
      "name": "defaultChecked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 138,
      "name": "defaultValue",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 139,
      "name": "suppressContentEditableWarning",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 140,
      "name": "suppressHydrationWarning",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 141,
      "name": "accessKey",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 142,
      "name": "className",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 143,
      "name": "contentEditable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inherit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 144,
      "name": "contextMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 145,
      "name": "dir",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 146,
      "name": "draggable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 147,
      "name": "lang",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 148,
      "name": "nonce",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 149,
      "name": "slot",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 150,
      "name": "spellCheck",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 151,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 152,
      "name": "translate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'yes'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'no'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 153,
      "name": "radioGroup",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 154,
      "name": "role",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'button'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'checkbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'radio'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token string\">'alert'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'alertdialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'application'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'article'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'banner'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'columnheader'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'combobox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'complementary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contentinfo'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'definition'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'directory'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'document'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'feed'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'figure'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gridcell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'group'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'heading'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'img'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'link'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'list'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listitem'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'log'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'main'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'marquee'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'math'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menu'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menubar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitem'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitemcheckbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitemradio'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'navigation'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'note'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'option'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'presentation'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'progressbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'radiogroup'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'region'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'row'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rowgroup'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rowheader'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'scrollbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'searchbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'separator'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'slider'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'spinbutton'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'status'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'switch'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tab'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'table'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tablist'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tabpanel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'term'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'textbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'timer'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toolbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tooltip'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tree'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'treegrid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'treeitem'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 155,
      "name": "about",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 156,
      "name": "datatype",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 157,
      "name": "inlist",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 158,
      "name": "prefix",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 159,
      "name": "property",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 160,
      "name": "resource",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 161,
      "name": "typeof",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 162,
      "name": "vocab",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 163,
      "name": "autoCapitalize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 164,
      "name": "autoCorrect",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 165,
      "name": "autoSave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 166,
      "name": "itemProp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 167,
      "name": "itemScope",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 168,
      "name": "itemType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 169,
      "name": "itemID",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 170,
      "name": "itemRef",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 171,
      "name": "results",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 172,
      "name": "security",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 173,
      "name": "unselectable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'on'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'off'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 174,
      "name": "inputMode",
      "comment": [
       "Hints at the type of data that might be entered by the user while editing the element or its contents",
       " @see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 175,
      "name": "is",
      "comment": [
       "Specify that a standard HTML element should behave like a defined custom built-in element",
       " @see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:HTMLAttributes",
      "required": false
     },
     {
      "uid": 176,
      "name": "'aria-activedescendant'",
      "comment": [
       "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 177,
      "name": "'aria-atomic'",
      "comment": [
       "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 178,
      "name": "'aria-autocomplete'",
      "comment": [
       "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be",
       " presented if they are made."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'list'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'both'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 179,
      "name": "'aria-busy'",
      "comment": [
       "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 180,
      "name": "'aria-checked'",
      "comment": [
       "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
       " @see aria-pressed @see aria-selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'mixed'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 181,
      "name": "'aria-colcount'",
      "comment": [
       "Defines the total number of columns in a table, grid, or treegrid.",
       " @see aria-colindex."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 182,
      "name": "'aria-colindex'",
      "comment": [
       "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
       " @see aria-colcount @see aria-colspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 183,
      "name": "'aria-colspan'",
      "comment": [
       "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
       " @see aria-colindex @see aria-rowspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 184,
      "name": "'aria-controls'",
      "comment": [
       "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
       " @see aria-owns."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 185,
      "name": "'aria-current'",
      "comment": [
       "Indicates the element that represents the current item within a container or set of related elements."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'date'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'time'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'page'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'step'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'location'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 186,
      "name": "'aria-describedby'",
      "comment": [
       "Identifies the element (or elements) that describes the object.",
       " @see aria-labelledby"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 187,
      "name": "'aria-details'",
      "comment": [
       "Identifies the element that provides a detailed, extended description for the object.",
       " @see aria-describedby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 188,
      "name": "'aria-disabled'",
      "comment": [
       "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
       " @see aria-hidden @see aria-readonly."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 189,
      "name": "'aria-dropeffect'",
      "comment": [
       "Indicates what functions can be performed when a dragged object is released on the drop target.",
       " @deprecated in ARIA 1.1"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'link'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'copy'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'execute'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'move'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'popup'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 190,
      "name": "'aria-errormessage'",
      "comment": [
       "Identifies the element that provides an error message for the object.",
       " @see aria-invalid @see aria-describedby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 191,
      "name": "'aria-expanded'",
      "comment": [
       "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 192,
      "name": "'aria-flowto'",
      "comment": [
       "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,",
       " allows assistive technology to override the general default of reading in document source order."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 193,
      "name": "'aria-grabbed'",
      "comment": [
       "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
       " @deprecated in ARIA 1.1"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 194,
      "name": "'aria-haspopup'",
      "comment": [
       "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menu'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tree'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 195,
      "name": "'aria-hidden'",
      "comment": [
       "Indicates whether the element is exposed to an accessibility API.",
       " @see aria-disabled."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 196,
      "name": "'aria-invalid'",
      "comment": [
       "Indicates the entered value does not conform to the format expected by the application.",
       " @see aria-errormessage."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grammar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'spelling'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 197,
      "name": "'aria-keyshortcuts'",
      "comment": [
       "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 198,
      "name": "'aria-label'",
      "comment": [
       "Defines a string value that labels the current element.",
       " @see aria-labelledby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 199,
      "name": "'aria-labelledby'",
      "comment": [
       "Identifies the element (or elements) that labels the current element.",
       " @see aria-describedby."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 200,
      "name": "'aria-level'",
      "comment": [
       "Defines the hierarchical level of an element within a structure."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 201,
      "name": "'aria-live'",
      "comment": [
       "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'off'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'assertive'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'polite'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 202,
      "name": "'aria-modal'",
      "comment": [
       "Indicates whether an element is modal when displayed."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 203,
      "name": "'aria-multiline'",
      "comment": [
       "Indicates whether a text box accepts multiple lines of input or only a single line."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 204,
      "name": "'aria-multiselectable'",
      "comment": [
       "Indicates that the user may select more than one item from the current selectable descendants."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 205,
      "name": "'aria-orientation'",
      "comment": [
       "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'vertical'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'horizontal'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 206,
      "name": "'aria-owns'",
      "comment": [
       "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship",
       " between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
       " @see aria-controls."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 207,
      "name": "'aria-placeholder'",
      "comment": [
       "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.",
       " A hint could be a sample value or a brief description of the expected format."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 208,
      "name": "'aria-posinset'",
      "comment": [
       "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
       " @see aria-setsize."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 209,
      "name": "'aria-pressed'",
      "comment": [
       "Indicates the current \"pressed\" state of toggle buttons.",
       " @see aria-checked @see aria-selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'mixed'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 210,
      "name": "'aria-readonly'",
      "comment": [
       "Indicates that the element is not editable, but is otherwise operable.",
       " @see aria-disabled."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 211,
      "name": "'aria-relevant'",
      "comment": [
       "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
       " @see aria-atomic."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'additions'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'additions removals'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'additions text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'all'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'removals'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'removals additions'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'removals text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text additions'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text removals'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 212,
      "name": "'aria-required'",
      "comment": [
       "Indicates that user input is required on the element before a form may be submitted."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 213,
      "name": "'aria-roledescription'",
      "comment": [
       "Defines a human-readable, author-localized description for the role of an element."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 214,
      "name": "'aria-rowcount'",
      "comment": [
       "Defines the total number of rows in a table, grid, or treegrid.",
       " @see aria-rowindex."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 215,
      "name": "'aria-rowindex'",
      "comment": [
       "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
       " @see aria-rowcount @see aria-rowspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 216,
      "name": "'aria-rowspan'",
      "comment": [
       "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
       " @see aria-rowindex @see aria-colspan."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 217,
      "name": "'aria-selected'",
      "comment": [
       "Indicates the current \"selected\" state of various widgets.",
       " @see aria-checked @see aria-pressed."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'false'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 218,
      "name": "'aria-setsize'",
      "comment": [
       "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
       " @see aria-posinset."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 219,
      "name": "'aria-sort'",
      "comment": [
       "Indicates if items in a table or grid are sorted in ascending or descending order."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ascending'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descending'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'other'</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 220,
      "name": "'aria-valuemax'",
      "comment": [
       "Defines the maximum allowed value for a range widget."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 221,
      "name": "'aria-valuemin'",
      "comment": [
       "Defines the minimum allowed value for a range widget."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 222,
      "name": "'aria-valuenow'",
      "comment": [
       "Defines the current value for a range widget.",
       " @see aria-valuetext."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 223,
      "name": "'aria-valuetext'",
      "comment": [
       "Defines the human readable text alternative of aria-valuenow for a range widget."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:AriaAttributes",
      "required": false
     },
     {
      "uid": 224,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 225,
      "name": "dangerouslySetInnerHTML",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> __html<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 226,
      "name": "onCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 227,
      "name": "onCopyCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 228,
      "name": "onCut",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 229,
      "name": "onCutCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 230,
      "name": "onPaste",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 231,
      "name": "onPasteCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ClipboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 232,
      "name": "onCompositionEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 233,
      "name": "onCompositionEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 234,
      "name": "onCompositionStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 235,
      "name": "onCompositionStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 236,
      "name": "onCompositionUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 237,
      "name": "onCompositionUpdateCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CompositionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 238,
      "name": "onFocus",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 239,
      "name": "onFocusCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 240,
      "name": "onBlur",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 241,
      "name": "onBlurCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FocusEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 242,
      "name": "onChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 243,
      "name": "onChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 244,
      "name": "onBeforeInput",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 245,
      "name": "onBeforeInputCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 246,
      "name": "onInput",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 247,
      "name": "onInputCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 248,
      "name": "onReset",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 249,
      "name": "onResetCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 250,
      "name": "onSubmit",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 251,
      "name": "onSubmitCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 252,
      "name": "onInvalid",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 253,
      "name": "onInvalidCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>FormEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 254,
      "name": "onLoad",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 255,
      "name": "onLoadCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 256,
      "name": "onError",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 257,
      "name": "onErrorCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 258,
      "name": "onKeyDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 259,
      "name": "onKeyDownCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 260,
      "name": "onKeyPress",
      "comment": [
       "@deprecated"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 261,
      "name": "onKeyPressCapture",
      "comment": [
       "@deprecated"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 262,
      "name": "onKeyUp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 263,
      "name": "onKeyUpCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>KeyboardEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 264,
      "name": "onAbort",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 265,
      "name": "onAbortCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 266,
      "name": "onCanPlay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 267,
      "name": "onCanPlayCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 268,
      "name": "onCanPlayThrough",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 269,
      "name": "onCanPlayThroughCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 270,
      "name": "onDurationChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 271,
      "name": "onDurationChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 272,
      "name": "onEmptied",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 273,
      "name": "onEmptiedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 274,
      "name": "onEncrypted",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 275,
      "name": "onEncryptedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 276,
      "name": "onEnded",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 277,
      "name": "onEndedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 278,
      "name": "onLoadedData",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 279,
      "name": "onLoadedDataCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 280,
      "name": "onLoadedMetadata",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 281,
      "name": "onLoadedMetadataCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 282,
      "name": "onLoadStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 283,
      "name": "onLoadStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 284,
      "name": "onPause",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 285,
      "name": "onPauseCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 286,
      "name": "onPlay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 287,
      "name": "onPlayCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 288,
      "name": "onPlaying",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 289,
      "name": "onPlayingCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 290,
      "name": "onProgress",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 291,
      "name": "onProgressCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 292,
      "name": "onRateChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 293,
      "name": "onRateChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 294,
      "name": "onResize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 295,
      "name": "onResizeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 296,
      "name": "onSeeked",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 297,
      "name": "onSeekedCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 298,
      "name": "onSeeking",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 299,
      "name": "onSeekingCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 300,
      "name": "onStalled",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 301,
      "name": "onStalledCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 302,
      "name": "onSuspend",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 303,
      "name": "onSuspendCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 304,
      "name": "onTimeUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 305,
      "name": "onTimeUpdateCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 306,
      "name": "onVolumeChange",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 307,
      "name": "onVolumeChangeCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 308,
      "name": "onWaiting",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 309,
      "name": "onWaitingCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 310,
      "name": "onAuxClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 311,
      "name": "onAuxClickCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 312,
      "name": "onClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 313,
      "name": "onClickCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 314,
      "name": "onContextMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 315,
      "name": "onContextMenuCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 316,
      "name": "onDoubleClick",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 317,
      "name": "onDoubleClickCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 318,
      "name": "onDrag",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 319,
      "name": "onDragCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 320,
      "name": "onDragEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 321,
      "name": "onDragEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 322,
      "name": "onDragEnter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 323,
      "name": "onDragEnterCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 324,
      "name": "onDragExit",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 325,
      "name": "onDragExitCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 326,
      "name": "onDragLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 327,
      "name": "onDragLeaveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 328,
      "name": "onDragOver",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 329,
      "name": "onDragOverCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 330,
      "name": "onDragStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 331,
      "name": "onDragStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 332,
      "name": "onDrop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 333,
      "name": "onDropCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>DragEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 334,
      "name": "onMouseDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 335,
      "name": "onMouseDownCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 336,
      "name": "onMouseEnter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 337,
      "name": "onMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 338,
      "name": "onMouseMove",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 339,
      "name": "onMouseMoveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 340,
      "name": "onMouseOut",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 341,
      "name": "onMouseOutCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 342,
      "name": "onMouseOver",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 343,
      "name": "onMouseOverCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 344,
      "name": "onMouseUp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 345,
      "name": "onMouseUpCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MouseEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 346,
      "name": "onSelect",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 347,
      "name": "onSelectCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 348,
      "name": "onTouchCancel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 349,
      "name": "onTouchCancelCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 350,
      "name": "onTouchEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 351,
      "name": "onTouchEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 352,
      "name": "onTouchMove",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 353,
      "name": "onTouchMoveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 354,
      "name": "onTouchStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 355,
      "name": "onTouchStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TouchEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 356,
      "name": "onPointerDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 357,
      "name": "onPointerDownCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 358,
      "name": "onPointerMove",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 359,
      "name": "onPointerMoveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 360,
      "name": "onPointerUp",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 361,
      "name": "onPointerUpCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 362,
      "name": "onPointerCancel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 363,
      "name": "onPointerCancelCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 364,
      "name": "onPointerEnter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 365,
      "name": "onPointerEnterCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 366,
      "name": "onPointerLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 367,
      "name": "onPointerLeaveCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 368,
      "name": "onPointerOver",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 369,
      "name": "onPointerOverCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 370,
      "name": "onPointerOut",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 371,
      "name": "onPointerOutCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 372,
      "name": "onGotPointerCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 373,
      "name": "onGotPointerCaptureCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 374,
      "name": "onLostPointerCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 375,
      "name": "onLostPointerCaptureCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>PointerEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 376,
      "name": "onScrollCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>UIEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 377,
      "name": "onWheel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>WheelEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 378,
      "name": "onWheelCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>WheelEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 379,
      "name": "onAnimationStart",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 380,
      "name": "onAnimationStartCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 381,
      "name": "onAnimationEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 382,
      "name": "onAnimationEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 383,
      "name": "onAnimationIteration",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 384,
      "name": "onAnimationIterationCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>AnimationEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 385,
      "name": "onTransitionEnd",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TransitionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 386,
      "name": "onTransitionEndCapture",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TransitionEventHandler<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DOMAttributes",
      "required": false
     },
     {
      "uid": 387,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ReactCustomScrollbars<span class=\"token punctuation\">.</span>Scrollbars <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ScrollbarsApi": {
    "kind": 263,
    "typeRef": "@epam/uui-components:ScrollbarsApi",
    "typeValue": {
     "raw": "ScrollbarsApi",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ScrollbarsApi</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Scrollbars</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "scrollTop",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>top<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 2,
      "name": "scrollLeft",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>left<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 3,
      "name": "scrollToTop",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 4,
      "name": "scrollToBottom",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 5,
      "name": "scrollToLeft",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 6,
      "name": "scrollToRight",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 7,
      "name": "getScrollLeft",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 8,
      "name": "getScrollTop",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 9,
      "name": "getScrollWidth",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 10,
      "name": "getScrollHeight",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 11,
      "name": "getClientWidth",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 12,
      "name": "getClientHeight",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 13,
      "name": "getValues",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReactCustomScrollbars<span class=\"token punctuation\">.</span>positionValues"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 14,
      "name": "container",
      "typeValue": {
       "raw": "HTMLDivElement"
      },
      "from": "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars",
      "required": true
     },
     {
      "uid": 15,
      "name": "context",
      "comment": [
       "If using the new style context, re-declare this in your class to be the",
       " `React.ContextType` of your `static contextType`.",
       " Should be used with type annotation or static contextType.",
       "",
       " ```ts",
       " static contextType = MyContext",
       " // For TS pre-3.7:",
       " context!: React.ContextType<typeof MyContext>",
       " // For TS 3.7 and above:",
       " declare context: React.ContextType<typeof MyContext>",
       " ```",
       "",
       " @see https://reactjs.org/docs/context.html"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">unknown</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Component",
      "required": true
     },
     {
      "uid": 16,
      "name": "setState",
      "typeValue": {
       "raw": "<span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>prevState<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> props<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> Pick<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">K</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Pick<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">K</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> callback<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Component",
      "required": true
     },
     {
      "uid": 17,
      "name": "forceUpdate",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>callback<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Component",
      "required": true
     },
     {
      "uid": 18,
      "name": "render",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "node_modules/@types/react/index.d.ts:Component",
      "required": true
     },
     {
      "uid": 19,
      "name": "props",
      "typeValue": {
       "raw": "Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Component",
      "required": true
     },
     {
      "uid": 20,
      "name": "state",
      "typeValue": {
       "raw": "Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Component",
      "required": true
     },
     {
      "uid": 21,
      "name": "refs",
      "comment": [
       "@deprecated",
       " https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactInstance<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Component",
      "required": true
     },
     {
      "uid": 22,
      "name": "componentDidMount",
      "comment": [
       "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:ComponentLifecycle",
      "required": false
     },
     {
      "uid": 23,
      "name": "shouldComponentUpdate",
      "comment": [
       "Called to determine whether the change in props and state should trigger a re-render.",
       "",
       " `Component` always returns true.",
       " `PureComponent` implements a shallow comparison on props and state and returns true if any",
       " props or states have changed.",
       "",
       " If false is returned, `Component#render`, `componentWillUpdate`",
       " and `componentDidUpdate` will not be called."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextState<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextContext<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:ComponentLifecycle",
      "required": false
     },
     {
      "uid": 24,
      "name": "componentWillUnmount",
      "comment": [
       "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as",
       " cancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:ComponentLifecycle",
      "required": false
     },
     {
      "uid": 25,
      "name": "componentDidCatch",
      "comment": [
       "Catches exceptions generated in descendant components. Unhandled exceptions will cause",
       " the entire component tree to unmount."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> Error<span class=\"token punctuation\">,</span> errorInfo<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ErrorInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:ComponentLifecycle",
      "required": false
     },
     {
      "uid": 26,
      "name": "getSnapshotBeforeUpdate",
      "comment": [
       "Runs before React applies the result of `render` to the document, and",
       " returns an object to be given to componentDidUpdate. Useful for saving",
       " things such as scroll position before `render` causes changes to it.",
       "",
       " Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated",
       " lifecycle events from running."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> prevState<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:NewLifecycle",
      "required": false
     },
     {
      "uid": 27,
      "name": "componentDidUpdate",
      "comment": [
       "Called immediately after updating occurs. Not called for the initial render.",
       "",
       " The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> prevState<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> snapshot<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:NewLifecycle",
      "required": false
     },
     {
      "uid": 28,
      "name": "componentWillMount",
      "comment": [
       "Called immediately before mounting occurs, and before `Component#render`.",
       " Avoid introducing any side-effects or subscriptions in this method.",
       "",
       " Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps",
       " prevents this from being invoked.",
       "",
       " @deprecated 16.3, use componentDidMount or the constructor instead; will stop working in React 17",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DeprecatedLifecycle",
      "required": false
     },
     {
      "uid": 29,
      "name": "UNSAFE_componentWillMount",
      "comment": [
       "Called immediately before mounting occurs, and before `Component#render`.",
       " Avoid introducing any side-effects or subscriptions in this method.",
       "",
       " This method will not stop working in React 17.",
       "",
       " Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps",
       " prevents this from being invoked.",
       "",
       " @deprecated 16.3, use componentDidMount or the constructor instead",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DeprecatedLifecycle",
      "required": false
     },
     {
      "uid": 30,
      "name": "componentWillReceiveProps",
      "comment": [
       "Called when the component may be receiving new props.",
       " React may call this even if props have not changed, so be sure to compare new and existing",
       " props if you only want to handle changes.",
       "",
       " Calling `Component#setState` generally does not trigger this method.",
       "",
       " Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps",
       " prevents this from being invoked.",
       "",
       " @deprecated 16.3, use static getDerivedStateFromProps instead; will stop working in React 17",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextContext<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DeprecatedLifecycle",
      "required": false
     },
     {
      "uid": 31,
      "name": "UNSAFE_componentWillReceiveProps",
      "comment": [
       "Called when the component may be receiving new props.",
       " React may call this even if props have not changed, so be sure to compare new and existing",
       " props if you only want to handle changes.",
       "",
       " Calling `Component#setState` generally does not trigger this method.",
       "",
       " This method will not stop working in React 17.",
       "",
       " Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps",
       " prevents this from being invoked.",
       "",
       " @deprecated 16.3, use static getDerivedStateFromProps instead",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextContext<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DeprecatedLifecycle",
      "required": false
     },
     {
      "uid": 32,
      "name": "componentWillUpdate",
      "comment": [
       "Called immediately before rendering when new props or state is received. Not called for the initial render.",
       "",
       " Note: You cannot call `Component#setState` here.",
       "",
       " Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps",
       " prevents this from being invoked.",
       "",
       " @deprecated 16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextState<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextContext<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DeprecatedLifecycle",
      "required": false
     },
     {
      "uid": 33,
      "name": "UNSAFE_componentWillUpdate",
      "comment": [
       "Called immediately before rendering when new props or state is received. Not called for the initial render.",
       "",
       " Note: You cannot call `Component#setState` here.",
       "",
       " This method will not stop working in React 17.",
       "",
       " Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps",
       " prevents this from being invoked.",
       "",
       " @deprecated 16.3, use getSnapshotBeforeUpdate instead",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update",
       " @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>ReactCustomScrollbars<span class=\"token punctuation\">.</span>ScrollbarProps<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextState<span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> nextContext<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:DeprecatedLifecycle",
      "required": false
     }
    ]
   },
   "SelectionContextState": {
    "kind": 263,
    "typeRef": "@epam/uui-components:SelectionContextState",
    "typeValue": {
     "raw": "SelectionContextState<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SelectionContextState<span class=\"token operator\">&lt;</span>TItem <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TId <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pick<span class=\"token operator\">&lt;</span>SelectionManager<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'selectionRange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'setSelectionRange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'getCellSelectionInfo'</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "selectionRange",
      "typeValue": {
       "raw": "DataTableSelectionRange"
      },
      "from": "@epam/uui-components:SelectionManager",
      "required": true
     },
     {
      "uid": 2,
      "name": "setSelectionRange",
      "typeValue": {
       "raw": "React<span class=\"token punctuation\">.</span>Dispatch<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>SetStateAction<span class=\"token operator\">&lt;</span>DataTableSelectionRange<span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:SelectionManager",
      "required": true
     },
     {
      "uid": 3,
      "name": "getCellSelectionInfo",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>row<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> column<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> isSelected<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> showTopBorder<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> showRightBorder<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> showBottomBorder<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> showLeftBorder<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> canCopyFrom<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> canAcceptCopy<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> isStartCell<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-components:SelectionManager",
      "required": true
     }
    ]
   },
   "SinglePickerProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:SinglePickerProps",
    "typeValue": {
     "raw": "<span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span> valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SinglePickerProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>",
      "    selectionMode<span class=\"token operator\">:</span> <span class=\"token string\">'single'</span><span class=\"token punctuation\">;</span>",
      "    valueType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'entity'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> IEditable<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 11,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 16,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 20,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'entity'</span>"
      },
      "required": false
     },
     {
      "uid": 13,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "SliderBaseProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:SliderBaseProps",
    "typeValue": {
     "raw": "SliderBaseProps<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SliderBaseProps<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>TSelection<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Min value (when slider is at leftmost position) */</span>",
      "    min<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Max value (when slider is at rightmost position) */</span>",
      "    max<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Value change step */</span>",
      "    step<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Slider renders a label at each splitAt position */</span>",
      "    splitAt<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides rendering of values labels */</span>",
      "    renderLabel<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Toggles rendering of tooltip with current value */</span>",
      "    showTooltip<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "min",
      "comment": [
       "Min value (when slider is at leftmost position)"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "max",
      "comment": [
       "Max value (when slider is at rightmost position)"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "step",
      "comment": [
       "Value change step"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "splitAt",
      "comment": [
       "Slider renders a label at each splitAt position"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderLabel",
      "comment": [
       "Overrides rendering of values labels"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "showTooltip",
      "comment": [
       "Toggles rendering of tooltip with current value"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TSelection"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TSelection<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "SliderBaseState": {
    "kind": 263,
    "typeRef": "@epam/uui-components:SliderBaseState",
    "typeValue": {
     "raw": "SliderBaseState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SliderBaseState</span> <span class=\"token punctuation\">{</span>",
      "    isActive<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    valueWidth<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "valueWidth",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "SnackbarProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:SnackbarProps",
    "typeValue": {
     "raw": "SnackbarProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SnackbarProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    closeIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    notifications<span class=\"token operator\">?</span><span class=\"token operator\">:</span> NotificationOperation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "closeIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "notifications",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> NotificationOperation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "SpinnerProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:SpinnerProps",
    "typeValue": {
     "raw": "SpinnerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SpinnerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SpinnerCoreProps</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "SwitchProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:SwitchProps",
    "typeValue": {
     "raw": "SwitchProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SwitchProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasLabel<span class=\"token punctuation\">,</span> IAnalyticableOnChange<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasTabIndex <span class=\"token punctuation\">{</span>",
      "    id<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 4,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 5,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 6,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 10,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 11,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 12,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 15,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     }
    ]
   },
   "TextAreaProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:TextAreaProps",
    "typeValue": {
     "raw": "TextAreaProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextAreaProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasPlaceholder<span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> ICanBeReadonly<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>TextareaHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> ICanFocus<span class=\"token operator\">&lt;</span>HTMLTextAreaElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Adjust height to fit specified number or text rows. HTML TextArea attribute. */</span>",
      "    rows<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Enables auto-resizing height to fit text. Rows prop is ignored in this mode */</span>",
      "    autoSize<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** onKeyDown event handler to put on HTML Input  */</span>",
      "    onKeyDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Automatically sets input focus to component, when its mounted */</span>",
      "    autoFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS class names to put to the HTML Input element */</span>",
      "    inputCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Maximum text length, in characters */</span>",
      "    maxLength<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** HTML id attribute to put on the HTML Input element */</span>",
      "    id<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rows",
      "comment": [
       "Adjust height to fit specified number or text rows. HTML TextArea attribute."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "autoSize",
      "comment": [
       "Enables auto-resizing height to fit text. Rows prop is ignored in this mode"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onKeyDown",
      "comment": [
       "onKeyDown event handler to put on HTML Input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "autoFocus",
      "comment": [
       "Automatically sets input focus to component, when its mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "inputCx",
      "comment": [
       "CSS class names to put to the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "maxLength",
      "comment": [
       "Maximum text length, in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "id",
      "comment": [
       "HTML id attribute to put on the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 9,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 11,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 14,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 15,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 16,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 17,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 18,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TextareaHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 20,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLTextAreaElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 21,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLTextAreaElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     }
    ]
   },
   "TextInputProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:TextInputProps",
    "typeValue": {
     "raw": "TextInputProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextInputProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TextInputCoreProps</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Overrides accept (check) icon */</span>",
      "    acceptIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides cancel (cross) icon */</span>",
      "    cancelIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Overrides dropdown (chevron) icon */</span>",
      "    dropdownIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** CSS class(es) to put to the HTML Input element */</span>",
      "    inputCx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">CX</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** overrides rendering of HTML Input element  */</span>",
      "    renderInput<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IRenderInputProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "acceptIcon",
      "comment": [
       "Overrides accept (check) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "cancelIcon",
      "comment": [
       "Overrides cancel (cross) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Overrides dropdown (chevron) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put to the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "renderInput",
      "comment": [
       "overrides rendering of HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IRenderInputProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "onCancel",
      "comment": [
       "Enables cancel (cross) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onAccept",
      "comment": [
       "Enables accept (check) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "onKeyDown",
      "comment": [
       "keydown event handler to put on the HTML input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "autoFocus",
      "comment": [
       "Put focus on the element, when component is mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "type",
      "comment": [
       "Standard 'type' attribute to put on the HTML input element (e.g. 'password')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "autoComplete",
      "comment": [
       "Standard [autocomplete attribute]{@link https://www.w3schools.com/tags/att_input_autocomplete.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "name",
      "comment": [
       "Standard [name attribute]{@link https://www.w3schools.com/tags/att_input_name.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "maxLength",
      "comment": [
       "Maximum input length in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "inputMode",
      "comment": [
       "Standard [inputMode attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "id",
      "comment": [
       "HTML ID attribute for input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 17,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 21,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 26,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 27,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 28,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 29,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 30,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 31,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 32,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 33,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 34,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 35,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 36,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 37,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 39,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 40,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     }
    ]
   },
   "TextProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:TextProps",
    "typeValue": {
     "raw": "TextProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextProps</span> <span class=\"token operator\">=</span> IHasCX <span class=\"token operator\">&amp;</span> IHasChildren <span class=\"token operator\">&amp;</span> IClickable <span class=\"token operator\">&amp;</span> IAnalyticableClick <span class=\"token operator\">&amp;</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token operator\">&amp;</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "TimePickerBodyProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:TimePickerBodyProps",
    "typeValue": {
     "raw": "TimePickerBodyProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimePickerBodyProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>TimePickerValue<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    minutesStep<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    addIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    subtractIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    format<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "minutesStep",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "addIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "subtractIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "format",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TimePickerValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TimePickerValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 12,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 13,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "TooltipProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:TooltipProps",
    "typeValue": {
     "raw": "TooltipProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TooltipProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TooltipCoreProps</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "content",
      "comment": [
       "Content to show in the tooltip (ReactNode)"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "renderContent",
      "comment": [
       "Alternative to 'content' prop, you can pass a render function.",
       " The function will only be called when content is shown, this can save performance."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "offset",
      "comment": [
       "See [Popper docs]{@link https://popper.js.org/docs/v2/modifiers/offset/}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> OffsetsFunction <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "comment": [
       "React Node(s) to show tooltip for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "maxWidth",
      "comment": [
       "Max width of tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "placement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "modifiers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>Modifier<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> object<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "openDelay",
      "comment": [
       "Should we close dropdown on click on the Toggler, if it's already open? Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "closeDelay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "closeOnMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toggler'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundary'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "boundaryElement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement <span class=\"token operator\">|</span> HTMLElement<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'clippingParents'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "closeBodyOnTogglerHidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     }
    ]
   },
   "TooltipState": {
    "kind": 263,
    "typeRef": "@epam/uui-components:TooltipState",
    "typeValue": {
     "raw": "TooltipState",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TooltipState</span> <span class=\"token punctuation\">{</span>",
      "    isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     }
    ]
   },
   "TreeListItem": {
    "kind": 263,
    "typeRef": "@epam/uui-components:TreeListItem",
    "typeValue": {
     "raw": "TreeListItem",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeListItem</span> <span class=\"token punctuation\">{</span>",
      "    id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    data<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TreeListItem<span class=\"token punctuation\">;</span>",
      "    parentId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "data",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TreeListItem"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "parentId",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "TreeProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:TreeProps",
    "typeValue": {
     "raw": "TreeProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeProps<span class=\"token operator\">&lt;</span>TItem <span class=\"token keyword\">extends</span> TreeListItem<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>DataSourceState<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    items<span class=\"token operator\">:</span> TreeListItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">renderRow</span><span class=\"token punctuation\">(</span>row<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    getSearchFields<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    search<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "TreeListItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "renderRow",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>row<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "search",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 7,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 13,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 14,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "UsePickerInputProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:UsePickerInputProps",
    "typeValue": {
     "raw": "ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> toggleModalOpening<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> shouldShowBody<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> toggleModalOpening<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> shouldShowBody<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> toggleModalOpening<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> shouldShowBody<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> ClassValue<span class=\"token punctuation\">;</span> highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> toggleModalOpening<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> shouldShowBody<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">UsePickerInputProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TProps<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> PickerInputBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    toggleModalOpening<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    shouldShowBody<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 154,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 155,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 156,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 157,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 158,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 159,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 160,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 161,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 162,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 163,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 164,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 165,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 166,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 167,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 66,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 16,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 172,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 173,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 174,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 175,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 176,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 177,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 178,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 179,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 180,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 181,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 182,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 183,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 184,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 185,
      "name": "editMode",
      "comment": [
       "dropdown (default) - show selection in dropdown; modal - opens modal window to select items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dropdown'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modal'</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 186,
      "name": "maxItems",
      "comment": [
       "Maximum number of tags to display in input, before collapsing to \"N items selected\" mode"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 187,
      "name": "minBodyWidth",
      "comment": [
       "Minimum width of dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 188,
      "name": "isSingleLine",
      "comment": [
       "Prevents selected items tags to occupy multiple lines"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 189,
      "name": "dropdownPlacement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 190,
      "name": "renderToggler",
      "comment": [
       "Replaces default 'toggler' - an input to which Picker attaches dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerTogglerProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 191,
      "name": "searchPosition",
      "comment": [
       "Defines where search field is:",
       " 'input' - try to place search inside the toggler (default for single-select),",
       " 'body' - put search inside the dropdown (default for multi-select)",
       " 'none' - disables search completely",
       "",
       " Note: 'searchPosition' cannot be 'input' if 'editMode' is 'modal'"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'input'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'body'</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 192,
      "name": "disableClear",
      "comment": [
       "Disallow to clear Picker value (cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 193,
      "name": "minCharsToSearch",
      "comment": [
       "Minimum characters to type, before search will trigger. If input characters number is less then 'minCharsToSearch', it will disable opening dropdown body.",
       " By default search triggers after input value is changed.",
       "",
       " Note: defined minCharsToSearch isn't compatible with searchPosition=body."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 194,
      "name": "dropdownHeight",
      "comment": [
       "Overrides default height of the dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 195,
      "name": "autoFocus",
      "comment": [
       "Sets focus to component when it's mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 196,
      "name": "rawProps",
      "comment": [
       "HTML attributes to put directly to the input and body elements"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 197,
      "name": "renderFooter",
      "comment": [
       "Adds custom footer to the dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerInputFooterProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 198,
      "name": "fixedBodyPosition",
      "comment": [
       "Disables moving the dropdown body, when togglers is moved. Used in filters panel, to prevent filter selection to 'jump' after adding a filter."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 199,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 200,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put on input-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 201,
      "name": "bodyCx",
      "comment": [
       "CSS class(es) to put on body-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 202,
      "name": "highlightSearchMatches",
      "comment": [
       "Enables highlighting of the items' text with search-matching results."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerInputBaseProps",
      "required": false
     },
     {
      "uid": 203,
      "name": "toggleModalOpening",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>opened<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 204,
      "name": "shouldShowBody",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 67,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 68,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 69,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 168,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 118,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 119,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 120,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 169,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 170,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 171,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "UsePickerListProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:UsePickerListProps",
    "typeValue": {
     "raw": "SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> TProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">UsePickerListProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TProps<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> PickerListBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> TProps <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 88,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 89,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 90,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 91,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 92,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 93,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 94,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 95,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 96,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 97,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 98,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 99,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 100,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 101,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 44,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 16,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 106,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 107,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 108,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 109,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 110,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 111,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 112,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 113,
      "name": "maxDefaultItems",
      "comment": [
       "Number of default items to show initially, when nothing is selected.",
       " Default it 10 items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 114,
      "name": "maxTotalItems",
      "comment": [
       "Maximum total number of items to show, including selected"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 115,
      "name": "defaultIds",
      "comment": [
       "Ids of items to show first.",
       " If not specified, top props.maxDefaultItems will be shown according to the DataSource sorting settings (default is 10)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 116,
      "name": "settingsKey",
      "comment": [
       "If provided, top picks will be automatically adjusted based on last user selection, and stored as user setting under provided key"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 45,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 46,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 47,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 102,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 74,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 75,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 76,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 103,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 104,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 105,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "UsePickerModalProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:UsePickerModalProps",
    "typeValue": {
     "raw": "PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">UsePickerModalProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> PickerBaseOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IHasCaption <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>PickerModalScalarProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalArrayProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 82,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 83,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 84,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 85,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 86,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 87,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 88,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 89,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 90,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 91,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 92,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 93,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 94,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 95,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 96,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 43,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 17,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 18,
      "name": "initialValue",
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 100,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 101,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 102,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 22,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 104,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 105,
      "name": "renderFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>editableFilter<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 106,
      "name": "renderFooter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IModal<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 107,
      "name": "disallowClickOutside",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 108,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 44,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 45,
      "name": "initialValue",
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 49,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 97,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 71,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 72,
      "name": "initialValue",
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 76,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 98,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 99,
      "name": "initialValue",
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 103,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "ViewType": {
    "kind": 264,
    "typeRef": "@epam/uui-components:ViewType",
    "typeValue": {
     "raw": "<span class=\"token string\">'DAY_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'MONTH_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'YEAR_SELECTION'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ViewType</span> <span class=\"token operator\">=</span> <span class=\"token string\">'DAY_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'MONTH_SELECTION'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'YEAR_SELECTION'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "VirtualListProps": {
    "kind": 264,
    "typeRef": "@epam/uui-components:VirtualListProps",
    "typeValue": {
     "raw": "BaseVirtualListProps<span class=\"token operator\">&lt;</span>ScrollContainer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> rows<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">renderRows</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>config<span class=\"token operator\">:</span> VirtualListRenderRowsParams<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> BaseVirtualListProps<span class=\"token operator\">&lt;</span>ScrollContainer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> rows<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> renderRows<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">:</span> VirtualListRenderRowsParams<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">VirtualListProps<span class=\"token operator\">&lt;</span>List <span class=\"token keyword\">extends</span> HTMLElement <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> ScrollContainer <span class=\"token keyword\">extends</span> HTMLElement <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> BaseVirtualListProps<span class=\"token operator\">&lt;</span>ScrollContainer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> VirtualListRenderRows<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 18,
      "name": "rowsCount",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:BaseVirtualListProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "role",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'button'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'checkbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'radio'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token string\">'alert'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'alertdialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'application'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'article'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'banner'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'columnheader'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'combobox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'complementary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contentinfo'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'definition'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dialog'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'directory'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'document'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'feed'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'figure'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gridcell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'group'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'heading'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'img'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'link'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'list'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'listitem'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'log'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'main'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'marquee'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'math'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menu'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menubar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitem'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitemcheckbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'menuitemradio'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'navigation'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'note'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'option'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'presentation'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'progressbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'radiogroup'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'region'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'row'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rowgroup'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rowheader'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'scrollbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'searchbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'separator'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'slider'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'spinbutton'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'status'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'switch'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tab'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'table'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tablist'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tabpanel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'term'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'textbox'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'timer'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toolbar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tooltip'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tree'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'treegrid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'treeitem'</span>"
      },
      "from": "@epam/uui-components:BaseVirtualListProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "onScroll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> PositionValues<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:BaseVirtualListProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "rowsSelector",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:BaseVirtualListProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "disableScroll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:BaseVirtualListProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 24,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "VirtualListState"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 25,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> VirtualListState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 26,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 27,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 28,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 29,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 30,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 31,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 32,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ScrollContainer <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "rows",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:VirtualListRenderRows",
      "required": false
     },
     {
      "uid": 17,
      "name": "renderRows",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>config<span class=\"token operator\">:</span> VirtualListRenderRowsParams<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:VirtualListRenderRows",
      "required": true
     },
     {
      "uid": 33,
      "name": "rows",
      "typeValue": {
       "raw": "React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:VirtualListRenderRows",
      "required": true
     },
     {
      "uid": 34,
      "name": "renderRows",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>config<span class=\"token operator\">:</span> VirtualListRenderRowsParams<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:VirtualListRenderRows",
      "required": false
     }
    ],
    "propsFromUnion": true
   },
   "VirtualListRenderRowsParams": {
    "kind": 263,
    "typeRef": "@epam/uui-components:VirtualListRenderRowsParams",
    "typeValue": {
     "raw": "VirtualListRenderRowsParams<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">VirtualListRenderRowsParams<span class=\"token operator\">&lt;</span>List <span class=\"token keyword\">extends</span> HTMLElement <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    listContainerRef<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "    estimatedHeight<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    offsetY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    scrollShadows<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        verticalTop<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "        verticalBottom<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "        horizontalLeft<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "        horizontalRight<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "listContainerRef",
      "typeValue": {
       "raw": "React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "estimatedHeight",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "offsetY",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "scrollShadows",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> verticalTop<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> verticalBottom<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> horizontalLeft<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> horizontalRight<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "required": true
     }
    ]
   },
   "YearSelectionProps": {
    "kind": 263,
    "typeRef": "@epam/uui-components:YearSelectionProps",
    "typeValue": {
     "raw": "YearSelectionProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">YearSelectionProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>Dayjs<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> IHasForwardedRef<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>",
      "    selectedDate<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "selectedDate",
      "typeValue": {
       "raw": "Dayjs"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "Dayjs"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 3,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 5,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 9,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 10,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   }
  },
  "@epam/uui": {
   "AccordionMods": {
    "kind": 263,
    "typeRef": "@epam/uui:AccordionMods",
    "typeValue": {
     "raw": "AccordionMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccordionMods</span> <span class=\"token punctuation\">{</span>",
      "    mode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'block'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span><span class=\"token punctuation\">;</span>",
      "    padding<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'block'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "required": false
     }
    ]
   },
   "AccordionProps": {
    "kind": 264,
    "typeRef": "@epam/uui:AccordionProps",
    "typeValue": {
     "raw": "AccordionMods <span class=\"token operator\">&amp;</span> GeneralAccordionProps <span class=\"token operator\">|</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">AccordionProps</span> <span class=\"token operator\">=</span> AccordionMods <span class=\"token operator\">&amp;</span> uuiComponents<span class=\"token punctuation\">.</span>AccordionProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 12,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'block'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span>"
      },
      "from": "@epam/uui:AccordionMods",
      "required": false
     },
     {
      "uid": 13,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "from": "@epam/uui:AccordionMods",
      "required": false
     },
     {
      "uid": 14,
      "name": "title",
      "comment": [
       "Accordion title"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "renderTitle",
      "comment": [
       "Overrides default title rendering."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "dropdownIcon",
      "comment": [
       "Overrides the default dropdown (folding) icon.Pass null to disable the folding icon completely"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "renderAdditionalItems",
      "comment": [
       "Renders additional items to component's header (after the title, and before the folding icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:GeneralAccordionProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 19,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 20,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 21,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 23,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 24,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 25,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 26,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 27,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 28,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 29,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ],
    "propsFromUnion": true
   },
   "AlertProps": {
    "kind": 263,
    "typeRef": "@epam/uui:AlertProps",
    "typeValue": {
     "raw": "AlertProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlertProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasChildren</span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** List of actions to display in the alert. Each action has name and 'action' callback */</span>",
      "    actions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> notificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Alert color */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SemanticColor<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** When specified, a close icon is rendered. onClose callback will be called on clicking the close icon */</span>",
      "    onClose<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** An optional icon to show on the left of the alert */</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/** Component size. If omitted, 48 size will be used. */</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "actions",
      "comment": [
       "List of actions to display in the alert. Each action has name and 'action' callback"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> notificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "color",
      "comment": [
       "Alert color"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onClose",
      "comment": [
       "When specified, a close icon is rendered. onClose callback will be called on clicking the close icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "icon",
      "comment": [
       "An optional icon to show on the left of the alert"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "size",
      "comment": [
       "Component size. If omitted, 48 size will be used."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "BadgeColor": {
    "kind": 264,
    "typeRef": "@epam/uui:BadgeColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">BadgeColor</span> <span class=\"token operator\">=</span> EpamBadgeSemanticColor<span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "BadgeFill": {
    "kind": 264,
    "typeRef": "@epam/uui:BadgeFill",
    "typeValue": {
     "raw": "<span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semitransparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'transparent'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">BadgeFill</span> <span class=\"token operator\">=</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semitransparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'transparent'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "BadgeMods": {
    "kind": 263,
    "typeRef": "@epam/uui:BadgeMods",
    "typeValue": {
     "raw": "BadgeMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BadgeMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> BadgeColor<span class=\"token punctuation\">;</span>",
      "    fill<span class=\"token operator\">?</span><span class=\"token operator\">:</span> BadgeFill<span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> BadgeSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semitransparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'transparent'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     }
    ]
   },
   "BadgeProps": {
    "kind": 264,
    "typeRef": "@epam/uui:BadgeProps",
    "typeValue": {
     "raw": "BadgeProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">BadgeProps</span> <span class=\"token operator\">=</span> ButtonProps <span class=\"token operator\">&amp;</span> BadgeMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 9,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 10,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 15,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 16,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 18,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 19,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 21,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 29,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span>"
      },
      "from": "@epam/uui:BadgeMods",
      "required": false
     },
     {
      "uid": 30,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semitransparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'transparent'</span>"
      },
      "from": "@epam/uui:BadgeMods",
      "required": false
     },
     {
      "uid": 31,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:BadgeMods",
      "required": false
     }
    ]
   },
   "BadgeSize": {
    "kind": 264,
    "typeRef": "@epam/uui:BadgeSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">BadgeSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "BurgerButtonMods": {
    "kind": 263,
    "typeRef": "@epam/uui:BurgerButtonMods",
    "typeValue": {
     "raw": "BurgerButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BurgerButtonMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasIcon</span><span class=\"token punctuation\">,</span> IDropdownToggler <span class=\"token punctuation\">{</span>",
      "    type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">;</span>",
      "    indentLevel<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "indentLevel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 4,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 5,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 6,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 8,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 9,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 10,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 11,
      "name": "isDisabled",
      "comment": [
       "Disables component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 12,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 13,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     }
    ]
   },
   "BurgerGroupHeaderProps": {
    "kind": 263,
    "typeRef": "@epam/uui:BurgerGroupHeaderProps",
    "typeValue": {
     "raw": "BurgerGroupHeaderProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BurgerGroupHeaderProps</span> <span class=\"token punctuation\">{</span>",
      "    caption<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "caption",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "BurgerMods": {
    "kind": 263,
    "typeRef": "@epam/uui:BurgerMods",
    "typeValue": {
     "raw": "BurgerMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BurgerMods</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    }
   },
   "BurgerSearchProps": {
    "kind": 263,
    "typeRef": "@epam/uui:BurgerSearchProps",
    "typeValue": {
     "raw": "BurgerSearchProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BurgerSearchProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TextInputProps</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "acceptIcon",
      "comment": [
       "Overrides accept (check) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "cancelIcon",
      "comment": [
       "Overrides cancel (cross) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Overrides dropdown (chevron) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put to the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "renderInput",
      "comment": [
       "overrides rendering of HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IRenderInputProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "onCancel",
      "comment": [
       "Enables cancel (cross) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onAccept",
      "comment": [
       "Enables accept (check) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "onKeyDown",
      "comment": [
       "keydown event handler to put on the HTML input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "autoFocus",
      "comment": [
       "Put focus on the element, when component is mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "type",
      "comment": [
       "Standard 'type' attribute to put on the HTML input element (e.g. 'password')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "autoComplete",
      "comment": [
       "Standard [autocomplete attribute]{@link https://www.w3schools.com/tags/att_input_autocomplete.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "name",
      "comment": [
       "Standard [name attribute]{@link https://www.w3schools.com/tags/att_input_name.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "maxLength",
      "comment": [
       "Maximum input length in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "inputMode",
      "comment": [
       "Standard [inputMode attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "id",
      "comment": [
       "HTML ID attribute for input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 17,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 21,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 26,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 27,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 28,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 29,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 30,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 31,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 32,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 33,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 34,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 35,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 36,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 37,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 39,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 40,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     }
    ]
   },
   "ButtonColor": {
    "kind": 264,
    "typeRef": "@epam/uui:ButtonColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'accent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'negative'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'accent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'negative'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ButtonMode": {
    "kind": 264,
    "typeRef": "@epam/uui:ButtonMode",
    "typeValue": {
     "raw": "<span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ghost'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonMode</span> <span class=\"token operator\">=</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ghost'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ButtonMods": {
    "kind": 263,
    "typeRef": "@epam/uui:ButtonMods",
    "typeValue": {
     "raw": "ButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span><span class=\"token punctuation\">;</span>",
      "    mode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ButtonMode<span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ButtonColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ghost'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'accent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'negative'</span>"
      },
      "required": false
     }
    ]
   },
   "ButtonProps": {
    "kind": 264,
    "typeRef": "@epam/uui:ButtonProps",
    "typeValue": {
     "raw": "ButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonProps</span> <span class=\"token operator\">=</span> ButtonMods <span class=\"token operator\">&amp;</span> uuiComponents<span class=\"token punctuation\">.</span>ButtonProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:ButtonMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ghost'</span>"
      },
      "from": "@epam/uui:ButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'accent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'negative'</span>"
      },
      "from": "@epam/uui:ButtonMods",
      "required": false
     },
     {
      "uid": 4,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 20,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 21,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 22,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 24,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 29,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 30,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 31,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "ButtonSemanticColor": {
    "kind": 264,
    "typeRef": "@epam/uui:ButtonSemanticColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'accent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'negative'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonSemanticColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'accent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'negative'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "CheckboxMods": {
    "kind": 263,
    "typeRef": "@epam/uui:CheckboxMods",
    "typeValue": {
     "raw": "CheckboxMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CheckboxMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span><span class=\"token punctuation\">;</span>",
      "    mode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "required": false
     }
    ]
   },
   "CheckboxProps": {
    "kind": 264,
    "typeRef": "@epam/uui:CheckboxProps",
    "typeValue": {
     "raw": "CheckboxProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">CheckboxProps</span> <span class=\"token operator\">=</span> CheckboxMods <span class=\"token operator\">&amp;</span> uuiComponents<span class=\"token punctuation\">.</span>CheckboxProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "from": "@epam/uui:CheckboxMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:CheckboxMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "icon",
      "comment": [
       "Check icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:CheckboxProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "indeterminateIcon",
      "comment": [
       "Indeterminate state icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:CheckboxProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "renderLabel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:CheckboxProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:CheckboxProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 13,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 14,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 15,
      "name": "indeterminate",
      "comment": [
       "Sets checkbox in indeterminate state (neither checked or unchecked), which usually means that children elements has both values"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICheckable",
      "required": false
     },
     {
      "uid": 16,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 17,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 18,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 19,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 20,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 21,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 23,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     }
    ]
   },
   "ColorMod": {
    "kind": 263,
    "typeRef": "@epam/uui:ColorMod",
    "typeValue": {
     "raw": "ColorMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ColorMod</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">// TODO remove</span>",
      "    <span class=\"token comment\">/** Component color */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SemanticColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "Component color"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span>"
      },
      "required": false
     }
    ]
   },
   "ColumnsConfigurationModalProps": {
    "kind": 263,
    "typeRef": "@epam/uui:ColumnsConfigurationModalProps",
    "typeValue": {
     "raw": "ColumnsConfigurationModalProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ColumnsConfigurationModalProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IModal<span class=\"token operator\">&lt;</span>ColumnsConfig<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    columnsConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ColumnsConfig<span class=\"token punctuation\">;</span>",
      "    defaultConfig<span class=\"token operator\">:</span> ColumnsConfig<span class=\"token punctuation\">;</span>",
      "    columns<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    renderItem<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    getSearchFields<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "columnsConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ColumnsConfig"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "defaultConfig",
      "typeValue": {
       "raw": "ColumnsConfig"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "columns",
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "renderItem",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "getSearchFields",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>column<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 7,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 8,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 9,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> ColumnsConfig<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 10,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     }
    ]
   },
   "ConfirmationModalWindowProps": {
    "kind": 263,
    "typeRef": "@epam/uui:ConfirmationModalWindowProps",
    "typeValue": {
     "raw": "ConfirmationModalWindowProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ConfirmationModalWindowProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IModal<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    caption<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    bodyContent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    hideCancelButton<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "caption",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "bodyContent",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "hideCancelButton",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 5,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 6,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 7,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 8,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     }
    ]
   },
   "ControlSize": {
    "kind": 264,
    "typeRef": "@epam/uui:ControlSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ControlSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "DataPickerBodyProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DataPickerBodyProps",
    "typeValue": {
     "raw": "DataPickerBodyProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataPickerBodyProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PickerBodyBaseProps</span> <span class=\"token punctuation\">{</span>",
      "    maxHeight<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    editMode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'dropdown'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modal'</span><span class=\"token punctuation\">;</span>",
      "    searchSize<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize<span class=\"token punctuation\">;</span>",
      "    selectionMode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'single'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multi'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "maxHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "editMode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dropdown'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'modal'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "searchSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'single'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'multi'</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "onKeyDown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:PickerBodyBaseProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "renderNotFound",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerBodyBaseProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "rows",
      "typeValue": {
       "raw": "React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:PickerBodyBaseProps",
      "required": true
     },
     {
      "uid": 8,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:PickerBodyBaseProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "search",
      "typeValue": {
       "raw": "IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-components:PickerBodyBaseProps",
      "required": true
     },
     {
      "uid": 10,
      "name": "showSearch",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span>"
      },
      "from": "@epam/uui-components:PickerBodyBaseProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "fixedBodyPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerBodyBaseProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "selectAll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICheckable"
      },
      "from": "@epam/uui-core:DataSourceListProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "isReloading",
      "comment": [
       "Signals that data is reloading on search/sort/filter/reload."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataSourceListProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "rowsCount",
      "comment": [
       "Count of rows, after applying filter, and folding on tree nodes.",
       " Obsolete! Please switch to exactRowsCount / knownRowsCount"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 15,
      "name": "exactRowsCount",
      "comment": [
       "Count of rows, if all rows loaded. Can be null while initial loading, or if API doesn't return count"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 16,
      "name": "knownRowsCount",
      "comment": [
       "There's at least knownRowsCount rows. There can be more if list is lazy loaded.",
       " Equals to exactRowsCount if all rows are loaded, or if API returns rows count",
       " Otherwise, exactRowsCount will be null, and knownRowsCount will specify number of loaded rows."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 17,
      "name": "totalCount",
      "comment": [
       "Total count of items, before applying the filter. If there's a tree, it counts all nodes, including folded children"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 18,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 19,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 26,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "DataPickerRowProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DataPickerRowProps",
    "typeValue": {
     "raw": "DataPickerRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataPickerRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">renderItem</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    padding<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span><span class=\"token punctuation\">;</span>",
      "    borderBottom<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span><span class=\"token punctuation\">;</span>",
      "    alignActions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "renderItem",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "borderBottom",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "alignActions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 8,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 9,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 10,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "alignItems",
      "comment": [
       "Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "columnGap",
      "comment": [
       "Flexbox column gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "rowGap",
      "comment": [
       "Flexbox row gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "checkbox",
      "comment": [
       "If row needs a checkbox, this field should be specified and it props can be configured here"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> ICanBeInvalid"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 15,
      "name": "isSelectable",
      "comment": [
       "True if row is selectable (for whole-row single-selection, multi-selection via checkbox are configured with the checkbox prop)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 16,
      "name": "dnd",
      "comment": [
       "Configures row drag-n-drop options - if it can be dragged, can rows can be dropped into it, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IDndActor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 17,
      "name": "link",
      "comment": [
       "Can be specified to make row act as a link (plain or SPA)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 18,
      "name": "pin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 19,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 20,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 21,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 22,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 25,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 26,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 27,
      "name": "id",
      "comment": [
       "ID of the TItem rows displays"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 28,
      "name": "rowKey",
      "comment": [
       "Key to be used as component's key when rendering. Usually, it's stringified ID"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 29,
      "name": "index",
      "comment": [
       "Index of the row, from the top of the list. This doesn't account any hierarchy."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 30,
      "name": "parentId",
      "comment": [
       "ID of the parent TItem"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 31,
      "name": "path",
      "comment": [
       "Hierarchical path from the root node to the item (excluding the item itself)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 32,
      "name": "depth",
      "comment": [
       "Depth of the row in tree, 0 for the top-level"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 33,
      "name": "indent",
      "comment": [
       "Indent of the item, to show hierarchy.",
       "  Unlike depth, it contains additional logic, to not add unnecessary indents:",
       "  if all children of node has no children, all nodes would get the same indent as parent."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 34,
      "name": "isLoading",
      "comment": [
       "True if row is in loading state. 'value' is empty in this case"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 35,
      "name": "isUnknown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 36,
      "name": "isFoldable",
      "comment": [
       "True if row be folded or unfolded (usually because it contains children)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 37,
      "name": "isFolded",
      "comment": [
       "True if row is currently folded"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "isChecked",
      "comment": [
       "True if row is checked with checkbox"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 39,
      "name": "isCheckable",
      "comment": [
       "True if row has checkbox and can be checkable"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 40,
      "name": "isChildrenChecked",
      "comment": [
       "True if some of row's children are checked.",
       " Used to show 'indefinite' checkbox state, to show user that something inside is checked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 41,
      "name": "isSelected",
      "comment": [
       "True if row is selected (in single-select mode, or in case when interface use both single row selection and checkboxes)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 42,
      "name": "isChildrenSelected",
      "comment": [
       "True if any of row's children is selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 43,
      "name": "isFocused",
      "comment": [
       "True if row is focused. Focus can be changed via keyboard arrow keys, or by hovering mouse on top of the row"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 44,
      "name": "isLastChild",
      "comment": [
       "True if row is the last child of his parent"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 45,
      "name": "onFold",
      "comment": [
       "Handles row folding change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 46,
      "name": "onCheck",
      "comment": [
       "Handles row checkbox change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 47,
      "name": "onSelect",
      "comment": [
       "Handles row selection.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 48,
      "name": "onFocus",
      "comment": [
       "Handles row focusing."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>focusedIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 49,
      "name": "isPinned",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     }
    ]
   },
   "DataRowsContainerProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DataRowsContainerProps",
    "typeValue": {
     "raw": "DataRowsContainerProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> List<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataRowsContainerProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> List <span class=\"token keyword\">extends</span> HTMLDivElement <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">VirtualListRenderRowsParams<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    rows<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">renderRow</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>row<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    headerRef<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rows",
      "typeValue": {
       "raw": "DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "renderRow",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>row<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "headerRef",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "listContainerRef",
      "typeValue": {
       "raw": "React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-components:VirtualListRenderRowsParams",
      "required": true
     },
     {
      "uid": 5,
      "name": "estimatedHeight",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:VirtualListRenderRowsParams",
      "required": true
     },
     {
      "uid": 6,
      "name": "offsetY",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:VirtualListRenderRowsParams",
      "required": true
     },
     {
      "uid": 7,
      "name": "scrollShadows",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> verticalTop<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> verticalBottom<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> horizontalLeft<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> horizontalRight<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-components:VirtualListRenderRowsParams",
      "required": true
     }
    ]
   },
   "DataTableCellMods": {
    "kind": 263,
    "typeRef": "@epam/uui:DataTableCellMods",
    "typeValue": {
     "raw": "DataTableCellMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableCellMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TableSizesAndPositionMods</span> <span class=\"token punctuation\">{</span>",
      "    border<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "border",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "from": "@epam/uui:TableSizesAndPositionMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:TableSizesAndPositionMods",
      "required": false
     },
     {
      "uid": 4,
      "name": "alignActions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span>"
      },
      "from": "@epam/uui:TableSizesAndPositionMods",
      "required": false
     }
    ]
   },
   "DataTableHeaderCellMods": {
    "kind": 263,
    "typeRef": "@epam/uui:DataTableHeaderCellMods",
    "typeValue": {
     "raw": "DataTableHeaderCellMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableHeaderCellMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseRowMods</span> <span class=\"token punctuation\">{</span>",
      "    textCase<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'upper'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "textCase",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'upper'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'normal'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "from": "@epam/uui:BaseRowMods",
      "required": false
     }
    ]
   },
   "DataTableHeaderRowMods": {
    "kind": 263,
    "typeRef": "@epam/uui:DataTableHeaderRowMods",
    "typeValue": {
     "raw": "DataTableHeaderRowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableHeaderRowMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseRowMods</span> <span class=\"token punctuation\">{</span>",
      "    textCase<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'upper'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "textCase",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'upper'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'normal'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "from": "@epam/uui:BaseRowMods",
      "required": false
     }
    ]
   },
   "DataTableMods": {
    "kind": 263,
    "typeRef": "@epam/uui:DataTableMods",
    "typeValue": {
     "raw": "DataTableMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize<span class=\"token punctuation\">;</span>",
      "    border<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    headerTextCase<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'upper'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "border",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "headerTextCase",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'upper'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'normal'</span>"
      },
      "required": false
     }
    ]
   },
   "DataTableProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DataTableProps",
    "typeValue": {
     "raw": "DataTableProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>DataTableState<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> DataSourceListProps<span class=\"token punctuation\">,</span> DataTableColumnsConfigOptions <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">getRows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    columns<span class=\"token operator\">:</span> DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    renderRow<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataTableRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    renderNoResultsBlock<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    onScroll<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> PositionValues<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    showColumnsConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    filters<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TableFiltersConfig<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    onCopy<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>copyFrom<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> selectedCells<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    renderColumnsConfigurationModal<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> ColumnsConfigurationModalProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getRows",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "columns",
      "typeValue": {
       "raw": "DataColumnProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "renderRow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataTableRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderNoResultsBlock",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "onScroll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> PositionValues<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "showColumnsConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "filters",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TableFiltersConfig<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "onCopy",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>copyFrom<span class=\"token operator\">:</span> DataTableSelectedCellData<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "renderColumnsConfigurationModal",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> ColumnsConfigurationModalProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 10,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 11,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 12,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 14,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 15,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 16,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 17,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 18,
      "name": "selectAll",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ICheckable"
      },
      "from": "@epam/uui-core:DataSourceListProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "isReloading",
      "comment": [
       "Signals that data is reloading on search/sort/filter/reload."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataSourceListProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "rowsCount",
      "comment": [
       "Count of rows, after applying filter, and folding on tree nodes.",
       " Obsolete! Please switch to exactRowsCount / knownRowsCount"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 21,
      "name": "exactRowsCount",
      "comment": [
       "Count of rows, if all rows loaded. Can be null while initial loading, or if API doesn't return count"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 22,
      "name": "knownRowsCount",
      "comment": [
       "There's at least knownRowsCount rows. There can be more if list is lazy loaded.",
       " Equals to exactRowsCount if all rows are loaded, or if API returns rows count",
       " Otherwise, exactRowsCount will be null, and knownRowsCount will specify number of loaded rows."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 23,
      "name": "totalCount",
      "comment": [
       "Total count of items, before applying the filter. If there's a tree, it counts all nodes, including folded children"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataSourceListCounts",
      "required": false
     },
     {
      "uid": 24,
      "name": "allowColumnsReordering",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableColumnsConfigOptions",
      "required": false
     },
     {
      "uid": 25,
      "name": "allowColumnsResizing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataTableColumnsConfigOptions",
      "required": false
     }
    ]
   },
   "DataTableRowMods": {
    "kind": 263,
    "typeRef": "@epam/uui:DataTableRowMods",
    "typeValue": {
     "raw": "DataTableRowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DataTableRowMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TableSizesAndPositionMods</span> <span class=\"token punctuation\">{</span>",
      "    borderBottom<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "borderBottom",
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "from": "@epam/uui:TableSizesAndPositionMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:TableSizesAndPositionMods",
      "required": false
     },
     {
      "uid": 4,
      "name": "alignActions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span>"
      },
      "from": "@epam/uui:TableSizesAndPositionMods",
      "required": false
     }
    ]
   },
   "DatePickerBodyProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DatePickerBodyProps",
    "typeValue": {
     "raw": "DatePickerBodyProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DatePickerBodyProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DatePickerBodyBaseProps<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    getDayCX<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    isHoliday<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getDayCX",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isHoliday",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "value",
      "typeValue": {
       "raw": "PickerBodyValue<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseProps",
      "required": true
     },
     {
      "uid": 4,
      "name": "setSelectedDate",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newDate<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseProps",
      "required": true
     },
     {
      "uid": 5,
      "name": "setDisplayedDateAndView",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>displayedDate<span class=\"token operator\">:</span> ViewType<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseProps",
      "required": true
     },
     {
      "uid": 6,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 7,
      "name": "changeIsOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 8,
      "name": "presets",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 9,
      "name": "renderDay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 10,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "DatePickerProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DatePickerProps",
    "typeValue": {
     "raw": "DatePickerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DatePickerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DatePickerCoreProps</span><span class=\"token punctuation\">,</span> SizeMod<span class=\"token punctuation\">,</span> IHasEditMode <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "renderFooter",
      "comment": [
       "render prop to add a custom footer inside the DatePicker dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:DatePickerCoreProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "format",
      "comment": [
       "Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "filter",
      "comment": [
       "Filter selectable days. Days, for which this callback returns false - will be disabled"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "renderTarget",
      "comment": [
       "Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach DatePicker to other components, e.g. Buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "iconPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "disableClear",
      "comment": [
       "Disable clearing date value (e.g. via cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "renderDay",
      "comment": [
       "Overrides rendering of the single day. For example, to highlight certain days"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "isHoliday",
      "comment": [
       "If this function returns true, the day will be highlighted as holiday"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "onBlur",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Attributes for HTML Element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "inputCx",
      "comment": [
       "Styles for input and body components in DatePicker"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "bodyCx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseDatePickerProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 15,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 16,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 18,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 20,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 21,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 22,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 23,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 24,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 25,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 26,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "DefaultNotificationProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DefaultNotificationProps",
    "typeValue": {
     "raw": "DefaultNotificationProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DefaultNotificationProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">INotification</span><span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    actions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> NotificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "actions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> NotificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 3,
      "name": "onSuccess",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 4,
      "name": "clearTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 5,
      "name": "refreshTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 6,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 7,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 8,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 9,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 10,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "DropdownContainerMods": {
    "kind": 263,
    "typeRef": "@epam/uui:DropdownContainerMods",
    "typeValue": {
     "raw": "DropdownContainerMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownContainerMods</span> <span class=\"token punctuation\">{</span>",
      "    vPadding<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>",
      "    padding<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "vPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "required": false
     }
    ]
   },
   "DropdownContainerProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DropdownContainerProps",
    "typeValue": {
     "raw": "DropdownContainerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownContainerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">uuiDropdownContainerProps</span><span class=\"token punctuation\">,</span> DropdownContainerMods <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "maxWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "showArrow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "focusLock",
      "comment": [
       "Pass true to wrap DropdownContainer with FocusLock component to support keyboard navigation.",
       " If omitted, true value will be used.",
       "",
       " After DropdownContainer appeared the focus will be set on the first focusable element inside."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "returnFocus",
      "comment": [
       "Pass true to return focus into initial position on unmount.",
       " If omitted, true value will be used. It's used if focusLock=true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "persistentFocus",
      "comment": [
       "Pass true to lock focus within DropdownContainer.",
       " If omitted, true value will be used. It's used if focusLock=true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "lockProps",
      "comment": [
       "Pass any extra props to the FocusLock wrapper."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "shards",
      "comment": [
       "Pass an array of ref pointing to the nodes, which focus lock should consider and a part of it. This is a way of focus scattering."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "as",
      "comment": [
       "Pass element name if you need to change internal FocusLock div element, to any other."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "closeOnEsc",
      "comment": [
       "Pass true to handle Escape key press and call props.onClose().",
       " If omitted, true value will be used. It's used if focusLock=true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "onKeyDown",
      "comment": [
       "Called on keyDown event in DropdownContainer.",
       "     Can be used to provide your own handlers."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:DropdownContainerProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 15,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 16,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 18,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "togglerWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "togglerHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "arrowProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> PopperArrowProps"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 25,
      "name": "vPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "from": "@epam/uui:DropdownContainerMods",
      "required": false
     },
     {
      "uid": 26,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "from": "@epam/uui:DropdownContainerMods",
      "required": false
     }
    ]
   },
   "DropMarkerProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DropMarkerProps",
    "typeValue": {
     "raw": "DropMarkerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropMarkerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DndActorRenderParams</span><span class=\"token punctuation\">,</span> IHasCX <span class=\"token punctuation\">{</span>",
      "    enableBlocker<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "enableBlocker",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isDraggable",
      "comment": [
       "True, if the element can be dragged. Doesn't mean that DnD is active."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 3,
      "name": "isDraggedOut",
      "comment": [
       "True, if the element is dragged out. True for placeholder left when it's element it dragged out. False for Drag Ghost."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 4,
      "name": "isDragGhost",
      "comment": [
       "True, if the element is rendered as Drag Ghost. All other flags are false for drag ghost."
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 5,
      "name": "isDraggedOver",
      "comment": [
       "True, if the element is being dragged over, even if drop is not accepted by the element (canAcceptDrop returned false)"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 6,
      "name": "isDropAccepted",
      "comment": [
       "True, if the element is being dragged over, and drop on it is accepted - canAcceptDrop returned true"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 7,
      "name": "isDndInProgress",
      "comment": [
       "True if any drag and drop operation is in progress, even if the element not being dragged"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 8,
      "name": "dragData",
      "comment": [
       "Drag data associated with the element. Specified always, even if there is no DnD operation happening."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": false
     },
     {
      "uid": 9,
      "name": "position",
      "comment": [
       "Drop position. Chosen from accepted drop positions according to pointer coordinates"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inside'</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": false
     },
     {
      "uid": 10,
      "name": "eventHandlers",
      "comment": [
       "Event handlers. Component is expected to pass these events to the top element it renders.",
       " As onClick event on the element will be overwritten, use DndActorProps.onClick to receive click events on the element"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> onTouchStart<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>TouchEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerDown<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerEnter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerMove<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerLeave<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> onPointerUp<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PointerEvent<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 11,
      "name": "classNames",
      "comment": [
       "CSS class names to add to the element.",
       " Some of these markers are used by the DndActor internally, so they must be added even if no used by component itself to apply styles."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": true
     },
     {
      "uid": 12,
      "name": "ref",
      "comment": [
       "Ref to the DOM element to perform DnD actions"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DndActorRenderParams",
      "required": false
     },
     {
      "uid": 13,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     }
    ]
   },
   "DropSpotProps": {
    "kind": 263,
    "typeRef": "@epam/uui:DropSpotProps",
    "typeValue": {
     "raw": "DropSpotProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropSpotProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span></span> <span class=\"token punctuation\">{</span>",
      "    cx<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    infoText<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token function\">onUploadFiles</span><span class=\"token punctuation\">(</span>files<span class=\"token operator\">:</span> File<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    accept<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    single<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "infoText",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onUploadFiles",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>files<span class=\"token operator\">:</span> File<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "accept",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "single",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "EpamBadgeSemanticColor": {
    "kind": 264,
    "typeRef": "@epam/uui:EpamBadgeSemanticColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamBadgeSemanticColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "FileCardItem": {
    "kind": 263,
    "typeRef": "@epam/uui:FileCardItem",
    "typeValue": {
     "raw": "FileCardItem",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FileCardItem</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Partial<span class=\"token operator\">&lt;</span>File <span class=\"token operator\">&amp;</span> FileUploadResponse<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    progress<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    abortXHR<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "progress",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "abortXHR",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "lastModified",
      "comment": [
       "[MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:File",
      "required": true
     },
     {
      "uid": 4,
      "name": "name",
      "comment": [
       "[MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:File",
      "required": true
     },
     {
      "uid": 5,
      "name": "webkitRelativePath",
      "comment": [
       "[MDN Reference](https://developer.mozilla.org/docs/Web/API/File/webkitRelativePath)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:File",
      "required": true
     },
     {
      "uid": 6,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob",
      "required": true
     },
     {
      "uid": 7,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'attachment'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'iframe'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'image'</span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob",
      "required": true
     },
     {
      "uid": 8,
      "name": "arrayBuffer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ArrayBuffer<span class=\"token operator\">></span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob",
      "required": true
     },
     {
      "uid": 9,
      "name": "slice",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> contentType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Blob"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob",
      "required": true
     },
     {
      "uid": 10,
      "name": "stream",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReadableStream<span class=\"token operator\">&lt;</span>Uint8Array<span class=\"token operator\">></span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob",
      "required": true
     },
     {
      "uid": 11,
      "name": "text",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob",
      "required": true
     },
     {
      "uid": 12,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:FileUploadResponse",
      "required": true
     },
     {
      "uid": 13,
      "name": "path",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FileUploadResponse",
      "required": false
     },
     {
      "uid": 14,
      "name": "extension",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:FileUploadResponse",
      "required": false
     },
     {
      "uid": 15,
      "name": "error",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isError<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> message<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:FileUploadResponse",
      "required": false
     }
    ]
   },
   "FileCardProps": {
    "kind": 263,
    "typeRef": "@epam/uui:FileCardProps",
    "typeValue": {
     "raw": "FileCardProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FileCardProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IClickable</span><span class=\"token punctuation\">,</span> IHasCX <span class=\"token punctuation\">{</span>",
      "    file<span class=\"token operator\">:</span> FileCardItem<span class=\"token punctuation\">;</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "file",
      "typeValue": {
       "raw": "FileCardItem"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     }
    ]
   },
   "FillStyle": {
    "kind": 264,
    "typeRef": "@epam/uui:FillStyle",
    "typeValue": {
     "raw": "<span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ghost'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FillStyle</span> <span class=\"token operator\">=</span> ButtonMode<span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "FiltersPanelProps": {
    "kind": 263,
    "typeRef": "@epam/uui:FiltersPanelProps",
    "typeValue": {
     "raw": "FiltersPanelProps<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FiltersPanelProps<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    filters<span class=\"token operator\">:</span> TableFiltersConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    tableState<span class=\"token operator\">:</span> DataTableState<span class=\"token punctuation\">;</span>",
      "    <span class=\"token function-variable function\">setTableState</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>newState<span class=\"token operator\">:</span> DataTableState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "filters",
      "typeValue": {
       "raw": "TableFiltersConfig<span class=\"token operator\">&lt;</span>TFilter<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "tableState",
      "typeValue": {
       "raw": "DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "setTableState",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newState<span class=\"token operator\">:</span> DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     }
    ]
   },
   "FlexCellMods": {
    "kind": 264,
    "typeRef": "@epam/uui:FlexCellMods",
    "typeValue": {
     "raw": "FlexCellMods",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FlexCellMods</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "FlexRowProps": {
    "kind": 263,
    "typeRef": "@epam/uui:FlexRowProps",
    "typeValue": {
     "raw": "FlexRowProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FlexRowProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Omit<span class=\"token operator\">&lt;</span>uuiFlexRowProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'columnGap'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rowGap'</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 5,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 6,
      "name": "alignItems",
      "comment": [
       "Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     }
    ]
   },
   "FontStyle": {
    "kind": 264,
    "typeRef": "@epam/uui:FontStyle",
    "typeValue": {
     "raw": "<span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'regular'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'promo'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FontStyle</span> <span class=\"token operator\">=</span> <span class=\"token string\">'regular'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'promo'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "GlobalMenuProps": {
    "kind": 263,
    "typeRef": "@epam/uui:GlobalMenuProps",
    "typeValue": {
     "raw": "GlobalMenuProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">GlobalMenuProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IAdaptiveItem</span><span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 2,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 3,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 4,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 5,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "HighlightRange": {
    "kind": 263,
    "typeRef": "@epam/uui:HighlightRange",
    "typeValue": {
     "raw": "HighlightRange",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">HighlightRange</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    to<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    isHighlighted<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "to",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "isHighlighted",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": true
     }
    ]
   },
   "IconButtonMods": {
    "kind": 263,
    "typeRef": "@epam/uui:IconButtonMods",
    "typeValue": {
     "raw": "IconButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IconButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IconColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span>"
      },
      "required": false
     }
    ]
   },
   "IconButtonProps": {
    "kind": 263,
    "typeRef": "@epam/uui:IconButtonProps",
    "typeValue": {
     "raw": "IconButtonProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IconButtonProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IconButtonBaseProps</span><span class=\"token punctuation\">,</span> IconButtonMods <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 3,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 4,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 5,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 6,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 9,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 10,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 11,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 12,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 15,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span>"
      },
      "from": "@epam/uui:IconButtonMods",
      "required": false
     }
    ]
   },
   "IconColor": {
    "kind": 264,
    "typeRef": "@epam/uui:IconColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IconColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "IDropdownMenuContainer": {
    "kind": 263,
    "typeRef": "@epam/uui:IDropdownMenuContainer",
    "typeValue": {
     "raw": "IDropdownMenuContainer",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDropdownMenuContainer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">VPanelProps</span><span class=\"token punctuation\">,</span> DropdownBodyProps <span class=\"token punctuation\">{</span>",
      "    closeOnKey<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>KeyboardEvent<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "closeOnKey",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 4,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 7,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 8,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "from": "@epam/uui-core:VPanelProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "togglerWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "togglerHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "scheduleUpdate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "isOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "arrowProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> PopperArrowProps"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:IDropdownBodyProps",
      "required": false
     }
    ]
   },
   "IDropdownMenuItemProps": {
    "kind": 263,
    "typeRef": "@epam/uui:IDropdownMenuItemProps",
    "typeValue": {
     "raw": "IDropdownMenuItemProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDropdownMenuItemProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasIcon</span><span class=\"token punctuation\">,</span> ICanRedirect<span class=\"token punctuation\">,</span> IHasCX<span class=\"token punctuation\">,</span> IDisableable<span class=\"token punctuation\">,</span> IAnalyticableClick<span class=\"token punctuation\">,</span> IDropdownToggler <span class=\"token punctuation\">{</span>",
      "    isSelected<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isActive<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    indent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isSelected",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "indent",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 5,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 6,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 7,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 8,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 9,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 10,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 12,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 13,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 14,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 15,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 16,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 17,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 18,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 19,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 20,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     }
    ]
   },
   "IHasEditMode": {
    "kind": 263,
    "typeRef": "@epam/uui:IHasEditMode",
    "typeValue": {
     "raw": "IHasEditMode",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasEditMode</span> <span class=\"token punctuation\">{</span>",
      "    mode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "required": false
     }
    ]
   },
   "IndeterminateBarMods": {
    "kind": 263,
    "typeRef": "@epam/uui:IndeterminateBarMods",
    "typeValue": {
     "raw": "IndeterminateBarMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IndeterminateBarMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     }
    ]
   },
   "InputType": {
    "kind": 264,
    "typeRef": "@epam/uui:InputType",
    "typeValue": {
     "raw": "<span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">InputType</span> <span class=\"token operator\">=</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ITextPlaceholderProps": {
    "kind": 263,
    "typeRef": "@epam/uui:ITextPlaceholderProps",
    "typeValue": {
     "raw": "ITextPlaceholderProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ITextPlaceholderProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span></span><span class=\"token punctuation\">,</span> IHasCX <span class=\"token punctuation\">{</span>",
      "    wordsCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    isNotAnimated<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "wordsCount",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isNotAnimated",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     }
    ]
   },
   "LabeledInputMods": {
    "kind": 263,
    "typeRef": "@epam/uui:LabeledInputMods",
    "typeValue": {
     "raw": "LabeledInputMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LabeledInputMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">types</span><span class=\"token punctuation\">.</span>SizeMod <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     }
    ]
   },
   "LinkButtonColorType": {
    "kind": 264,
    "typeRef": "@epam/uui:LinkButtonColorType",
    "typeValue": {
     "raw": "<span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">LinkButtonColorType</span> <span class=\"token operator\">=</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "LinkButtonMods": {
    "kind": 263,
    "typeRef": "@epam/uui:LinkButtonMods",
    "typeValue": {
     "raw": "LinkButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LinkButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>ControlSize <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span><span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> LinkButtonColorType<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span>"
      },
      "required": false
     }
    ]
   },
   "LinkButtonProps": {
    "kind": 264,
    "typeRef": "@epam/uui:LinkButtonProps",
    "typeValue": {
     "raw": "LinkButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">LinkButtonProps</span> <span class=\"token operator\">=</span> LinkButtonMods <span class=\"token operator\">&amp;</span> ButtonProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:LinkButtonMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span>"
      },
      "from": "@epam/uui:LinkButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 10,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 11,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 16,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 20,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 21,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 23,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 29,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 30,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "MainMenuAvatarProps": {
    "kind": 263,
    "typeRef": "@epam/uui:MainMenuAvatarProps",
    "typeValue": {
     "raw": "MainMenuAvatarProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuAvatarProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IAdaptiveItem</span><span class=\"token punctuation\">,</span> IDropdownToggler<span class=\"token punctuation\">,</span> IHasCX <span class=\"token punctuation\">{</span>",
      "    avatarUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "avatarUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 4,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 5,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 6,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 7,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 8,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 9,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 10,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 11,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 12,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disables component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 14,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 15,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 16,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     }
    ]
   },
   "MainMenuButtonMods": {
    "kind": 263,
    "typeRef": "@epam/uui:MainMenuButtonMods",
    "typeValue": {
     "raw": "MainMenuButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span>"
      },
      "required": false
     }
    ]
   },
   "MainMenuIconProps": {
    "kind": 263,
    "typeRef": "@epam/uui:MainMenuIconProps",
    "typeValue": {
     "raw": "MainMenuIconProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuIconProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ButtonProps</span><span class=\"token punctuation\">,</span> IAdaptiveItem <span class=\"token punctuation\">{</span>",
      "    icon<span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "typeValue": {
       "raw": "Icon"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 9,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 10,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 15,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 16,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 18,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 19,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 21,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 29,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 30,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 31,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 32,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 33,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     }
    ]
   },
   "MainMenuMods": {
    "kind": 263,
    "typeRef": "@epam/uui:MainMenuMods",
    "typeValue": {
     "raw": "MainMenuMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuMods</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    }
   },
   "MainMenuSearchProps": {
    "kind": 263,
    "typeRef": "@epam/uui:MainMenuSearchProps",
    "typeValue": {
     "raw": "MainMenuSearchProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MainMenuSearchProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TextInputProps</span><span class=\"token punctuation\">,</span> IAdaptiveItem <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "acceptIcon",
      "comment": [
       "Overrides accept (check) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "cancelIcon",
      "comment": [
       "Overrides cancel (cross) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Overrides dropdown (chevron) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put to the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "renderInput",
      "comment": [
       "overrides rendering of HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IRenderInputProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "onCancel",
      "comment": [
       "Enables cancel (cross) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onAccept",
      "comment": [
       "Enables accept (check) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "onKeyDown",
      "comment": [
       "keydown event handler to put on the HTML input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "autoFocus",
      "comment": [
       "Put focus on the element, when component is mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "type",
      "comment": [
       "Standard 'type' attribute to put on the HTML input element (e.g. 'password')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "autoComplete",
      "comment": [
       "Standard [autocomplete attribute]{@link https://www.w3schools.com/tags/att_input_autocomplete.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "name",
      "comment": [
       "Standard [name attribute]{@link https://www.w3schools.com/tags/att_input_name.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "maxLength",
      "comment": [
       "Maximum input length in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "inputMode",
      "comment": [
       "Standard [inputMode attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "id",
      "comment": [
       "HTML ID attribute for input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 17,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 21,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 26,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 27,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 28,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 29,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 30,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 31,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 32,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 33,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 34,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 35,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 36,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 37,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 39,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 40,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 41,
      "name": "estimatedWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 42,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 43,
      "name": "showInBurgerMenu",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 44,
      "name": "collapseToMore",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     },
     {
      "uid": 45,
      "name": "collapsedContainer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IAdaptiveItem",
      "required": false
     }
    ]
   },
   "ModalFooterProps": {
    "kind": 263,
    "typeRef": "@epam/uui:ModalFooterProps",
    "typeValue": {
     "raw": "ModalFooterProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalFooterProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RowMods</span><span class=\"token punctuation\">,</span> ModalFooterCoreProps <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "borderBottom",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "columnGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 4,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 5,
      "name": "rowGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 6,
      "name": "spacing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 7,
      "name": "topShadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 8,
      "name": "vPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 9,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:RowSizeMod",
      "required": false
     },
     {
      "uid": 10,
      "name": "borderTop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ModalFooterCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 12,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 13,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ModalHeaderProps": {
    "kind": 263,
    "typeRef": "@epam/uui:ModalHeaderProps",
    "typeValue": {
     "raw": "ModalHeaderProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalHeaderProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RowMods</span><span class=\"token punctuation\">,</span> ModalHeaderCoreProps <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "borderBottom",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "columnGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 4,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 5,
      "name": "rowGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 6,
      "name": "spacing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 7,
      "name": "topShadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 8,
      "name": "vPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 9,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:RowSizeMod",
      "required": false
     },
     {
      "uid": 10,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:ModalHeaderCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:ModalHeaderCoreProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 13,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ModalWindowMods": {
    "kind": 263,
    "typeRef": "@epam/uui:ModalWindowMods",
    "typeValue": {
     "raw": "ModalWindowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalWindowMods</span> <span class=\"token punctuation\">{</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    height<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "ModalWindowProps": {
    "kind": 264,
    "typeRef": "@epam/uui:ModalWindowProps",
    "typeValue": {
     "raw": "ModalWindowProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ModalWindowProps</span> <span class=\"token operator\">=</span> UuiModalWindowProps <span class=\"token operator\">&amp;</span> ModalWindowMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 6,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 7,
      "name": "style",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>CSSProperties"
      },
      "from": "@epam/uui-core:VPanelProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui:ModalWindowMods",
      "required": false
     },
     {
      "uid": 9,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui:ModalWindowMods",
      "required": false
     }
    ]
   },
   "MultiSwitchProps": {
    "kind": 263,
    "typeRef": "@epam/uui:MultiSwitchProps",
    "typeValue": {
     "raw": "MultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> SizeMod<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    items<span class=\"token operator\">:</span> MultiSwitchItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> UuiMultiSwitchColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "MultiSwitchItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 4,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 5,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 6,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 7,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 9,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 10,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 11,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 12,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "NotificationCardProps": {
    "kind": 263,
    "typeRef": "@epam/uui:NotificationCardProps",
    "typeValue": {
     "raw": "NotificationCardProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NotificationCardProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DefaultNotificationProps</span> <span class=\"token punctuation\">{</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> SemanticColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "actions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> NotificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui:DefaultNotificationProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 5,
      "name": "onSuccess",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 6,
      "name": "clearTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 7,
      "name": "refreshTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 8,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 9,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 10,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 11,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 12,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "NumericInputMods": {
    "kind": 263,
    "typeRef": "@epam/uui:NumericInputMods",
    "typeValue": {
     "raw": "NumericInputMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NumericInputMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">types</span><span class=\"token punctuation\">.</span>SizeMod<span class=\"token punctuation\">,</span> IHasEditMode <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "NumericInputProps": {
    "kind": 264,
    "typeRef": "@epam/uui:NumericInputProps",
    "typeValue": {
     "raw": "NumericInputProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">NumericInputProps</span> <span class=\"token operator\">=</span> uuiNumericInputProps <span class=\"token operator\">&amp;</span> NumericInputMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "max",
      "comment": [
       "Maximum value (default is Number.MAX_SAFE_INTEGER)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "min",
      "comment": [
       "Minimum value (default is 0)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "upIcon",
      "comment": [
       "Overrides the up/increase icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "downIcon",
      "comment": [
       "Overrides the down/decrease icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "step",
      "comment": [
       "Increase/decrease step (for icons and )"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "inputCx",
      "comment": [
       "CSS classes to put directly on the Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "id",
      "comment": [
       "HTML ID"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "disableArrows",
      "comment": [
       "Turn off up/down (increase/decrease) buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "align",
      "comment": [
       "Align text inside the component. Useful for tables (in cell-mode) - to align numbers in table column"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "disableLocaleFormatting",
      "comment": [
       "Turns off locale-based formatting, standard Number.toString() is used instead"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "formatOptions",
      "comment": [
       "Number formatting options. See #{link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Intl<span class=\"token punctuation\">.</span>NumberFormatOptions"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "formatValue",
      "comment": [
       "A function to convert current input value to displayed text.",
       " Overrides standard Intl-based formatting.",
       " If passed, only maximumFractionDigits considered from formatOptions when both properties provided.",
       " Note, that formatting is used when input is out of focus."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:NumericInputProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 14,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 15,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 16,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 17,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 18,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 19,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 24,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 25,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 26,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 27,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 29,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 30,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "PanelMods": {
    "kind": 263,
    "typeRef": "@epam/uui:PanelMods",
    "typeValue": {
     "raw": "PanelMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PanelMods</span> <span class=\"token punctuation\">{</span>",
      "    shadow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    margin<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "shadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     }
    ]
   },
   "PickerInputProps": {
    "kind": 264,
    "typeRef": "@epam/uui:PickerInputProps",
    "typeValue": {
     "raw": "PickerInputProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerInputProps</span> <span class=\"token operator\">=</span> SizeMod <span class=\"token operator\">&amp;</span> IHasEditMode <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "PickerItemProps": {
    "kind": 263,
    "typeRef": "@epam/uui:PickerItemProps",
    "typeValue": {
     "raw": "PickerItemProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerItemProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> SizeMod <span class=\"token punctuation\">{</span>",
      "    avatarUrl<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Icon<span class=\"token punctuation\">;</span>",
      "    title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    subtitle<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    dataSourceState<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DataSourceState<span class=\"token punctuation\">;</span>",
      "    <span class=\"token comment\">/**",
      "     * Enables highlighting of the items' text with search-matching results.",
      "     * @default true",
      "     * */</span>",
      "    highlightSearchMatches<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "avatarUrl",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "title",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "subtitle",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "dataSourceState",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "highlightSearchMatches",
      "comment": [
       "Enables highlighting of the items' text with search-matching results.",
       " @default true"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 9,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 10,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "alignItems",
      "comment": [
       "Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "columnGap",
      "comment": [
       "Flexbox column gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "rowGap",
      "comment": [
       "Flexbox row gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "checkbox",
      "comment": [
       "If row needs a checkbox, this field should be specified and it props can be configured here"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> ICanBeInvalid"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 16,
      "name": "isSelectable",
      "comment": [
       "True if row is selectable (for whole-row single-selection, multi-selection via checkbox are configured with the checkbox prop)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 17,
      "name": "dnd",
      "comment": [
       "Configures row drag-n-drop options - if it can be dragged, can rows can be dropped into it, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IDndActor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 18,
      "name": "link",
      "comment": [
       "Can be specified to make row act as a link (plain or SPA)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 19,
      "name": "pin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 20,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 21,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 22,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 23,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 25,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 26,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 27,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 28,
      "name": "id",
      "comment": [
       "ID of the TItem rows displays"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 29,
      "name": "rowKey",
      "comment": [
       "Key to be used as component's key when rendering. Usually, it's stringified ID"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 30,
      "name": "index",
      "comment": [
       "Index of the row, from the top of the list. This doesn't account any hierarchy."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 31,
      "name": "parentId",
      "comment": [
       "ID of the parent TItem"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 32,
      "name": "path",
      "comment": [
       "Hierarchical path from the root node to the item (excluding the item itself)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 33,
      "name": "depth",
      "comment": [
       "Depth of the row in tree, 0 for the top-level"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 34,
      "name": "indent",
      "comment": [
       "Indent of the item, to show hierarchy.",
       "  Unlike depth, it contains additional logic, to not add unnecessary indents:",
       "  if all children of node has no children, all nodes would get the same indent as parent."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 35,
      "name": "isLoading",
      "comment": [
       "True if row is in loading state. 'value' is empty in this case"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 36,
      "name": "isUnknown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 37,
      "name": "isFoldable",
      "comment": [
       "True if row be folded or unfolded (usually because it contains children)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "isFolded",
      "comment": [
       "True if row is currently folded"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 39,
      "name": "isChecked",
      "comment": [
       "True if row is checked with checkbox"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 40,
      "name": "isCheckable",
      "comment": [
       "True if row has checkbox and can be checkable"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 41,
      "name": "isChildrenChecked",
      "comment": [
       "True if some of row's children are checked.",
       " Used to show 'indefinite' checkbox state, to show user that something inside is checked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 42,
      "name": "isSelected",
      "comment": [
       "True if row is selected (in single-select mode, or in case when interface use both single row selection and checkboxes)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 43,
      "name": "isChildrenSelected",
      "comment": [
       "True if any of row's children is selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 44,
      "name": "isFocused",
      "comment": [
       "True if row is focused. Focus can be changed via keyboard arrow keys, or by hovering mouse on top of the row"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 45,
      "name": "isLastChild",
      "comment": [
       "True if row is the last child of his parent"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 46,
      "name": "onFold",
      "comment": [
       "Handles row folding change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 47,
      "name": "onCheck",
      "comment": [
       "Handles row checkbox change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 48,
      "name": "onSelect",
      "comment": [
       "Handles row selection.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 49,
      "name": "onFocus",
      "comment": [
       "Handles row focusing."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>focusedIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 50,
      "name": "isPinned",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 51,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     }
    ]
   },
   "PickerListItemProps": {
    "kind": 263,
    "typeRef": "@epam/uui:PickerListItemProps",
    "typeValue": {
     "raw": "PickerListItemProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerListItemProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getName",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "node_modules/@types/react/index.d.ts:Attributes",
      "required": false
     },
     {
      "uid": 5,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 6,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "alignItems",
      "comment": [
       "Flexbox align-items property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'stretch'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "columnGap",
      "comment": [
       "Flexbox column gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "rowGap",
      "comment": [
       "Flexbox row gap property [Flexbox Guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-gap-row-gap-column-gap)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "from": "@epam/uui-core:FlexRowProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "checkbox",
      "comment": [
       "If row needs a checkbox, this field should be specified and it props can be configured here"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> isVisible<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> ICanBeInvalid"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 11,
      "name": "isSelectable",
      "comment": [
       "True if row is selectable (for whole-row single-selection, multi-selection via checkbox are configured with the checkbox prop)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 12,
      "name": "dnd",
      "comment": [
       "Configures row drag-n-drop options - if it can be dragged, can rows can be dropped into it, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> IDndActor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 13,
      "name": "link",
      "comment": [
       "Can be specified to make row act as a link (plain or SPA)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 14,
      "name": "pin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:DataRowOptions",
      "required": false
     },
     {
      "uid": 15,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 16,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 17,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 19,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 22,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 23,
      "name": "id",
      "comment": [
       "ID of the TItem rows displays"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 24,
      "name": "rowKey",
      "comment": [
       "Key to be used as component's key when rendering. Usually, it's stringified ID"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 25,
      "name": "index",
      "comment": [
       "Index of the row, from the top of the list. This doesn't account any hierarchy."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": true
     },
     {
      "uid": 26,
      "name": "parentId",
      "comment": [
       "ID of the parent TItem"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 27,
      "name": "path",
      "comment": [
       "Hierarchical path from the root node to the item (excluding the item itself)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> DataRowPathItem<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 28,
      "name": "depth",
      "comment": [
       "Depth of the row in tree, 0 for the top-level"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 29,
      "name": "indent",
      "comment": [
       "Indent of the item, to show hierarchy.",
       "  Unlike depth, it contains additional logic, to not add unnecessary indents:",
       "  if all children of node has no children, all nodes would get the same indent as parent."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 30,
      "name": "isLoading",
      "comment": [
       "True if row is in loading state. 'value' is empty in this case"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 31,
      "name": "isUnknown",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 32,
      "name": "isFoldable",
      "comment": [
       "True if row be folded or unfolded (usually because it contains children)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 33,
      "name": "isFolded",
      "comment": [
       "True if row is currently folded"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 34,
      "name": "isChecked",
      "comment": [
       "True if row is checked with checkbox"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 35,
      "name": "isCheckable",
      "comment": [
       "True if row has checkbox and can be checkable"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 36,
      "name": "isChildrenChecked",
      "comment": [
       "True if some of row's children are checked.",
       " Used to show 'indefinite' checkbox state, to show user that something inside is checked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 37,
      "name": "isSelected",
      "comment": [
       "True if row is selected (in single-select mode, or in case when interface use both single row selection and checkboxes)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "isChildrenSelected",
      "comment": [
       "True if any of row's children is selected."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 39,
      "name": "isFocused",
      "comment": [
       "True if row is focused. Focus can be changed via keyboard arrow keys, or by hovering mouse on top of the row"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 40,
      "name": "isLastChild",
      "comment": [
       "True if row is the last child of his parent"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 41,
      "name": "onFold",
      "comment": [
       "Handles row folding change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 42,
      "name": "onCheck",
      "comment": [
       "Handles row checkbox change.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 43,
      "name": "onSelect",
      "comment": [
       "Handles row selection.",
       " We demand to pass the row as well, to avoid creating closures for each row."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>rowProps<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 44,
      "name": "onFocus",
      "comment": [
       "Handles row focusing."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>focusedIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     },
     {
      "uid": 45,
      "name": "isPinned",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DataRowProps",
      "required": false
     }
    ]
   },
   "PickerListProps": {
    "kind": 264,
    "typeRef": "@epam/uui:PickerListProps",
    "typeValue": {
     "raw": "IHasEditMode <span class=\"token operator\">|</span> IHasEditMode <span class=\"token operator\">|</span> IHasEditMode <span class=\"token operator\">|</span> IHasEditMode",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerListProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> SizeMod <span class=\"token operator\">&amp;</span> IHasPlaceholder <span class=\"token operator\">&amp;</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>",
      "    renderModalToggler<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IClickable <span class=\"token operator\">&amp;</span> IHasCaption <span class=\"token operator\">&amp;</span> IDisableable<span class=\"token punctuation\">,</span> selection<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    noOptionsMessage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> PickerListBaseProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IHasEditMode<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 115,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 116,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 117,
      "name": "renderFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>editableFilter<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 118,
      "name": "renderFooter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IModal<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 119,
      "name": "disallowClickOutside",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 120,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 121,
      "name": "renderModalToggler",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataRowProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 122,
      "name": "noOptionsMessage",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "required": false
     },
     {
      "uid": 123,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 124,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 125,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 126,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 127,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 128,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 129,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 130,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 131,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 132,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 133,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 134,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 135,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 136,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 61,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 24,
      "name": "valueType",
      "comment": [
       "Defines what to use in value/onValueChange: 'id' - item id (TId). 'entity' - the item itself (TItem)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": false
     },
     {
      "uid": 25,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 26,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 141,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 142,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 143,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 144,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 145,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 146,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 147,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 148,
      "name": "maxDefaultItems",
      "comment": [
       "Number of default items to show initially, when nothing is selected.",
       " Default it 10 items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 149,
      "name": "maxTotalItems",
      "comment": [
       "Maximum total number of items to show, including selected"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 150,
      "name": "defaultIds",
      "comment": [
       "Ids of items to show first.",
       " If not specified, top props.maxDefaultItems will be shown according to the DataSource sorting settings (default is 10)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 151,
      "name": "settingsKey",
      "comment": [
       "If provided, top picks will be automatically adjusted based on last user selection, and stored as user setting under provided key"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:PickerListBaseProps",
      "required": false
     },
     {
      "uid": 152,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     },
     {
      "uid": 62,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:SinglePickerProps",
      "required": true
     },
     {
      "uid": 63,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 64,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 137,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 100,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": false
     },
     {
      "uid": 101,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 102,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 138,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-core:ArrayPickerProps",
      "required": true
     },
     {
      "uid": 139,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 140,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "PickerModalProps": {
    "kind": 264,
    "typeRef": "@epam/uui:PickerModalProps",
    "typeValue": {
     "raw": "PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickerModalProps<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> PickerBaseOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IHasCaption <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>PickerModalScalarProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span> <span class=\"token operator\">|</span> PickerModalArrayProps<span class=\"token operator\">&lt;</span>TId<span class=\"token punctuation\">,</span> TItem<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> PickerModalOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 82,
      "name": "entityName",
      "comment": [
       "Name of the entity being selected. Affects wording like \"Please select [entity]\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 83,
      "name": "entityPluralName",
      "comment": [
       "Plural name of the entity being selected. Affects wording like \"X [entities] selected\""
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 84,
      "name": "dataSource",
      "comment": [
       "Provides items to the Picker"
      ],
      "typeValue": {
       "raw": "IDataSource<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": true
     },
     {
      "uid": 85,
      "name": "getName",
      "comment": [
       "Gets entity display name. Default it item.name."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 86,
      "name": "renderRow",
      "comment": [
       "Allow to customize how each selectable row is rendered. Can be used to add subtitles, avatars, etc."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> DataSourceState<span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 87,
      "name": "getRowOptions",
      "comment": [
       "Gets options for each row. Allow to make rows non-selectable, as well as many other tweaks."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> DataRowOptions<span class=\"token operator\">&lt;</span>TItem<span class=\"token punctuation\">,</span> TId<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 88,
      "name": "renderNotFound",
      "comment": [
       "Overrides the default 'no records found' banner.",
       " The 'search' callback parameter allows to distinguish cases when there's no records at all, and when current search doesn't find anything."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> search<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token function-variable function\">onClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 89,
      "name": "emptyValue",
      "comment": [
       "Defines which value is to set on clear. E.g. you can put an empty array instead of null for empty multi-select Pickers"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 90,
      "name": "sortBy",
      "comment": [
       "Defines how items should be sorted. By default, items are shown in order they are provided to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">,</span> sorting<span class=\"token operator\">:</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 91,
      "name": "filter",
      "comment": [
       "Additional filter to apply to the DataSource. Can be used to limit selection somehow, w/o re-building the DataSource. E.g. in the linked pickers scenario."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 92,
      "name": "sorting",
      "comment": [
       "Defines sorting to pass to the DataSource"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> SortingOption<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 93,
      "name": "cascadeSelection",
      "comment": [
       "Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.",
       " - false: All nodes are selected independently (default).",
       " - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.",
       " - 'implicit': Selecting a parent node means that all children are considered checked.",
       "   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked",
       "   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,",
       "   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last",
       "   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token string\">'implicit'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'explicit'</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 94,
      "name": "isFoldedByDefault",
      "comment": [
       "You can return true for all, or some items to fold them."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 95,
      "name": "getSearchFields",
      "comment": [
       "Given an item, should return an array of string fields to search on. By default, the search is performed on item.name field."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:PickerBaseOptions",
      "required": false
     },
     {
      "uid": 96,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 43,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'single'</span>"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 17,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 18,
      "name": "initialValue",
      "typeValue": {
       "raw": "TId"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 100,
      "name": "isActive",
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 101,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 102,
      "name": "zIndex",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 22,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 104,
      "name": "abort",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 105,
      "name": "renderFilter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>editableFilter<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 106,
      "name": "renderFooter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IModal<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 107,
      "name": "disallowClickOutside",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:PickerModalOptions",
      "required": false
     },
     {
      "uid": 108,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 44,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 45,
      "name": "initialValue",
      "typeValue": {
       "raw": "TItem"
      },
      "from": "@epam/uui-components:PickerModalScalarProps",
      "required": true
     },
     {
      "uid": 49,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 97,
      "name": "selectionMode",
      "typeValue": {
       "raw": "<span class=\"token string\">'multi'</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 71,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'id'</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 72,
      "name": "initialValue",
      "typeValue": {
       "raw": "TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 76,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TId<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     },
     {
      "uid": 98,
      "name": "valueType",
      "typeValue": {
       "raw": "<span class=\"token string\">'entity'</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 99,
      "name": "initialValue",
      "typeValue": {
       "raw": "TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-components:PickerModalArrayProps",
      "required": true
     },
     {
      "uid": 103,
      "name": "success",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> TItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IModal",
      "required": true
     }
    ],
    "propsFromUnion": true
   },
   "pickerPart": {
    "kind": 264,
    "typeRef": "@epam/uui:pickerPart",
    "typeValue": {
     "raw": "<span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">pickerPart</span> <span class=\"token operator\">=</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "PickerTogglerMods": {
    "kind": 263,
    "typeRef": "@epam/uui:PickerTogglerMods",
    "typeValue": {
     "raw": "PickerTogglerMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PickerTogglerMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">types</span><span class=\"token punctuation\">.</span>IHasEditMode <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "PresetsPanelProps": {
    "kind": 263,
    "typeRef": "@epam/uui:PresetsPanelProps",
    "typeValue": {
     "raw": "PresetsPanelProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PresetsPanelProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IPresetsApi</span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    tableState<span class=\"token operator\">:</span> DataTableState<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "tableState",
      "typeValue": {
       "raw": "DataTableState<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "activePresetId",
      "comment": [
       "ID of selected preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": false
     },
     {
      "uid": 3,
      "name": "choosePreset",
      "comment": [
       "Function that selects given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 4,
      "name": "createNewPreset",
      "comment": [
       "Function that gives preset name and create new preset with this name and current table state"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 5,
      "name": "hasPresetChanged",
      "comment": [
       "Function that gives preset and return if this preset changed or not"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 6,
      "name": "duplicatePreset",
      "comment": [
       "Function that gives the preset and creat their duplicate"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 7,
      "name": "deletePreset",
      "comment": [
       "Function that deletes given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 8,
      "name": "updatePreset",
      "comment": [
       "Function that updates given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 9,
      "name": "getPresetLink",
      "comment": [
       "Function that gives preset and return URL link on given preset"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>preset<span class=\"token operator\">:</span> ITablePreset<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 10,
      "name": "presets",
      "comment": [
       "Array of presets"
      ],
      "typeValue": {
       "raw": "ITablePreset<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:IPresetsApi",
      "required": true
     },
     {
      "uid": 11,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "ProgressBarMods": {
    "kind": 263,
    "typeRef": "@epam/uui:ProgressBarMods",
    "typeValue": {
     "raw": "ProgressBarMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ProgressBarMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "    striped<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "striped",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "RadioInputMods": {
    "kind": 263,
    "typeRef": "@epam/uui:RadioInputMods",
    "typeValue": {
     "raw": "RadioInputMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RadioInputMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "required": false
     }
    ]
   },
   "RadioInputProps": {
    "kind": 264,
    "typeRef": "@epam/uui:RadioInputProps",
    "typeValue": {
     "raw": "RadioInputProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">RadioInputProps</span> <span class=\"token operator\">=</span> RadioInputMods <span class=\"token operator\">&amp;</span> UuiRadioInputProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "from": "@epam/uui:RadioInputMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "renderLabel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "tabIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 14,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 15,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 16,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 17,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "RangeDatePickerBodyProps": {
    "kind": 263,
    "typeRef": "@epam/uui:RangeDatePickerBodyProps",
    "typeValue": {
     "raw": "RangeDatePickerBodyProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeDatePickerBodyProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DatePickerBodyBaseOptions</span><span class=\"token punctuation\">,</span> IEditable<span class=\"token operator\">&lt;</span>PickerBodyValue<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    focusPart<span class=\"token operator\">:</span> InputType<span class=\"token punctuation\">;</span>",
      "    renderFooter<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    isHoliday<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    renderHeader<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IEditable<span class=\"token operator\">&lt;</span>PickerBodyValue<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "focusPart",
      "typeValue": {
       "raw": "<span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "renderFooter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "isHoliday",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "renderHeader",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> PickerBodyValue<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "filter",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 6,
      "name": "changeIsOpen",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 7,
      "name": "presets",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 8,
      "name": "renderDay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-components:DatePickerBodyBaseOptions",
      "required": false
     },
     {
      "uid": 9,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 10,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 12,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "PickerBodyValue<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 13,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> PickerBodyValue<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 14,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 15,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 16,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 17,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 18,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 19,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     }
    ]
   },
   "RangeDatePickerProps": {
    "kind": 263,
    "typeRef": "@epam/uui:RangeDatePickerProps",
    "typeValue": {
     "raw": "RangeDatePickerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeDatePickerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseRangeDatePickerProps</span><span class=\"token punctuation\">,</span> SizeMod <span class=\"token punctuation\">{</span>",
      "    getPlaceholder<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> InputType<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getPlaceholder",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> InputType<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "format",
      "comment": [
       "Date format string, see [dayjs docs](@link https://day.js.org/docs/en/display/format)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "filter",
      "comment": [
       "Filter selectable days. Days, for which this callback returns false - will be disabled"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "renderTarget",
      "comment": [
       "Overrides rendering of picker Target - component which triggers dropdown. Can be used to attach RangeDatePicker to other components, e.g. Buttons"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "renderFooter",
      "comment": [
       "Allows to add a custom footer to the Picker's dropdown body"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> RangeDatePickerValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "renderDay",
      "comment": [
       "Overrides rendering of the single day. For example, to highlight certain days"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "presets",
      "comment": [
       "Range presets (like 'this week', 'this month', etc.) to display at the right of the Picker's body.",
       " UUI provides defaults in the 'rangeDatePickerPresets' exported variable - you can use it as is, or build on top of it (e.g. add your presets)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> RangeDatePickerPresets"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "disableClear",
      "comment": [
       "Disables clearing component (with the cross icon)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "placement",
      "comment": [
       "Dropdown position relative to the input. See [Popper Docs](@link https://popper.js.org/)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "isHoliday",
      "comment": [
       "If this function returns true, the day will be highlighted as holiday"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>day<span class=\"token operator\">:</span> Dayjs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> inputType<span class=\"token operator\">:</span> <span class=\"token string\">'from'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'to'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "onOpenChange",
      "comment": [
       "Called when component is opened/closed"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>isOpen<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "rawProps",
      "comment": [
       "rawProps as HTML attributes"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> to<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "inputCx",
      "comment": [
       "Styles for input and body components in RangeDatePicker"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "bodyCx",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:BaseRangeDatePickerProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "RangeDatePickerValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 18,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> RangeDatePickerValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 19,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 20,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 21,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 23,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 24,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 25,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 26,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     }
    ]
   },
   "RangeDatePickerValue": {
    "kind": 263,
    "typeRef": "@epam/uui:RangeDatePickerValue",
    "typeValue": {
     "raw": "RangeDatePickerValue",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeDatePickerValue</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    to<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "to",
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "RichTextViewMods": {
    "kind": 263,
    "typeRef": "@epam/uui:RichTextViewMods",
    "typeValue": {
     "raw": "RichTextViewMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RichTextViewMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span>"
      },
      "required": false
     }
    ]
   },
   "RowMods": {
    "kind": 263,
    "typeRef": "@epam/uui:RowMods",
    "typeValue": {
     "raw": "RowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RowMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RowSizeMod</span> <span class=\"token punctuation\">{</span>",
      "    borderBottom<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    columnGap<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span><span class=\"token punctuation\">;</span>",
      "    margin<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "    padding<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "    rowGap<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span><span class=\"token punctuation\">;</span>",
      "    spacing<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span><span class=\"token punctuation\">;</span>",
      "    topShadow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    vPadding<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "borderBottom",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "columnGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "rowGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "spacing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "topShadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "vPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:RowSizeMod",
      "required": false
     }
    ]
   },
   "RowSize": {
    "kind": 264,
    "typeRef": "@epam/uui:RowSize",
    "typeValue": {
     "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">RowSize</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "RowSizeMod": {
    "kind": 263,
    "typeRef": "@epam/uui:RowSizeMod",
    "typeValue": {
     "raw": "RowSizeMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RowSizeMod</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RowSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     }
    ]
   },
   "SemanticColor": {
    "kind": 264,
    "typeRef": "@epam/uui:SemanticColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SemanticColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "SizeMod": {
    "kind": 263,
    "typeRef": "@epam/uui:SizeMod",
    "typeValue": {
     "raw": "SizeMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SizeMod</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     }
    ]
   },
   "SpinnerProps": {
    "kind": 264,
    "typeRef": "@epam/uui:SpinnerProps",
    "typeValue": {
     "raw": "SpinnerProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SpinnerProps</span> <span class=\"token operator\">=</span> UuiSpinnerProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "SwitchMods": {
    "kind": 263,
    "typeRef": "@epam/uui:SwitchMods",
    "typeValue": {
     "raw": "SwitchMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SwitchMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     }
    ]
   },
   "TabButtonMods": {
    "kind": 263,
    "typeRef": "@epam/uui:TabButtonMods",
    "typeValue": {
     "raw": "TabButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TabButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span><span class=\"token punctuation\">;</span>",
      "    withNotify<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "withNotify",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     }
    ]
   },
   "TabButtonProps": {
    "kind": 264,
    "typeRef": "@epam/uui:TabButtonProps",
    "typeValue": {
     "raw": "TabButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TabButtonProps</span> <span class=\"token operator\">=</span> TabButtonMods <span class=\"token operator\">&amp;</span> ButtonProps<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "from": "@epam/uui:TabButtonMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "withNotify",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:TabButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 10,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 11,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 16,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 20,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 21,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 23,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 29,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 30,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "TagMods": {
    "kind": 263,
    "typeRef": "@epam/uui:TagMods",
    "typeValue": {
     "raw": "TagMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TagMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> TagSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     }
    ]
   },
   "TagProps": {
    "kind": 264,
    "typeRef": "@epam/uui:TagProps",
    "typeValue": {
     "raw": "TagProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TagProps</span> <span class=\"token operator\">=</span> ButtonProps <span class=\"token operator\">&amp;</span> TagMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 9,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 10,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 15,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 16,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 18,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 19,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 21,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 29,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:TagMods",
      "required": false
     }
    ]
   },
   "TagSize": {
    "kind": 264,
    "typeRef": "@epam/uui:TagSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TagSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "TextAreaMods": {
    "kind": 263,
    "typeRef": "@epam/uui:TextAreaMods",
    "typeValue": {
     "raw": "TextAreaMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextAreaMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">types</span><span class=\"token punctuation\">.</span>IHasEditMode <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>ControlSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "TextAreaProps": {
    "kind": 264,
    "typeRef": "@epam/uui:TextAreaProps",
    "typeValue": {
     "raw": "TextAreaProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextAreaProps</span> <span class=\"token operator\">=</span> UuiTextAreaProps <span class=\"token operator\">&amp;</span> TextAreaMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "rows",
      "comment": [
       "Adjust height to fit specified number or text rows. HTML TextArea attribute."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:TextAreaProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "autoSize",
      "comment": [
       "Enables auto-resizing height to fit text. Rows prop is ignored in this mode"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:TextAreaProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "onKeyDown",
      "comment": [
       "onKeyDown event handler to put on HTML Input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-components:TextAreaProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "autoFocus",
      "comment": [
       "Automatically sets input focus to component, when its mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-components:TextAreaProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "inputCx",
      "comment": [
       "CSS class names to put to the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:TextAreaProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "maxLength",
      "comment": [
       "Maximum text length, in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:TextAreaProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "id",
      "comment": [
       "HTML id attribute to put on the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:TextAreaProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 9,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 11,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 14,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 15,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 16,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 17,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 18,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>TextareaHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 20,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLTextAreaElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 21,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLTextAreaElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 22,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:TextAreaMods",
      "required": false
     },
     {
      "uid": 23,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "TextInputMods": {
    "kind": 263,
    "typeRef": "@epam/uui:TextInputMods",
    "typeValue": {
     "raw": "TextInputMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextInputMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasEditMode</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "TextInputProps": {
    "kind": 263,
    "typeRef": "@epam/uui:TextInputProps",
    "typeValue": {
     "raw": "TextInputProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextInputProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CoreTextInputProps</span><span class=\"token punctuation\">,</span> TextInputMods <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "acceptIcon",
      "comment": [
       "Overrides accept (check) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "cancelIcon",
      "comment": [
       "Overrides cancel (cross) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Overrides dropdown (chevron) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put to the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "renderInput",
      "comment": [
       "overrides rendering of HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IRenderInputProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "onCancel",
      "comment": [
       "Enables cancel (cross) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onAccept",
      "comment": [
       "Enables accept (check) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "onKeyDown",
      "comment": [
       "keydown event handler to put on the HTML input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "autoFocus",
      "comment": [
       "Put focus on the element, when component is mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "type",
      "comment": [
       "Standard 'type' attribute to put on the HTML input element (e.g. 'password')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "autoComplete",
      "comment": [
       "Standard [autocomplete attribute]{@link https://www.w3schools.com/tags/att_input_autocomplete.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "name",
      "comment": [
       "Standard [name attribute]{@link https://www.w3schools.com/tags/att_input_name.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "maxLength",
      "comment": [
       "Maximum input length in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "inputMode",
      "comment": [
       "Standard [inputMode attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "id",
      "comment": [
       "HTML ID attribute for input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 17,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 21,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 26,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 27,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 28,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 29,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 30,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 31,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 32,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 33,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 34,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 35,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 36,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 37,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 39,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 40,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 41,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:TextInputMods",
      "required": false
     },
     {
      "uid": 42,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "TextMods": {
    "kind": 263,
    "typeRef": "@epam/uui:TextMods",
    "typeValue": {
     "raw": "TextMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TextSettings</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>TextSize <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span><span class=\"token punctuation\">;</span>",
      "    font<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>FontStyle<span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'brand'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'disabled'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "font",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'regular'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'promo'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'brand'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'disabled'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "lineHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     },
     {
      "uid": 5,
      "name": "fontSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'10'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     }
    ]
   },
   "TextPlaceholderProps": {
    "kind": 264,
    "typeRef": "@epam/uui:TextPlaceholderProps",
    "typeValue": {
     "raw": "TextPlaceholderProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextPlaceholderProps</span> <span class=\"token operator\">=</span> PropsWithChildren<span class=\"token operator\">&lt;</span>ITextPlaceholderProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "wordsCount",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui:ITextPlaceholderProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "isNotAnimated",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:ITextPlaceholderProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 5,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "node_modules/@types/react/index.d.ts:PropsWithChildren",
      "required": false
     }
    ]
   },
   "TextProps": {
    "kind": 264,
    "typeRef": "@epam/uui:TextProps",
    "typeValue": {
     "raw": "TextProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextProps</span> <span class=\"token operator\">=</span> UuiTextProps <span class=\"token operator\">&amp;</span> TextMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 4,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 7,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:TextMods",
      "required": false
     },
     {
      "uid": 8,
      "name": "font",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'regular'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'promo'</span>"
      },
      "from": "@epam/uui:TextMods",
      "required": false
     },
     {
      "uid": 9,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'error'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'brand'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'disabled'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span>"
      },
      "from": "@epam/uui:TextMods",
      "required": false
     },
     {
      "uid": 10,
      "name": "lineHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     },
     {
      "uid": 11,
      "name": "fontSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'10'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     }
    ]
   },
   "TextSettings": {
    "kind": 263,
    "typeRef": "@epam/uui:TextSettings",
    "typeValue": {
     "raw": "TextSettings",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextSettings</span> <span class=\"token punctuation\">{</span>",
      "    lineHeight<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span><span class=\"token punctuation\">;</span>",
      "    fontSize<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "lineHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "fontSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'10'</span>"
      },
      "required": false
     }
    ]
   },
   "TextSize": {
    "kind": 264,
    "typeRef": "@epam/uui:TextSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "TimePickerProps": {
    "kind": 263,
    "typeRef": "@epam/uui:TimePickerProps",
    "typeValue": {
     "raw": "TimePickerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimePickerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseTimePickerProps</span><span class=\"token punctuation\">,</span> SizeMod<span class=\"token punctuation\">,</span> IHasEditMode <span class=\"token punctuation\">{</span>",
      "    minutesStep<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    format<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "minutesStep",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "format",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:BaseTimePickerProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "renderTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IDropdownToggler<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:BaseTimePickerProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "rawProps",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> input<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-components:BaseTimePickerProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put on input-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:BaseTimePickerProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "bodyCx",
      "comment": [
       "CSS class(es) to put on body-part component. See https://github.com/JedWatson/classnames#usage for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:BaseTimePickerProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> TimePickerValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TimePickerValue <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 17,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 18,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "TooltipMods": {
    "kind": 263,
    "typeRef": "@epam/uui:TooltipMods",
    "typeValue": {
     "raw": "TooltipMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TooltipMods</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Tooltip color */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'critical'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "Tooltip color"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'critical'</span>"
      },
      "required": false
     }
    ]
   },
   "TooltipProps": {
    "kind": 264,
    "typeRef": "@epam/uui:TooltipProps",
    "typeValue": {
     "raw": "TooltipProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TooltipProps</span> <span class=\"token operator\">=</span> UuiTooltipProps <span class=\"token operator\">&amp;</span> TooltipMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "content",
      "comment": [
       "Content to show in the tooltip (ReactNode)"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "renderContent",
      "comment": [
       "Alternative to 'content' prop, you can pass a render function.",
       " The function will only be called when content is shown, this can save performance."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "offset",
      "comment": [
       "See [Popper docs]{@link https://popper.js.org/docs/v2/modifiers/offset/}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> OffsetsFunction <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "comment": [
       "React Node(s) to show tooltip for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "maxWidth",
      "comment": [
       "Max width of tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "placement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "modifiers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>Modifier<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> object<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "openDelay",
      "comment": [
       "Should we close dropdown on click on the Toggler, if it's already open? Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "closeDelay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "closeOnMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toggler'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundary'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "boundaryElement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement <span class=\"token operator\">|</span> HTMLElement<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'clippingParents'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "closeBodyOnTogglerHidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 25,
      "name": "color",
      "comment": [
       "Tooltip color"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'default'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'contrast'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'critical'</span>"
      },
      "from": "@epam/uui:TooltipMods",
      "required": false
     }
    ]
   },
   "UuiMultiSwitchColor": {
    "kind": 264,
    "typeRef": "@epam/uui:UuiMultiSwitchColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">UuiMultiSwitchColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "VerticalTabButtonProps": {
    "kind": 264,
    "typeRef": "@epam/uui:VerticalTabButtonProps",
    "typeValue": {
     "raw": "VerticalTabButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">VerticalTabButtonProps</span> <span class=\"token operator\">=</span> ButtonProps <span class=\"token operator\">&amp;</span> TabButtonMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 9,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 10,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 11,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 15,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 16,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 18,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 19,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 21,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 29,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "from": "@epam/uui:TabButtonMods",
      "required": false
     },
     {
      "uid": 30,
      "name": "withNotify",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:TabButtonMods",
      "required": false
     }
    ]
   }
  },
  "@epam/promo": {
   "AlertMods": {
    "kind": 263,
    "typeRef": "@epam/promo:AlertMods",
    "typeValue": {
     "raw": "AlertMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlertMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamPrimaryColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span>"
      },
      "required": false
     }
    ]
   },
   "AlertProps": {
    "kind": 263,
    "typeRef": "@epam/promo:AlertProps",
    "typeValue": {
     "raw": "AlertProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlertProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Omit<span class=\"token operator\">&lt;</span>uuiAlertProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> AlertMods <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "actions",
      "comment": [
       "List of actions to display in the alert. Each action has name and 'action' callback"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> notificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClose",
      "comment": [
       "When specified, a close icon is rendered. onClose callback will be called on clicking the close icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "icon",
      "comment": [
       "An optional icon to show on the left of the alert"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "size",
      "comment": [
       "Component size. If omitted, 48 size will be used."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span>"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span>"
      },
      "from": "@epam/promo:AlertMods",
      "required": false
     }
    ]
   },
   "BadgeMods": {
    "kind": 263,
    "typeRef": "@epam/promo:BadgeMods",
    "typeValue": {
     "raw": "BadgeMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BadgeMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamAdditionalColor <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span>"
      },
      "required": false
     }
    ]
   },
   "BadgeProps": {
    "kind": 264,
    "typeRef": "@epam/promo:BadgeProps",
    "typeValue": {
     "raw": "BadgeProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">BadgeProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiBadgeProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> BadgeMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:BadgeMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 20,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 21,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 22,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 29,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 30,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semitransparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'transparent'</span>"
      },
      "from": "@epam/uui:BadgeMods",
      "required": false
     },
     {
      "uid": 31,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span>"
      },
      "from": "@epam/promo:BadgeMods",
      "required": false
     }
    ]
   },
   "ButtonColor": {
    "kind": 264,
    "typeRef": "@epam/promo:ButtonColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ButtonMods": {
    "kind": 263,
    "typeRef": "@epam/promo:ButtonMods",
    "typeValue": {
     "raw": "ButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    fill<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FillStyle<span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ButtonColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "required": false
     }
    ]
   },
   "ButtonProps": {
    "kind": 264,
    "typeRef": "@epam/promo:ButtonProps",
    "typeValue": {
     "raw": "ButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiTypes<span class=\"token punctuation\">.</span>ButtonProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ButtonMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:ButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 20,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 21,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 22,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 29,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 30,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ghost'</span>"
      },
      "from": "@epam/uui:ButtonMods",
      "required": false
     },
     {
      "uid": 31,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/promo:ButtonMods",
      "required": false
     },
     {
      "uid": 32,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "from": "@epam/promo:ButtonMods",
      "required": false
     }
    ]
   },
   "ColorMod": {
    "kind": 263,
    "typeRef": "@epam/promo:ColorMod",
    "typeValue": {
     "raw": "ColorMod",
     "print": [
      "<span class=\"token comment\">// Mod interfaces</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ColorMod</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Component's base color */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "Component's base color"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray40'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>"
      },
      "required": false
     }
    ]
   },
   "ControlShape": {
    "kind": 264,
    "typeRef": "@epam/promo:ControlShape",
    "typeValue": {
     "raw": "<span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ControlShape</span> <span class=\"token operator\">=</span> <span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ControlSize": {
    "kind": 264,
    "typeRef": "@epam/promo:ControlSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ControlSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "DropdownContainerMods": {
    "kind": 263,
    "typeRef": "@epam/promo:DropdownContainerMods",
    "typeValue": {
     "raw": "DropdownContainerMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownContainerMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span>"
      },
      "required": false
     }
    ]
   },
   "EpamAdditionalColor": {
    "kind": 264,
    "typeRef": "@epam/promo:EpamAdditionalColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamAdditionalColor</span> <span class=\"token operator\">=</span> EpamPrimaryColor <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "EpamColor": {
    "kind": 264,
    "typeRef": "@epam/promo:EpamColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray40'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamColor</span> <span class=\"token operator\">=</span> EpamPrimaryColor <span class=\"token operator\">|</span> EpamGrayscaleColor <span class=\"token operator\">|</span> EpamAdditionalColor<span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "EpamGrayscaleColor": {
    "kind": 264,
    "typeRef": "@epam/promo:EpamGrayscaleColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray40'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamGrayscaleColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray40'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "EpamPrimaryColor": {
    "kind": 264,
    "typeRef": "@epam/promo:EpamPrimaryColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamPrimaryColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ErrorHandlerProps": {
    "kind": 263,
    "typeRef": "@epam/promo:ErrorHandlerProps",
    "typeValue": {
     "raw": "ErrorHandlerProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ErrorHandlerProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasChildren <span class=\"token punctuation\">{</span>",
      "    getErrorInfo<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>uuiError<span class=\"token operator\">:</span> UuiError <span class=\"token operator\">|</span> Error <span class=\"token operator\">|</span> ApiCallInfo<span class=\"token punctuation\">,</span> defaultErrorInfo<span class=\"token operator\">:</span> UuiErrorInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> UuiErrorInfo<span class=\"token punctuation\">;</span>",
      "    onNotificationError<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>errors<span class=\"token operator\">:</span> ApiCallInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getErrorInfo",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>uuiError<span class=\"token operator\">:</span> UuiErrorInfo"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "onNotificationError",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>errors<span class=\"token operator\">:</span> ApiCallInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     }
    ]
   },
   "FillStyle": {
    "kind": 264,
    "typeRef": "@epam/promo:FillStyle",
    "typeValue": {
     "raw": "<span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FillStyle</span> <span class=\"token operator\">=</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "FontMod": {
    "kind": 263,
    "typeRef": "@epam/promo:FontMod",
    "typeValue": {
     "raw": "FontMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FontMod</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Font to use for text */</span>",
      "    font<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FontStyle<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "font",
      "comment": [
       "Font to use for text"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-slab'</span>"
      },
      "required": false
     }
    ]
   },
   "FontStyle": {
    "kind": 264,
    "typeRef": "@epam/promo:FontStyle",
    "typeValue": {
     "raw": "<span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-slab'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FontStyle</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-slab'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "IconButtonMods": {
    "kind": 263,
    "typeRef": "@epam/promo:IconButtonMods",
    "typeValue": {
     "raw": "IconButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IconButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IconColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span>"
      },
      "required": false
     }
    ]
   },
   "IconButtonProps": {
    "kind": 264,
    "typeRef": "@epam/promo:IconButtonProps",
    "typeValue": {
     "raw": "IconButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IconButtonProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiIconButtonProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IconButtonMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 5,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 6,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 7,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 8,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 9,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 10,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 11,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 12,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 13,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 14,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 15,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span>"
      },
      "from": "@epam/promo:IconButtonMods",
      "required": false
     }
    ]
   },
   "IconColor": {
    "kind": 264,
    "typeRef": "@epam/promo:IconColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IconColor</span> <span class=\"token operator\">=</span> EpamPrimaryColor <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "IconContainerColors": {
    "kind": 264,
    "typeRef": "@epam/promo:IconContainerColors",
    "typeValue": {
     "raw": "<span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray40'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IconContainerColors</span> <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray40'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "IconContainerMods": {
    "kind": 263,
    "typeRef": "@epam/promo:IconContainerMods",
    "typeValue": {
     "raw": "IconContainerMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IconContainerMods</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** IconContainer color.",
      "     *  @deprecated Property color is deprecated and will be removed in future release. Please make icon color configuration by yourself, e.g. via cx or style prop.",
      "     * */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IconContainerColors<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "IconContainer color.",
       "  @deprecated Property color is deprecated and will be removed in future release. Please make icon color configuration by yourself, e.g. via cx or style prop."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cyan'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'purple'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'violet'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray20'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray40'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray70'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>"
      },
      "required": false
     }
    ]
   },
   "IHasEditMode": {
    "kind": 263,
    "typeRef": "@epam/promo:IHasEditMode",
    "typeValue": {
     "raw": "IHasEditMode",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHasEditMode</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Defines input mode: 'form' is default and usual look, 'cell' is for using components as table cells  */</span>",
      "    mode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "mode",
      "comment": [
       "Defines input mode: 'form' is default and usual look, 'cell' is for using components as table cells"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "required": false
     }
    ]
   },
   "LinkButtonMods": {
    "kind": 263,
    "typeRef": "@epam/promo:LinkButtonMods",
    "typeValue": {
     "raw": "LinkButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LinkButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span>"
      },
      "required": false
     }
    ]
   },
   "LinkButtonProps": {
    "kind": 264,
    "typeRef": "@epam/promo:LinkButtonProps",
    "typeValue": {
     "raw": "LinkButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">LinkButtonProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiLinkButtonProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> LinkButtonMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:LinkButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 20,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 21,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 22,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 29,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 30,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray10'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span>"
      },
      "from": "@epam/promo:LinkButtonMods",
      "required": false
     }
    ]
   },
   "ModalWindowMods": {
    "kind": 263,
    "typeRef": "@epam/promo:ModalWindowMods",
    "typeValue": {
     "raw": "ModalWindowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalWindowMods</span> <span class=\"token punctuation\">{</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'420'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'900'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    height<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'420'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'900'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span>"
      },
      "required": false
     }
    ]
   },
   "MultiSwitchColor": {
    "kind": 264,
    "typeRef": "@epam/promo:MultiSwitchColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">MultiSwitchColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "MultiSwitchMods": {
    "kind": 263,
    "typeRef": "@epam/promo:MultiSwitchMods",
    "typeValue": {
     "raw": "MultiSwitchMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MultiSwitchMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> MultiSwitchColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "required": false
     }
    ]
   },
   "MultiSwitchProps": {
    "kind": 264,
    "typeRef": "@epam/promo:MultiSwitchProps",
    "typeValue": {
     "raw": "MultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">MultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiMultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> MultiSwitchMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 2,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 4,
      "name": "items",
      "typeValue": {
       "raw": "MultiSwitchItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui:MultiSwitchProps",
      "required": true
     },
     {
      "uid": 5,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 6,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 11,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "from": "@epam/promo:MultiSwitchMods",
      "required": false
     }
    ]
   },
   "NotificationCardMods": {
    "kind": 263,
    "typeRef": "@epam/promo:NotificationCardMods",
    "typeValue": {
     "raw": "NotificationCardMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NotificationCardMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamPrimaryColor <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span>"
      },
      "required": false
     }
    ]
   },
   "NotificationCardProps": {
    "kind": 264,
    "typeRef": "@epam/promo:NotificationCardProps",
    "typeValue": {
     "raw": "NotificationCardProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">NotificationCardProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>uuiNotificationCardProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> NotificationCardMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "actions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> NotificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui:DefaultNotificationProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 3,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui:NotificationCardProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onSuccess",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 8,
      "name": "clearTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 9,
      "name": "refreshTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 10,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 11,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 12,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span>"
      },
      "from": "@epam/promo:NotificationCardMods",
      "required": false
     }
    ]
   },
   "PanelMods": {
    "kind": 263,
    "typeRef": "@epam/promo:PanelMods",
    "typeValue": {
     "raw": "PanelMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PanelMods</span> <span class=\"token punctuation\">{</span>",
      "    shadow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    margin<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "    background<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "shadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "background",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>"
      },
      "required": false
     }
    ]
   },
   "RatingMods": {
    "kind": 263,
    "typeRef": "@epam/promo:RatingMods",
    "typeValue": {
     "raw": "RatingMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RatingMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span> <span class=\"token operator\">|</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span> <span class=\"token operator\">|</span> <span class=\"token number\">30</span>"
      },
      "required": false
     }
    ]
   },
   "RichTextViewMods": {
    "kind": 263,
    "typeRef": "@epam/promo:RichTextViewMods",
    "typeValue": {
     "raw": "RichTextViewMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RichTextViewMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span>"
      },
      "required": false
     }
    ]
   },
   "RowMods": {
    "kind": 263,
    "typeRef": "@epam/promo:RowMods",
    "typeValue": {
     "raw": "RowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RowMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">uuiRowMods</span><span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>RowSizeMod <span class=\"token punctuation\">{</span>",
      "    background<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "background",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "borderBottom",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "columnGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 4,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 5,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 6,
      "name": "rowGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 7,
      "name": "spacing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 8,
      "name": "topShadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 9,
      "name": "vPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 10,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:RowSizeMod",
      "required": false
     }
    ]
   },
   "RowSize": {
    "kind": 264,
    "typeRef": "@epam/promo:RowSize",
    "typeValue": {
     "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">RowSize</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "RowSizeMod": {
    "kind": 263,
    "typeRef": "@epam/promo:RowSizeMod",
    "typeValue": {
     "raw": "RowSizeMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RowSizeMod</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RowSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     }
    ]
   },
   "ScrollBarsMods": {
    "kind": 263,
    "typeRef": "@epam/promo:ScrollBarsMods",
    "typeValue": {
     "raw": "ScrollBarsMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ScrollBarsMods</span> <span class=\"token punctuation\">{</span>",
      "    theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "theme",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span>"
      },
      "required": false
     }
    ]
   },
   "SizeMod": {
    "kind": 263,
    "typeRef": "@epam/promo:SizeMod",
    "typeValue": {
     "raw": "SizeMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SizeMod</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Component's size in px. This is 'logical' size, defined in how many pixels components occupies vertically. */</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "comment": [
       "Component's size in px. This is 'logical' size, defined in how many pixels components occupies vertically."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     }
    ]
   },
   "SliderMods": {
    "kind": 263,
    "typeRef": "@epam/promo:SliderMods",
    "typeValue": {
     "raw": "SliderMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SliderMods</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    }
   },
   "TextInputProps": {
    "kind": 263,
    "typeRef": "@epam/uui:TextInputProps",
    "typeValue": {
     "raw": "TextInputProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextInputProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CoreTextInputProps</span><span class=\"token punctuation\">,</span> TextInputMods <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "acceptIcon",
      "comment": [
       "Overrides accept (check) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "cancelIcon",
      "comment": [
       "Overrides cancel (cross) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "dropdownIcon",
      "comment": [
       "Overrides dropdown (chevron) icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "inputCx",
      "comment": [
       "CSS class(es) to put to the HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "renderInput",
      "comment": [
       "overrides rendering of HTML Input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> IRenderInputProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element"
      },
      "from": "@epam/uui-components:TextInputProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "onCancel",
      "comment": [
       "Enables cancel (cross) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onAccept",
      "comment": [
       "Enables accept (check) icon, and fires when the icon is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "onKeyDown",
      "comment": [
       "keydown event handler to put on the HTML input element"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "autoFocus",
      "comment": [
       "Put focus on the element, when component is mounted"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "type",
      "comment": [
       "Standard 'type' attribute to put on the HTML input element (e.g. 'password')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "autoComplete",
      "comment": [
       "Standard [autocomplete attribute]{@link https://www.w3schools.com/tags/att_input_autocomplete.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 12,
      "name": "name",
      "comment": [
       "Standard [name attribute]{@link https://www.w3schools.com/tags/att_input_name.asp}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 13,
      "name": "maxLength",
      "comment": [
       "Maximum input length in characters"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "inputMode",
      "comment": [
       "Standard [inputMode attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'tel'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'url'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'email'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'numeric'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'decimal'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'search'</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "id",
      "comment": [
       "HTML ID attribute for input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:TextInputCoreProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 17,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 18,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 19,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 20,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 21,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 22,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 23,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 24,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 25,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 26,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 27,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 28,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 29,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 30,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 31,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 32,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 33,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 34,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 35,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 36,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 37,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 38,
      "name": "onFocus",
      "comment": [
       "Called when component gets input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 39,
      "name": "onBlur",
      "comment": [
       "Called when component looses input focus"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FocusEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:ICanFocus",
      "required": false
     },
     {
      "uid": 40,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 41,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:TextInputMods",
      "required": false
     },
     {
      "uid": 42,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "TextMods": {
    "kind": 263,
    "typeRef": "@epam/promo:TextMods",
    "typeValue": {
     "raw": "TextMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span><span class=\"token punctuation\">;</span>",
      "    font<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>FontStyle<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "font",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-slab'</span>"
      },
      "required": false
     }
    ]
   },
   "TextProps": {
    "kind": 264,
    "typeRef": "@epam/promo:TextProps",
    "typeValue": {
     "raw": "TextProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiTextProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'font'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> TextMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/uui:TextMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 6,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 7,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 8,
      "name": "lineHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     },
     {
      "uid": 9,
      "name": "fontSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'10'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     },
     {
      "uid": 10,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'amber'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray5'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray60'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray80'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>"
      },
      "from": "@epam/promo:TextMods",
      "required": false
     },
     {
      "uid": 11,
      "name": "font",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-italic'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'museo-slab'</span>"
      },
      "from": "@epam/promo:TextMods",
      "required": false
     }
    ]
   },
   "TextSize": {
    "kind": 264,
    "typeRef": "@epam/promo:TextSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "TooltipMods": {
    "kind": 263,
    "typeRef": "@epam/promo:TooltipMods",
    "typeValue": {
     "raw": "TooltipMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TooltipMods</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Tooltip color.",
      "     *  'gray90' is deprecated and will be removed in future release, use 'gray' instead.",
      "     * */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "Tooltip color.",
       "  'gray90' is deprecated and will be removed in future release, use 'gray' instead."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>"
      },
      "required": false
     }
    ]
   },
   "TooltipProps": {
    "kind": 264,
    "typeRef": "@epam/promo:TooltipProps",
    "typeValue": {
     "raw": "TooltipProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TooltipProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiTooltipProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> TooltipMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "comment": [
       "React Node(s) to show tooltip for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 6,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 12,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 13,
      "name": "placement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "modifiers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>Modifier<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> object<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "openDelay",
      "comment": [
       "Should we close dropdown on click on the Toggler, if it's already open? Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "closeDelay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "closeOnMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toggler'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundary'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "boundaryElement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement <span class=\"token operator\">|</span> HTMLElement<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'clippingParents'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "closeBodyOnTogglerHidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "content",
      "comment": [
       "Content to show in the tooltip (ReactNode)"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "renderContent",
      "comment": [
       "Alternative to 'content' prop, you can pass a render function.",
       " The function will only be called when content is shown, this can save performance."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "offset",
      "comment": [
       "See [Popper docs]{@link https://popper.js.org/docs/v2/modifiers/offset/}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> OffsetsFunction <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "maxWidth",
      "comment": [
       "Max width of tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 25,
      "name": "color",
      "comment": [
       "Tooltip color.",
       "  'gray90' is deprecated and will be removed in future release, use 'gray' instead."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray90'</span>"
      },
      "from": "@epam/promo:TooltipMods",
      "required": false
     }
    ]
   },
   "VirtualListMods": {
    "kind": 263,
    "typeRef": "@epam/promo:VirtualListMods",
    "typeValue": {
     "raw": "VirtualListMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">VirtualListMods</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    }
   }
  },
  "@epam/loveship": {
   "AlertMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:AlertMods",
    "typeValue": {
     "raw": "AlertMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlertMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamPrimaryColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span>"
      },
      "required": false
     }
    ]
   },
   "AlertProps": {
    "kind": 263,
    "typeRef": "@epam/loveship:AlertProps",
    "typeValue": {
     "raw": "AlertProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlertProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Omit<span class=\"token operator\">&lt;</span>uuiAlertProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> AlertMods <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "actions",
      "comment": [
       "List of actions to display in the alert. Each action has name and 'action' callback"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> notificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClose",
      "comment": [
       "When specified, a close icon is rendered. onClose callback will be called on clicking the close icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "icon",
      "comment": [
       "An optional icon to show on the left of the alert"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "size",
      "comment": [
       "Component size. If omitted, 48 size will be used."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span>"
      },
      "from": "@epam/uui:AlertProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 6,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 7,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span>"
      },
      "from": "@epam/loveship:AlertMods",
      "required": false
     }
    ]
   },
   "BadgeMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:BadgeMods",
    "typeValue": {
     "raw": "BadgeMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BadgeMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamPrimaryColor <span class=\"token operator\">|</span> EpamAdditionalColor <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span><span class=\"token punctuation\">;</span>",
      "    shape<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>ControlShape<span class=\"token punctuation\">;</span>",
      "    fill<span class=\"token operator\">?</span><span class=\"token operator\">:</span> UuiBadgeMods<span class=\"token punctuation\">[</span><span class=\"token string\">'fill'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> UuiBadgeMods<span class=\"token punctuation\">[</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "shape",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semitransparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'transparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "required": false
     }
    ]
   },
   "BadgeProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:BadgeProps",
    "typeValue": {
     "raw": "BadgeProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">BadgeProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiBadgeProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fill'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'size'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> BadgeMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 11,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 12,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 16,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 17,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 19,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 20,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 21,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 22,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 28,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 29,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span>"
      },
      "from": "@epam/loveship:BadgeMods",
      "required": false
     },
     {
      "uid": 30,
      "name": "shape",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span>"
      },
      "from": "@epam/loveship:BadgeMods",
      "required": false
     },
     {
      "uid": 31,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'semitransparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'transparent'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/loveship:BadgeMods",
      "required": false
     },
     {
      "uid": 32,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/loveship:BadgeMods",
      "required": false
     }
    ]
   },
   "ButtonColorType": {
    "kind": 264,
    "typeRef": "@epam/loveship:ButtonColorType",
    "typeValue": {
     "raw": "<span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonColorType</span> <span class=\"token operator\">=</span> EpamPrimaryColor <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ButtonMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:ButtonMods",
    "typeValue": {
     "raw": "ButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ButtonColorType<span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span><span class=\"token punctuation\">;</span>",
      "    shape<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlShape<span class=\"token punctuation\">;</span>",
      "    fill<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FillStyle<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "shape",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     }
    ]
   },
   "ButtonProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:ButtonProps",
    "typeValue": {
     "raw": "ButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ButtonProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiButtonProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ButtonMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:ButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 20,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 21,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 22,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 29,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 30,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'outline'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'ghost'</span>"
      },
      "from": "@epam/uui:ButtonMods",
      "required": false
     },
     {
      "uid": 31,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "from": "@epam/loveship:ButtonMods",
      "required": false
     },
     {
      "uid": 32,
      "name": "shape",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span>"
      },
      "from": "@epam/loveship:ButtonMods",
      "required": false
     },
     {
      "uid": 33,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "from": "@epam/loveship:ButtonMods",
      "required": false
     }
    ]
   },
   "CheckboxMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:CheckboxMods",
    "typeValue": {
     "raw": "CheckboxMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CheckboxMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UuiCheckboxMods</span> <span class=\"token punctuation\">{</span>",
      "    theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "theme",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:CheckboxMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "from": "@epam/uui:CheckboxMods",
      "required": false
     }
    ]
   },
   "ColorMod": {
    "kind": 263,
    "typeRef": "@epam/loveship:ColorMod",
    "typeValue": {
     "raw": "ColorMod",
     "print": [
      "<span class=\"token comment\">// Mod interfaces</span>",
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ColorMod</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Component color */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "Component color"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "required": false
     }
    ]
   },
   "ControlShape": {
    "kind": 264,
    "typeRef": "@epam/loveship:ControlShape",
    "typeValue": {
     "raw": "<span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ControlShape</span> <span class=\"token operator\">=</span> <span class=\"token string\">'square'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'round'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ControlSize": {
    "kind": 264,
    "typeRef": "@epam/loveship:ControlSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">ControlSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "DropdownContainerMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:DropdownContainerMods",
    "typeValue": {
     "raw": "DropdownContainerMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DropdownContainerMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span>"
      },
      "required": false
     }
    ]
   },
   "EditMode": {
    "kind": 263,
    "typeRef": "@epam/loveship:EditMode",
    "typeValue": {
     "raw": "EditMode",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">EditMode</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">// mode?: 'form' | 'inline' | 'cell' | 'none';</span>",
      "    mode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span>"
      },
      "required": false
     }
    ]
   },
   "EpamAdditionalColor": {
    "kind": 264,
    "typeRef": "@epam/loveship:EpamAdditionalColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamAdditionalColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "EpamColor": {
    "kind": 264,
    "typeRef": "@epam/loveship:EpamColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamColor</span> <span class=\"token operator\">=</span> EpamPrimaryColor <span class=\"token operator\">|</span> EpamAdditionalColor <span class=\"token operator\">|</span> EpamGrayscaleColor<span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "EpamGrayscaleColor": {
    "kind": 264,
    "typeRef": "@epam/loveship:EpamGrayscaleColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamGrayscaleColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "EpamPrimaryColor": {
    "kind": 264,
    "typeRef": "@epam/loveship:EpamPrimaryColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EpamPrimaryColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "ErrorConfig": {
    "kind": 263,
    "typeRef": "@epam/loveship:ErrorConfig",
    "typeValue": {
     "raw": "ErrorConfig",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ErrorConfig</span> <span class=\"token punctuation\">{</span>",
      "    getInfo<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> defaultErrorInfo<span class=\"token operator\">:</span> UuiErrorInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> UuiErrorInfo<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "getInfo",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>error<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> defaultErrorInfo<span class=\"token operator\">:</span> UuiErrorInfo"
      },
      "required": false
     }
    ]
   },
   "ErrorPageProps": {
    "kind": 263,
    "typeRef": "@epam/loveship:ErrorPageProps",
    "typeValue": {
     "raw": "ErrorPageProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ErrorPageProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IHasCX</span><span class=\"token punctuation\">,</span> IHasChildren <span class=\"token punctuation\">{</span>",
      "    errorPageConfig<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ErrorConfig<span class=\"token punctuation\">;</span>",
      "    theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">;</span>",
      "    onNotificationError<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>errors<span class=\"token operator\">:</span> ApiCallInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "errorPageConfig",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> ErrorConfig"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "theme",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "onNotificationError",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>errors<span class=\"token operator\">:</span> ApiCallInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 5,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     }
    ]
   },
   "FillStyle": {
    "kind": 264,
    "typeRef": "@epam/loveship:FillStyle",
    "typeValue": {
     "raw": "<span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FillStyle</span> <span class=\"token operator\">=</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "FontMod": {
    "kind": 263,
    "typeRef": "@epam/loveship:FontMod",
    "typeValue": {
     "raw": "FontMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FontMod</span> <span class=\"token punctuation\">{</span>",
      "    font<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FontStyle<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "font",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-light'</span>"
      },
      "required": false
     }
    ]
   },
   "FontStyle": {
    "kind": 264,
    "typeRef": "@epam/loveship:FontStyle",
    "typeValue": {
     "raw": "<span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-light'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">FontStyle</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-light'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "IconButtonMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:IconButtonMods",
    "typeValue": {
     "raw": "IconButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IconButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> EpamPrimaryColor <span class=\"token operator\">|</span> EpamAdditionalColor <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span>"
      },
      "required": false
     }
    ]
   },
   "IconButtonProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:IconButtonProps",
    "typeValue": {
     "raw": "IconButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">IconButtonProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiIconButtonProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> IconButtonMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 3,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 5,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 6,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 7,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 8,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 9,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 10,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 11,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 12,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 13,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 14,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 15,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span>"
      },
      "from": "@epam/loveship:IconButtonMods",
      "required": false
     }
    ]
   },
   "IconContainerMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:IconContainerMods",
    "typeValue": {
     "raw": "IconContainerMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IconContainerMods</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** IconContainer color.",
      "     *  @deprecated Property color is deprecated and will be removed in future release. Please make icon color configuration by yourself, e.g. via cx or style prop.",
      "     * */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'carbon'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "IconContainer color.",
       "  @deprecated Property color is deprecated and will be removed in future release. Please make icon color configuration by yourself, e.g. via cx or style prop."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'carbon'</span>"
      },
      "required": false
     }
    ]
   },
   "LinkButtonMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:LinkButtonMods",
    "typeValue": {
     "raw": "LinkButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LinkButtonMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "required": false
     }
    ]
   },
   "LinkButtonProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:LinkButtonProps",
    "typeValue": {
     "raw": "LinkButtonProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">LinkButtonProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiLinkButtonProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> LinkButtonMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:LinkButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 20,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 21,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 22,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 23,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 24,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 29,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 30,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "from": "@epam/loveship:LinkButtonMods",
      "required": false
     }
    ]
   },
   "MakeMeItemProps": {
    "kind": 263,
    "typeRef": "@epam/loveship:MakeMeItemProps",
    "typeValue": {
     "raw": "MakeMeItemProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MakeMeItemProps</span> <span class=\"token punctuation\">{</span>",
      "    api<span class=\"token operator\">:</span> LazyDataSourceApi<span class=\"token operator\">&lt;</span>MakeMeUser<span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "api",
      "typeValue": {
       "raw": "MakeMeUser<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   },
   "MakeMeUser": {
    "kind": 263,
    "typeRef": "@epam/loveship:MakeMeUser",
    "typeValue": {
     "raw": "MakeMeUser",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MakeMeUser</span> <span class=\"token punctuation\">{</span>",
      "    externalId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    avatarUrl<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    jobTitle<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    email<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "externalId",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "avatarUrl",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "jobTitle",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "email",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     }
    ]
   },
   "ModalWindowMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:ModalWindowMods",
    "typeValue": {
     "raw": "ModalWindowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ModalWindowMods</span> <span class=\"token punctuation\">{</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'420'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'480'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'900'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    height<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'420'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'480'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'900'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span>"
      },
      "required": false
     }
    ]
   },
   "MultiSwitchColor": {
    "kind": 264,
    "typeRef": "@epam/loveship:MultiSwitchColor",
    "typeValue": {
     "raw": "<span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">MultiSwitchColor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "MultiSwitchMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:MultiSwitchMods",
    "typeValue": {
     "raw": "MultiSwitchMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MultiSwitchMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> MultiSwitchColor<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "required": false
     }
    ]
   },
   "MultiSwitchProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:MultiSwitchProps",
    "typeValue": {
     "raw": "MultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">MultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiMultiSwitchProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> MultiSwitchMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:SizeMod",
      "required": false
     },
     {
      "uid": 2,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 4,
      "name": "items",
      "typeValue": {
       "raw": "MultiSwitchItem<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui:MultiSwitchProps",
      "required": true
     },
     {
      "uid": 5,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 6,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 8,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 11,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 12,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "from": "@epam/loveship:MultiSwitchMods",
      "required": false
     }
    ]
   },
   "NotificationCardMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:NotificationCardMods",
    "typeValue": {
     "raw": "NotificationCardMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">NotificationCardMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">:</span> EpamPrimaryColor <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span>"
      },
      "required": true
     }
    ]
   },
   "NotificationCardProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:NotificationCardProps",
    "typeValue": {
     "raw": "NotificationCardProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">NotificationCardProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>uuiNotificationCardProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> NotificationCardMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "actions",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> NotificationAction<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui:DefaultNotificationProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 3,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui:NotificationCardProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 5,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 6,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "onSuccess",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 8,
      "name": "clearTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 9,
      "name": "refreshTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 10,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 11,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 12,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span>"
      },
      "from": "@epam/loveship:NotificationCardMods",
      "required": true
     }
    ]
   },
   "PanelMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:PanelMods",
    "typeValue": {
     "raw": "PanelMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PanelMods</span> <span class=\"token punctuation\">{</span>",
      "    shadow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    margin<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "    background<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "shadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "background",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span>"
      },
      "required": false
     }
    ]
   },
   "RadioInputMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:RadioInputMods",
    "typeValue": {
     "raw": "RadioInputMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RadioInputMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UuiRadioInputMods</span> <span class=\"token punctuation\">{</span>",
      "    theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "theme",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:RadioInputMods",
      "required": false
     }
    ]
   },
   "RadioInputProps": {
    "kind": 263,
    "typeRef": "@epam/loveship:RadioInputProps",
    "typeValue": {
     "raw": "RadioInputProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RadioInputProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RadioInputMods</span><span class=\"token punctuation\">,</span> UuiRadioInputProps <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "theme",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span>"
      },
      "from": "@epam/loveship:RadioInputMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:RadioInputMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "icon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 4,
      "name": "renderLabel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "tabIndex",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-components:RadioInputProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 8,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 9,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 11,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "label",
      "comment": [
       "Label. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasLabel",
      "required": false
     },
     {
      "uid": 17,
      "name": "getValueChangeAnalyticsEvent",
      "comment": [
       "Given a value, returns an analytics event to send when component is edited.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> AnalyticsEvent"
      },
      "from": "@epam/uui-core:IAnalyticableOnChange",
      "required": false
     },
     {
      "uid": 18,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>LabelHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLLabelElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLLabelElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "RangeSliderMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:RangeSliderMods",
    "typeValue": {
     "raw": "RangeSliderMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RangeSliderMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">types</span><span class=\"token punctuation\">.</span>ColorMod <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "Component color"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cobalt'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'lavanda'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fuchsia'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night200'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "from": "@epam/loveship:ColorMod",
      "required": false
     }
    ]
   },
   "RatingMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:RatingMods",
    "typeValue": {
     "raw": "RatingMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RatingMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span> <span class=\"token operator\">|</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> <span class=\"token number\">24</span> <span class=\"token operator\">|</span> <span class=\"token number\">30</span>"
      },
      "required": false
     }
    ]
   },
   "RichTextViewMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:RichTextViewMods",
    "typeValue": {
     "raw": "RichTextViewMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RichTextViewMods</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span>"
      },
      "required": false
     }
    ]
   },
   "RowMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:RowMods",
    "typeValue": {
     "raw": "RowMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RowMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Omit<span class=\"token operator\">&lt;</span>uuiRowMods<span class=\"token punctuation\">,</span> <span class=\"token string\">'spacing'</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>RowSizeMod <span class=\"token punctuation\">{</span>",
      "    background<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>",
      "    spacing<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'6'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>",
      "    type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'panel'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "background",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night100'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "spacing",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'panel'</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:RowSizeMod",
      "required": false
     },
     {
      "uid": 5,
      "name": "borderBottom",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 6,
      "name": "columnGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 7,
      "name": "margin",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 8,
      "name": "padding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 9,
      "name": "rowGap",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'6'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 10,
      "name": "topShadow",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     },
     {
      "uid": 11,
      "name": "vPadding",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:RowMods",
      "required": false
     }
    ]
   },
   "RowSize": {
    "kind": 264,
    "typeRef": "@epam/loveship:RowSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">RowSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "RowSizeMod": {
    "kind": 263,
    "typeRef": "@epam/loveship:RowSizeMod",
    "typeValue": {
     "raw": "RowSizeMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RowSizeMod</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> RowSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     }
    ]
   },
   "ScrollBarsMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:ScrollBarsMods",
    "typeValue": {
     "raw": "ScrollBarsMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ScrollBarsMods</span> <span class=\"token punctuation\">{</span>",
      "    theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "theme",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span>"
      },
      "required": false
     }
    ]
   },
   "SizeMod": {
    "kind": 263,
    "typeRef": "@epam/loveship:SizeMod",
    "typeValue": {
     "raw": "SizeMod",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SizeMod</span> <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ControlSize<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "required": false
     }
    ]
   },
   "SliderRatingProps": {
    "kind": 263,
    "typeRef": "@epam/loveship:SliderRatingProps",
    "typeValue": {
     "raw": "SliderRatingProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span>",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SliderRatingProps<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IEditable<span class=\"token operator\">&lt;</span>TValue<span class=\"token operator\">></span></span><span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    renderTooltip<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>",
      "    from<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>",
      "    withoutNa<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>",
      "    getScaleIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Icon<span class=\"token punctuation\">;</span>",
      "    getHandlerIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Icon<span class=\"token punctuation\">;</span>",
      "    tooltipColor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "renderTooltip",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> React<span class=\"token punctuation\">.</span>ReactNode"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "from",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token number\">2</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "withoutNa",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "getScaleIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Icon"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "getHandlerIcon",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Icon"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "tooltipColor",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "TValue"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 9,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> TValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 10,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 12,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 13,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 14,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 15,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 16,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "SnackbarCardProps": {
    "kind": 263,
    "typeRef": "@epam/loveship:SnackbarCardProps",
    "typeValue": {
     "raw": "SnackbarCardProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SnackbarCardProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">INotification</span><span class=\"token punctuation\">,</span> IHasChildren<span class=\"token punctuation\">,</span> IHasRawProps<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>",
      "    snackType<span class=\"token operator\">:</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'danger'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "snackType",
      "typeValue": {
       "raw": "<span class=\"token string\">'success'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'warning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'info'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'danger'</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 3,
      "name": "onSuccess",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 4,
      "name": "clearTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 5,
      "name": "refreshTimer",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": false
     },
     {
      "uid": 6,
      "name": "id",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 7,
      "name": "key",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:INotification",
      "required": true
     },
     {
      "uid": 8,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 9,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     }
    ]
   },
   "TabButtonMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:TabButtonMods",
    "typeValue": {
     "raw": "TabButtonMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TabButtonMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UuiTabButtonProps</span> <span class=\"token punctuation\">{</span>",
      "    theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "theme",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dark'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "from": "@epam/uui:TabButtonMods",
      "required": false
     },
     {
      "uid": 3,
      "name": "withNotify",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui:TabButtonMods",
      "required": false
     },
     {
      "uid": 4,
      "name": "clearIcon",
      "comment": [
       "Icon for clear value button (usually cross)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "captionCX",
      "comment": [
       "CSS classes to put on the caption"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-components:ButtonProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "dropdownIcon",
      "comment": [
       "Icon for drop-down toggler"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 7,
      "name": "dropdownIconPosition",
      "comment": [
       "Position of the dropdown icon ('left' of 'right')"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 8,
      "name": "countPosition",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 9,
      "name": "count",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:ButtonCoreProps",
      "required": false
     },
     {
      "uid": 10,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 11,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 12,
      "name": "link",
      "comment": [
       "Link object to redirect to for SPA-redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Link"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 13,
      "name": "href",
      "comment": [
       "Href (URL) to redirect to, for non-SPA redirects"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 14,
      "name": "isLinkActive",
      "comment": [
       "Highlights component to show that link is active (browser is displaying the page to which link is pointing)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 15,
      "name": "target",
      "comment": [
       "Controls where the link should be opened"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_blank'</span>"
      },
      "from": "@epam/uui-core:ICanRedirect",
      "required": false
     },
     {
      "uid": 16,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 17,
      "name": "icon",
      "comment": [
       "Icon can be an React element (usually an SVG element)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Icon"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 18,
      "name": "iconPosition",
      "comment": [
       "Position of the icon (left of right)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 19,
      "name": "onIconClick",
      "comment": [
       "Click handler for the icon"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IHasIcon",
      "required": false
     },
     {
      "uid": 20,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 21,
      "name": "tabIndex",
      "comment": [
       "Controls the order of keyboard navigation between components"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:IHasTabIndex",
      "required": false
     },
     {
      "uid": 22,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ButtonHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLButtonElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "caption",
      "comment": [
       "Caption. Can be a string, or React.Elements. Certain components supports minimal markup (<b>,<i>,<a>) in captions."
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasCaption",
      "required": false
     },
     {
      "uid": 24,
      "name": "onClear",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IBasicPickerToggler",
      "required": false
     },
     {
      "uid": 25,
      "name": "isOpen",
      "comment": [
       "When component acts as dropdown, indicate that dropdown is open"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 26,
      "name": "isDropdown",
      "comment": [
       "Enabled dropdown mode - component can toggle dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 27,
      "name": "toggleDropdownOpening",
      "comment": [
       "Called when associated dropdown should open or close"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 28,
      "name": "isInteractedOutside",
      "comment": [
       "Called when component is interacted outside, to close the dropdown"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 29,
      "name": "ref",
      "comment": [
       "Component's ref"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>RefObject<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IDropdownToggler",
      "required": false
     },
     {
      "uid": 30,
      "name": "placeholder",
      "comment": [
       "Placeholder to display when empty"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:IHasPlaceholder",
      "required": false
     },
     {
      "uid": 31,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLButtonElement <span class=\"token operator\">|</span> HTMLAnchorElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     }
    ]
   },
   "TagMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:TagMods",
    "typeValue": {
     "raw": "TagMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TagMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UuiTagMods</span> <span class=\"token punctuation\">{</span>",
      "    fill<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>FillStyle<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "fill",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:TagMods",
      "required": false
     }
    ]
   },
   "TextInputMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:TextInputMods",
    "typeValue": {
     "raw": "TextInputMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextInputMods</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">types</span><span class=\"token punctuation\">.</span>IHasEditMode <span class=\"token punctuation\">{</span>",
      "    size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>ControlSize <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'60'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "mode",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'form'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cell'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'inline'</span>"
      },
      "from": "@epam/uui:IHasEditMode",
      "required": false
     }
    ]
   },
   "TextMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:TextMods",
    "typeValue": {
     "raw": "TextMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TextMods</span> <span class=\"token punctuation\">{</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span><span class=\"token punctuation\">;</span>",
      "    font<span class=\"token operator\">?</span><span class=\"token operator\">:</span> types<span class=\"token punctuation\">.</span>FontStyle<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "font",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-light'</span>"
      },
      "required": false
     }
    ]
   },
   "TextProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:TextProps",
    "typeValue": {
     "raw": "TextProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiTextProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'font'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> TextMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "size",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>"
      },
      "from": "@epam/uui:TextMods",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:IHasChildren",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "onClick",
      "comment": [
       "Called when component is clicked"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IClickable",
      "required": false
     },
     {
      "uid": 6,
      "name": "clickAnalyticsEvent",
      "comment": [
       "An analytics event to send (via AnalyticsContext) when component is clicked.",
       " See [AnalyticsContext](@link https://uui.epam.com/documents?id=analyticsContext&mode=doc&skin=UUI4_promo&category=contexts)."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:IAnalyticableClick",
      "required": false
     },
     {
      "uid": 7,
      "name": "forwardedRef",
      "comment": [
       "this ref is passed to the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">:</span> HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>MutableRefObject<span class=\"token operator\">&lt;</span>HTMLDivElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasForwardedRef",
      "required": false
     },
     {
      "uid": 8,
      "name": "lineHeight",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     },
     {
      "uid": 9,
      "name": "fontSize",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'12'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'14'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'16'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'10'</span>"
      },
      "from": "@epam/uui:TextSettings",
      "required": false
     },
     {
      "uid": 10,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sky'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'grass'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sun'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night300'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night400'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night500'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night600'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night50'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night700'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night800'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "from": "@epam/loveship:TextMods",
      "required": false
     },
     {
      "uid": 11,
      "name": "font",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-semibold'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'sans-light'</span>"
      },
      "from": "@epam/loveship:TextMods",
      "required": false
     }
    ]
   },
   "TextSize": {
    "kind": 264,
    "typeRef": "@epam/loveship:TextSize",
    "typeValue": {
     "raw": "<span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TextSize</span> <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'18'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'24'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'30'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'36'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'42'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'48'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "TooltipMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:TooltipMods",
    "typeValue": {
     "raw": "TooltipMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TooltipMods</span> <span class=\"token punctuation\">{</span>",
      "    <span class=\"token comment\">/** Tooltip color.",
      "     *  'night900' is deprecated and will be removed in future release, use 'gray' instead.",
      "     * */</span>",
      "    color<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "color",
      "comment": [
       "Tooltip color.",
       "  'night900' is deprecated and will be removed in future release, use 'gray' instead."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "required": false
     }
    ]
   },
   "TooltipProps": {
    "kind": 264,
    "typeRef": "@epam/loveship:TooltipProps",
    "typeValue": {
     "raw": "TooltipProps",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">TooltipProps</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>UuiTooltipProps<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> TooltipMods<span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "onClose",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "children",
      "comment": [
       "React Node(s) to show tooltip for"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactElement<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>JSXElementConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">>></span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactFragment <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>ReactPortal"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 3,
      "name": "cx",
      "comment": [
       "CSS class(es) to put on component's root. See {@link https://github.com/JedWatson/classnames#usage} for details"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> ClassDictionary <span class=\"token operator\">|</span> ClassArray"
      },
      "from": "@epam/uui-core:IHasCX",
      "required": false
     },
     {
      "uid": 4,
      "name": "rawProps",
      "comment": [
       "Any HTML attributes (native or 'data-') to put on the underlying component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> React<span class=\"token punctuation\">.</span>HTMLAttributes<span class=\"token operator\">&lt;</span>HTMLDivElement<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> Record<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-core:IHasRawProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "isDisabled",
      "comment": [
       "Disable editing, and visually de-emphasize value of the component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IDisableable",
      "required": false
     },
     {
      "uid": 6,
      "name": "value",
      "comment": [
       "The current value of component"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 7,
      "name": "onValueChange",
      "comment": [
       "Called when value needs to be changed (usually due to user interaction)"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-core:IEditable",
      "required": true
     },
     {
      "uid": 8,
      "name": "isInvalid",
      "comment": [
       "True if component contains invalid input"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 9,
      "name": "validationMessage",
      "comment": [
       "Message describing why the value is invalid"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 10,
      "name": "validationProps",
      "comment": [
       "If T is a complex value (object or array), this property contains validation states of inner items"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> ICanBeInvalid<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>"
      },
      "from": "@epam/uui-core:ICanBeInvalid",
      "required": false
     },
     {
      "uid": 11,
      "name": "isReadonly",
      "comment": [
       "Disable editing. Unlike isDisabled, keep component's value readable."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeReadonly",
      "required": false
     },
     {
      "uid": 12,
      "name": "isRequired",
      "comment": [
       "Marks that component's value is required"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:ICanBeRequired",
      "required": false
     },
     {
      "uid": 13,
      "name": "placement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'auto-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-end'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-start'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left-end'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 14,
      "name": "modifiers",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>Modifier<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> object<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 15,
      "name": "openDelay",
      "comment": [
       "Should we close dropdown on click on the Toggler, if it's already open? Default is true."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 16,
      "name": "closeDelay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 17,
      "name": "closeOnMouseLeave",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token string\">'toggler'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'boundary'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 18,
      "name": "portalTarget",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 19,
      "name": "boundaryElement",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> HTMLElement <span class=\"token operator\">|</span> HTMLElement<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token string\">'clippingParents'</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 20,
      "name": "closeBodyOnTogglerHidden",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "from": "@epam/uui-core:DropdownProps",
      "required": false
     },
     {
      "uid": 21,
      "name": "content",
      "comment": [
       "Content to show in the tooltip (ReactNode)"
      ],
      "typeValue": {
       "raw": "<span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 22,
      "name": "renderContent",
      "comment": [
       "Alternative to 'content' prop, you can pass a render function.",
       " The function will only be called when content is shown, this can save performance."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 23,
      "name": "offset",
      "comment": [
       "See [Popper docs]{@link https://popper.js.org/docs/v2/modifiers/offset/}"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> OffsetsFunction <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">]</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 24,
      "name": "maxWidth",
      "comment": [
       "Max width of tooltip"
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-core:TooltipCoreProps",
      "required": false
     },
     {
      "uid": 25,
      "name": "color",
      "comment": [
       "Tooltip color.",
       "  'night900' is deprecated and will be removed in future release, use 'gray' instead."
      ],
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'fire'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'gray'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'night900'</span>"
      },
      "from": "@epam/loveship:TooltipMods",
      "required": false
     }
    ]
   },
   "VirtualListMods": {
    "kind": 263,
    "typeRef": "@epam/loveship:VirtualListMods",
    "typeValue": {
     "raw": "VirtualListMods",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">VirtualListMods</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    }
   }
  },
  "@epam/uui-editor": {
   "EditorValue": {
    "kind": 264,
    "typeRef": "@epam/uui-editor:EditorValue",
    "typeValue": {
     "raw": "<span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> Value",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">EditorValue</span> <span class=\"token operator\">=</span> Value <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "IImageElement": {
    "kind": 263,
    "typeRef": "@epam/uui-editor:IImageElement",
    "typeValue": {
     "raw": "IImageElement",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IImageElement</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TElement</span><span class=\"token punctuation\">,</span> PlateProps<span class=\"token punctuation\">,</span> SlateProps <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "children",
      "typeValue": {
       "raw": "TDescendant<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts:TElement",
      "required": true
     },
     {
      "uid": 2,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts:TElement",
      "required": true
     },
     {
      "uid": 3,
      "name": "url",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-editor:PlateProps",
      "required": true
     },
     {
      "uid": 4,
      "name": "align",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "from": "@epam/uui-editor:PlateProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "from": "@epam/uui-editor:PlateProps",
      "required": false
     },
     {
      "uid": 6,
      "name": "data",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> imageSize<span class=\"token operator\">:</span> SlateImgAlign<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> Partial<span class=\"token operator\">&lt;</span>File<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> imageSize<span class=\"token operator\">:</span> FileUploadResponse<span class=\"token operator\">></span>"
      },
      "from": "@epam/uui-editor:SlateProps",
      "required": true
     }
    ]
   },
   "LinkElement": {
    "kind": 263,
    "typeRef": "@epam/uui-editor:LinkElement",
    "typeValue": {
     "raw": "LinkElement",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LinkElement</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TElement</span> <span class=\"token punctuation\">{</span>",
      "    href<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    type<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "href",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "type",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "children",
      "typeValue": {
       "raw": "TDescendant<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "from": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts:TElement",
      "required": true
     }
    ]
   },
   "PlaceholderPluginParams": {
    "kind": 263,
    "typeRef": "@epam/uui-editor:PlaceholderPluginParams",
    "typeValue": {
     "raw": "PlaceholderPluginParams",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PlaceholderPluginParams</span> <span class=\"token punctuation\">{</span>",
      "    items<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>",
      "        name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "        <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>",
      "    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "items",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     }
    ]
   },
   "PlateImgAlign": {
    "kind": 264,
    "typeRef": "@epam/uui-editor:PlateImgAlign",
    "typeValue": {
     "raw": "<span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">PlateImgAlign</span> <span class=\"token operator\">=</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "PlateProps": {
    "kind": 263,
    "typeRef": "@epam/uui-editor:PlateProps",
    "typeValue": {
     "raw": "PlateProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PlateProps</span> <span class=\"token punctuation\">{</span>",
      "    url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    align<span class=\"token operator\">?</span><span class=\"token operator\">:</span> PlateImgAlign<span class=\"token punctuation\">;</span>",
      "    width<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "url",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "align",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "SlateImageSize": {
    "kind": 264,
    "typeRef": "@epam/uui-editor:SlateImageSize",
    "typeValue": {
     "raw": "SlateImageSize",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SlateImageSize</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>",
      "    width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "width",
      "typeValue": {
       "raw": "<span class=\"token builtin\">number</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": true
     }
    ]
   },
   "SlateImgAlign": {
    "kind": 264,
    "typeRef": "@epam/uui-editor:SlateImgAlign",
    "typeValue": {
     "raw": "<span class=\"token string\">'align-left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'align-right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'align-center'</span>",
     "print": [
      "<span class=\"token keyword\">type</span> <span class=\"token class-name\">SlateImgAlign</span> <span class=\"token operator\">=</span> <span class=\"token string\">'align-left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'align-right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'align-center'</span><span class=\"token punctuation\">;</span>"
     ]
    }
   },
   "SlateProps": {
    "kind": 263,
    "typeRef": "@epam/uui-editor:SlateProps",
    "typeValue": {
     "raw": "SlateProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SlateProps</span> <span class=\"token punctuation\">{</span>",
      "    data<span class=\"token operator\">:</span> SlateImageData<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "data",
      "typeValue": {
       "raw": "<span class=\"token punctuation\">{</span> imageSize<span class=\"token operator\">:</span> SlateImgAlign<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> Partial<span class=\"token operator\">&lt;</span>File<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> imageSize<span class=\"token operator\">:</span> FileUploadResponse<span class=\"token operator\">></span>"
      },
      "required": true
     }
    ]
   }
  },
  "@epam/uui-timeline": {
   "BaseTimelineCanvasComponentProps": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
    "typeValue": {
     "raw": "BaseTimelineCanvasComponentProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseTimelineCanvasComponentProps</span> <span class=\"token punctuation\">{</span>",
      "    className<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    timelineController<span class=\"token operator\">:</span> TimelineController<span class=\"token punctuation\">;</span>",
      "    renderOnTop<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> CanvasRenderingContext2D<span class=\"token punctuation\">,</span> t<span class=\"token operator\">:</span> TimelineTransform<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "className",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "timelineController",
      "typeValue": {
       "raw": "TimelineController"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "renderOnTop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> CanvasRenderingContext2D<span class=\"token punctuation\">,</span> t<span class=\"token operator\">:</span> TimelineTransform<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "required": false
     }
    ]
   },
   "Item": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:Item",
    "typeValue": {
     "raw": "Item",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">{</span>",
      "    from<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>",
      "    to<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    fillType<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'shaded'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span><span class=\"token punctuation\">;</span>",
      "    opacity<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    height<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    priority<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    minPixPerDay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    maxPxPerDay<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "from",
      "typeValue": {
       "raw": "Date"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "to",
      "typeValue": {
       "raw": "Date"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "fillType",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token string\">'shaded'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'solid'</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "opacity",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 6,
      "name": "height",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 7,
      "name": "priority",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 8,
      "name": "minPixPerDay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 9,
      "name": "maxPxPerDay",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "Stage": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:Stage",
    "typeValue": {
     "raw": "Stage",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Stage</span> <span class=\"token punctuation\">{</span>",
      "    eventName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "    startDate<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>",
      "    endDate<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>",
      "    color<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "eventName",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "name",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     },
     {
      "uid": 3,
      "name": "startDate",
      "typeValue": {
       "raw": "Date"
      },
      "required": true
     },
     {
      "uid": 4,
      "name": "endDate",
      "typeValue": {
       "raw": "Date"
      },
      "required": true
     },
     {
      "uid": 5,
      "name": "color",
      "typeValue": {
       "raw": "<span class=\"token builtin\">string</span>"
      },
      "required": true
     }
    ]
   },
   "TimelineControllerOptions": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:TimelineControllerOptions",
    "typeValue": {
     "raw": "TimelineControllerOptions",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimelineControllerOptions</span> <span class=\"token punctuation\">{</span>",
      "    isHoliday<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>date<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    minWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    minVisibleDate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>",
      "    minScale<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "    maxScale<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isHoliday",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>date<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "minWidth",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "minVisibleDate",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> Date"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "minScale",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 5,
      "name": "maxScale",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     }
    ]
   },
   "TimelineEventsBarProps": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:TimelineEventsBarProps",
    "typeValue": {
     "raw": "TimelineEventsBarProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimelineEventsBarProps</span> <span class=\"token punctuation\">{</span>",
      "    timelineController<span class=\"token operator\">:</span> TimelineController<span class=\"token punctuation\">;</span>",
      "    stages<span class=\"token operator\">:</span> Stage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "timelineController",
      "typeValue": {
       "raw": "TimelineController"
      },
      "required": true
     },
     {
      "uid": 2,
      "name": "stages",
      "typeValue": {
       "raw": "Stage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>"
      },
      "required": true
     }
    ]
   },
   "TimelineGridProps": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:TimelineGridProps",
    "typeValue": {
     "raw": "TimelineGridProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimelineGridProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseTimelineCanvasComponentProps</span> <span class=\"token punctuation\">{</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "className",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
      "required": false
     },
     {
      "uid": 2,
      "name": "timelineController",
      "typeValue": {
       "raw": "TimelineController"
      },
      "from": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
      "required": true
     },
     {
      "uid": 3,
      "name": "renderOnTop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> CanvasRenderingContext2D<span class=\"token punctuation\">,</span> t<span class=\"token operator\">:</span> TimelineTransform<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
      "required": false
     }
    ]
   },
   "TimelineNavProps": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:TimelineNavProps",
    "typeValue": {
     "raw": "TimelineNavProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimelineNavProps</span> <span class=\"token punctuation\">{</span>",
      "    timelineController<span class=\"token operator\">:</span> TimelineController<span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "timelineController",
      "typeValue": {
       "raw": "TimelineController"
      },
      "required": true
     }
    ]
   },
   "TimelineScaleProps": {
    "kind": 263,
    "typeRef": "@epam/uui-timeline:TimelineScaleProps",
    "typeValue": {
     "raw": "TimelineScaleProps",
     "print": [
      "<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TimelineScaleProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseTimelineCanvasComponentProps</span> <span class=\"token punctuation\">{</span>",
      "    isDraggable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    isScaleChangeOnWheel<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>",
      "    shiftPercent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>",
      "<span class=\"token punctuation\">}</span>"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "isDraggable",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 2,
      "name": "isScaleChangeOnWheel",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">true</span>"
      },
      "required": false
     },
     {
      "uid": 3,
      "name": "shiftPercent",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>"
      },
      "required": false
     },
     {
      "uid": 4,
      "name": "className",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span>"
      },
      "from": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
      "required": false
     },
     {
      "uid": 5,
      "name": "timelineController",
      "typeValue": {
       "raw": "TimelineController"
      },
      "from": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
      "required": true
     },
     {
      "uid": 6,
      "name": "renderOnTop",
      "typeValue": {
       "raw": "<span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> CanvasRenderingContext2D<span class=\"token punctuation\">,</span> t<span class=\"token operator\">:</span> TimelineTransform<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>"
      },
      "from": "@epam/uui-timeline:BaseTimelineCanvasComponentProps",
      "required": false
     }
    ]
   }
  }
 },
 "references": {
  "../../../../node_modules/typescript/lib/lib.dom.d.ts:Blob": {
   "module": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "typeName": {
    "name": "Blob",
    "nameFull": "Blob"
   },
   "src": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "external": true
  },
  "../../../../node_modules/typescript/lib/lib.dom.d.ts:File": {
   "module": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "typeName": {
    "name": "File",
    "nameFull": "File"
   },
   "src": "../../../../node_modules/typescript/lib/lib.dom.d.ts",
   "external": true
  },
  "@epam/loveship:AlertMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "AlertMods",
    "nameFull": "AlertMods"
   },
   "src": "loveship/components/overlays/Alert.tsx"
  },
  "@epam/loveship:AlertProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "src": "loveship/components/overlays/Alert.tsx"
  },
  "@epam/loveship:BadgeMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "src": "loveship/components/widgets/Badge.tsx"
  },
  "@epam/loveship:BadgeProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "src": "loveship/components/widgets/Badge.tsx"
  },
  "@epam/loveship:ButtonColorType": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonColorType",
    "nameFull": "ButtonColorType"
   },
   "src": "loveship/components/buttons/Button.tsx"
  },
  "@epam/loveship:ButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "src": "loveship/components/buttons/Button.tsx"
  },
  "@epam/loveship:ButtonProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "loveship/components/buttons/Button.tsx"
  },
  "@epam/loveship:CheckboxMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "CheckboxMods",
    "nameFull": "CheckboxMods"
   },
   "src": "loveship/components/inputs/Checkbox.tsx"
  },
  "@epam/loveship:ColorMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ControlShape": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ControlShape",
    "nameFull": "ControlShape"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ControlSize": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:DropdownContainerMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "src": "loveship/components/overlays/DropdownContainer.tsx"
  },
  "@epam/loveship:EditMode": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EditMode",
    "nameFull": "EditMode"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamAdditionalColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamAdditionalColor",
    "nameFull": "EpamAdditionalColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamColor",
    "nameFull": "EpamColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamGrayscaleColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamGrayscaleColor",
    "nameFull": "EpamGrayscaleColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:EpamPrimaryColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "EpamPrimaryColor",
    "nameFull": "EpamPrimaryColor"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ErrorConfig": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ErrorConfig",
    "nameFull": "ErrorConfig"
   },
   "src": "loveship/components/app/ErrorHandler.tsx"
  },
  "@epam/loveship:ErrorPageProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ErrorPageProps",
    "nameFull": "ErrorPageProps"
   },
   "src": "loveship/components/app/ErrorHandler.tsx"
  },
  "@epam/loveship:FillStyle": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:FontMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FontMod",
    "nameFull": "FontMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:FontStyle": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:IconButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "src": "loveship/components/buttons/IconButton.tsx"
  },
  "@epam/loveship:IconButtonProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "src": "loveship/components/buttons/IconButton.tsx"
  },
  "@epam/loveship:IconContainerMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "IconContainerMods",
    "nameFull": "IconContainerMods"
   },
   "src": "loveship/components/layout/IconContainer.tsx"
  },
  "@epam/loveship:LinkButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "src": "loveship/components/buttons/LinkButton.tsx"
  },
  "@epam/loveship:LinkButtonProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "src": "loveship/components/buttons/LinkButton.tsx"
  },
  "@epam/loveship:MakeMeItemProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MakeMeItemProps",
    "nameFull": "MakeMeItemProps"
   },
   "src": "loveship/components/dev/MakeMeItem.tsx"
  },
  "@epam/loveship:MakeMeUser": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MakeMeUser",
    "nameFull": "MakeMeUser"
   },
   "src": "loveship/components/dev/MakeMeItem.tsx"
  },
  "@epam/loveship:ModalWindowMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "src": "loveship/components/overlays/ModalWindow.tsx"
  },
  "@epam/loveship:MultiSwitchColor": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchColor",
    "nameFull": "MultiSwitchColor"
   },
   "src": "loveship/components/inputs/MultiSwitch.tsx"
  },
  "@epam/loveship:MultiSwitchMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchMods",
    "nameFull": "MultiSwitchMods"
   },
   "src": "loveship/components/inputs/MultiSwitch.tsx"
  },
  "@epam/loveship:MultiSwitchProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "src": "loveship/components/inputs/MultiSwitch.tsx"
  },
  "@epam/loveship:NotificationCardMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "NotificationCardMods",
    "nameFull": "NotificationCardMods"
   },
   "src": "loveship/components/overlays/NotificationCard.tsx"
  },
  "@epam/loveship:NotificationCardProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "src": "loveship/components/overlays/NotificationCard.tsx"
  },
  "@epam/loveship:PanelMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "src": "loveship/components/layout/FlexItems/Panel.tsx"
  },
  "@epam/loveship:RadioInputMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RadioInputMods",
    "nameFull": "RadioInputMods"
   },
   "src": "loveship/components/inputs/RadioInput.tsx"
  },
  "@epam/loveship:RadioInputProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "src": "loveship/components/inputs/RadioInput.tsx"
  },
  "@epam/loveship:RangeSliderMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RangeSliderMods",
    "nameFull": "RangeSliderMods"
   },
   "src": "loveship/components/inputs/Slider/RangeSlider.tsx"
  },
  "@epam/loveship:RatingMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RatingMods",
    "nameFull": "RatingMods"
   },
   "src": "loveship/components/inputs/Rating.tsx"
  },
  "@epam/loveship:RichTextViewMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "src": "loveship/components/typography/RichTextView.tsx"
  },
  "@epam/loveship:RowMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "src": "loveship/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/loveship:RowSize": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:RowSizeMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:ScrollBarsMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "ScrollBarsMods",
    "nameFull": "ScrollBarsMods"
   },
   "src": "loveship/components/layout/ScrollBars.tsx"
  },
  "@epam/loveship:SizeMod": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:SliderRatingProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SliderRatingProps",
    "nameFull": "SliderRatingProps<TValue>"
   },
   "src": "loveship/components/inputs/SliderRating.tsx"
  },
  "@epam/loveship:SnackbarCardProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "SnackbarCardProps",
    "nameFull": "SnackbarCardProps"
   },
   "src": "loveship/components/overlays/SnackbarCard.tsx"
  },
  "@epam/loveship:TabButtonMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TabButtonMods",
    "nameFull": "TabButtonMods"
   },
   "src": "loveship/components/buttons/TabButton.tsx"
  },
  "@epam/loveship:TagMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TagMods",
    "nameFull": "TagMods"
   },
   "src": "loveship/components/widgets/Tag.tsx"
  },
  "@epam/loveship:TextInputMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextInputMods",
    "nameFull": "TextInputMods"
   },
   "src": "loveship/components/inputs/TextInput.tsx"
  },
  "@epam/loveship:TextMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "src": "loveship/components/typography/Text.tsx"
  },
  "@epam/loveship:TextProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "loveship/components/typography/Text.tsx"
  },
  "@epam/loveship:TextSize": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "src": "loveship/components/types.ts"
  },
  "@epam/loveship:TooltipMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "src": "loveship/components/overlays/Tooltip.tsx"
  },
  "@epam/loveship:TooltipProps": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "loveship/components/overlays/Tooltip.tsx"
  },
  "@epam/loveship:VirtualListMods": {
   "module": "@epam/loveship",
   "typeName": {
    "name": "VirtualListMods",
    "nameFull": "VirtualListMods"
   },
   "src": "loveship/components/layout/VirtualList.tsx"
  },
  "@epam/promo:AlertMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "AlertMods",
    "nameFull": "AlertMods"
   },
   "src": "epam-promo/components/overlays/Alert.tsx"
  },
  "@epam/promo:AlertProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "src": "epam-promo/components/overlays/Alert.tsx"
  },
  "@epam/promo:BadgeMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "src": "epam-promo/components/widgets/Badge.tsx"
  },
  "@epam/promo:BadgeProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "src": "epam-promo/components/widgets/Badge.tsx"
  },
  "@epam/promo:ButtonColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonColor",
    "nameFull": "ButtonColor"
   },
   "src": "epam-promo/components/buttons/Button.tsx"
  },
  "@epam/promo:ButtonMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "src": "epam-promo/components/buttons/Button.tsx"
  },
  "@epam/promo:ButtonProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "epam-promo/components/buttons/Button.tsx"
  },
  "@epam/promo:ColorMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ControlShape": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ControlShape",
    "nameFull": "ControlShape"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ControlSize": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:DropdownContainerMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "src": "epam-promo/components/overlays/DropdownContainer.tsx"
  },
  "@epam/promo:EpamAdditionalColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamAdditionalColor",
    "nameFull": "EpamAdditionalColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:EpamColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamColor",
    "nameFull": "EpamColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:EpamGrayscaleColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamGrayscaleColor",
    "nameFull": "EpamGrayscaleColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:EpamPrimaryColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "EpamPrimaryColor",
    "nameFull": "EpamPrimaryColor"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ErrorHandlerProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ErrorHandlerProps",
    "nameFull": "ErrorHandlerProps"
   },
   "src": "epam-promo/components/errors/ErrorHandler.tsx"
  },
  "@epam/promo:FillStyle": {
   "module": "@epam/promo",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:FontMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "FontMod",
    "nameFull": "FontMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:FontStyle": {
   "module": "@epam/promo",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:IHasEditMode": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IHasEditMode",
    "nameFull": "IHasEditMode"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:IconButtonMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "src": "epam-promo/components/buttons/IconButton.tsx"
  },
  "@epam/promo:IconButtonProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "src": "epam-promo/components/buttons/IconButton.tsx"
  },
  "@epam/promo:IconColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconColor",
    "nameFull": "IconColor"
   },
   "src": "epam-promo/components/buttons/IconButton.tsx"
  },
  "@epam/promo:IconContainerColors": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconContainerColors",
    "nameFull": "IconContainerColors"
   },
   "src": "epam-promo/components/layout/IconContainer.tsx"
  },
  "@epam/promo:IconContainerMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "IconContainerMods",
    "nameFull": "IconContainerMods"
   },
   "src": "epam-promo/components/layout/IconContainer.tsx"
  },
  "@epam/promo:LinkButtonMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "src": "epam-promo/components/buttons/LinkButton.tsx"
  },
  "@epam/promo:LinkButtonProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "src": "epam-promo/components/buttons/LinkButton.tsx"
  },
  "@epam/promo:ModalWindowMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "src": "epam-promo/components/overlays/ModalWindow.tsx"
  },
  "@epam/promo:MultiSwitchColor": {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchColor",
    "nameFull": "MultiSwitchColor"
   },
   "src": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  "@epam/promo:MultiSwitchMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchMods",
    "nameFull": "MultiSwitchMods"
   },
   "src": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  "@epam/promo:MultiSwitchProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "src": "epam-promo/components/inputs/MultiSwitch.tsx"
  },
  "@epam/promo:NotificationCardMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "NotificationCardMods",
    "nameFull": "NotificationCardMods"
   },
   "src": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  "@epam/promo:NotificationCardProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "src": "epam-promo/components/overlays/NotificationCard.tsx"
  },
  "@epam/promo:PanelMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "src": "epam-promo/components/layout/FlexItems/Panel.tsx"
  },
  "@epam/promo:RatingMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RatingMods",
    "nameFull": "RatingMods"
   },
   "src": "epam-promo/components/inputs/Rating.tsx"
  },
  "@epam/promo:RichTextViewMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "src": "epam-promo/components/typography/RichTextView.tsx"
  },
  "@epam/promo:RowMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "src": "epam-promo/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/promo:RowSize": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:RowSizeMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:ScrollBarsMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "ScrollBarsMods",
    "nameFull": "ScrollBarsMods"
   },
   "src": "epam-promo/components/layout/ScrollBars.tsx"
  },
  "@epam/promo:SizeMod": {
   "module": "@epam/promo",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:SliderMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "SliderMods",
    "nameFull": "SliderMods"
   },
   "src": "epam-promo/components/inputs/Slider/Slider.tsx"
  },
  "@epam/promo:TextMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "src": "epam-promo/components/typography/Text.tsx"
  },
  "@epam/promo:TextProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "epam-promo/components/typography/Text.tsx"
  },
  "@epam/promo:TextSize": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "src": "epam-promo/components/types.ts"
  },
  "@epam/promo:TooltipMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "src": "epam-promo/components/overlays/Tooltip.tsx"
  },
  "@epam/promo:TooltipProps": {
   "module": "@epam/promo",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "epam-promo/components/overlays/Tooltip.tsx"
  },
  "@epam/promo:VirtualListMods": {
   "module": "@epam/promo",
   "typeName": {
    "name": "VirtualListMods",
    "nameFull": "VirtualListMods"
   },
   "src": "epam-promo/components/layout/VirtualList.tsx"
  },
  "@epam/uui-components:AccordionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AccordionProps",
    "nameFull": "AccordionProps"
   },
   "src": "uui-components/src/layout/Accordion.tsx"
  },
  "@epam/uui-components:AccordionState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AccordionState",
    "nameFull": "AccordionState"
   },
   "src": "uui-components/src/layout/Accordion.tsx"
  },
  "@epam/uui-components:AdaptiveItemProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AdaptiveItemProps",
    "nameFull": "AdaptiveItemProps<T>"
   },
   "src": "uui-components/src/adaptivePanel/types.ts"
  },
  "@epam/uui-components:AdaptivePanelProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AdaptivePanelProps",
    "nameFull": "AdaptivePanelProps"
   },
   "src": "uui-components/src/adaptivePanel/types.ts"
  },
  "@epam/uui-components:AnchorProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AnchorProps",
    "nameFull": "AnchorProps"
   },
   "src": "uui-components/src/navigation/Anchor.tsx"
  },
  "@epam/uui-components:ArrayPickerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ArrayPickerProps",
    "nameFull": "ArrayPickerProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:AvatarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AvatarProps",
    "nameFull": "AvatarProps"
   },
   "src": "uui-components/src/widgets/Avatar.tsx"
  },
  "@epam/uui-components:AvatarStackProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "AvatarStackProps",
    "nameFull": "AvatarStackProps"
   },
   "src": "uui-components/src/widgets/AvatarStack.tsx"
  },
  "@epam/uui-components:BaseRatingProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseRatingProps",
    "nameFull": "BaseRatingProps<TValue>"
   },
   "src": "uui-components/src/inputs/Rating/BaseRating.tsx"
  },
  "@epam/uui-components:BaseTimePickerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseTimePickerProps",
    "nameFull": "BaseTimePickerProps"
   },
   "src": "uui-components/src/inputs/BaseTimePicker.tsx"
  },
  "@epam/uui-components:BaseVirtualListProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BaseVirtualListProps",
    "nameFull": "BaseVirtualListProps<ScrollContainer>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:BlockerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BlockerProps",
    "nameFull": "BlockerProps"
   },
   "src": "uui-components/src/layout/Blocker.tsx"
  },
  "@epam/uui-components:BurgerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "BurgerProps",
    "nameFull": "BurgerProps"
   },
   "src": "uui-components/src/navigation/MainMenu/Burger/Burger.tsx"
  },
  "@epam/uui-components:ButtonBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ButtonBaseProps",
    "nameFull": "ButtonBaseProps"
   },
   "src": "uui-components/src/buttons/ButtonBase.tsx"
  },
  "@epam/uui-components:ButtonProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "uui-components/src/buttons/Button.tsx"
  },
  "@epam/uui-components:CalendarPresetsProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CalendarPresetsProps",
    "nameFull": "CalendarPresetsProps"
   },
   "src": "uui-components/src/inputs/DatePicker/CalendarPresets.tsx"
  },
  "@epam/uui-components:CalendarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CalendarProps",
    "nameFull": "CalendarProps<TSelection>"
   },
   "src": "uui-components/src/inputs/DatePicker/Calendar.tsx"
  },
  "@epam/uui-components:CarouselProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CarouselProps",
    "nameFull": "CarouselProps"
   },
   "src": "uui-components/src/widgets/Carousel.tsx"
  },
  "@epam/uui-components:CarouselState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CarouselState",
    "nameFull": "CarouselState"
   },
   "src": "uui-components/src/widgets/Carousel.tsx"
  },
  "@epam/uui-components:CheckboxGroupProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CheckboxGroupProps",
    "nameFull": "CheckboxGroupProps<TValue>"
   },
   "src": "uui-components/src/layout/CheckboxGroup.tsx"
  },
  "@epam/uui-components:CheckboxProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "CheckboxProps",
    "nameFull": "CheckboxProps"
   },
   "src": "uui-components/src/inputs/Checkbox.tsx"
  },
  "@epam/uui-components:ColumnsConfigurationRowProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ColumnsConfigurationRowProps",
    "nameFull": "ColumnsConfigurationRowProps"
   },
   "src": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  "@epam/uui-components:ControlGroupProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ControlGroupProps",
    "nameFull": "ControlGroupProps"
   },
   "src": "uui-components/src/layout/ControlGroup.tsx"
  },
  "@epam/uui-components:ControlIconProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ControlIconProps",
    "nameFull": "ControlIconProps"
   },
   "src": "uui-components/src/layout/IconContainer.tsx"
  },
  "@epam/uui-components:DataSourceKeyboardParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DataSourceKeyboardParams",
    "nameFull": "DataSourceKeyboardParams"
   },
   "src": "uui-components/src/pickers/KeyboardUtils.tsx"
  },
  "@epam/uui-components:DataTableSelectionProviderProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DataTableSelectionProviderProps",
    "nameFull": "DataTableSelectionProviderProps<TItem, TId, TFilter>"
   },
   "src": "uui-components/src/table/tableCellsSelection/DataTableSelectionProvider.tsx"
  },
  "@epam/uui-components:DatePickerBodyBaseOptions": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerBodyBaseOptions",
    "nameFull": "DatePickerBodyBaseOptions"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:DatePickerBodyBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerBodyBaseProps",
    "nameFull": "DatePickerBodyBaseProps<TSelection>"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:DatePickerState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DatePickerState",
    "nameFull": "DatePickerState"
   },
   "src": "uui-components/src/inputs/DatePicker/BaseDatePicker.tsx"
  },
  "@epam/uui-components:DayProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DayProps",
    "nameFull": "DayProps"
   },
   "src": "uui-components/src/inputs/DatePicker/Day.tsx"
  },
  "@epam/uui-components:DragHandleProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DragHandleProps",
    "nameFull": "DragHandleProps"
   },
   "src": "uui-components/src/dnd/DragHandle.tsx"
  },
  "@epam/uui-components:DropSpotRenderParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropSpotRenderParams",
    "nameFull": "DropSpotRenderParams"
   },
   "src": "uui-components/src/widgets/DropSpot.tsx"
  },
  "@epam/uui-components:DropSpotState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropSpotState",
    "nameFull": "DropSpotState"
   },
   "src": "uui-components/src/widgets/DropSpot.tsx"
  },
  "@epam/uui-components:DropdownContainerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "DropdownContainerProps",
    "nameFull": "DropdownContainerProps"
   },
   "src": "uui-components/src/overlays/DropdownContainer.tsx"
  },
  "@epam/uui-components:FlexSpacerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "FlexSpacerProps",
    "nameFull": "FlexSpacerProps"
   },
   "src": "uui-components/src/layout/flexItems/FlexSpacer.tsx"
  },
  "@epam/uui-components:GeneralAccordionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "GeneralAccordionProps",
    "nameFull": "GeneralAccordionProps"
   },
   "src": "uui-components/src/layout/Accordion.tsx"
  },
  "@epam/uui-components:GroupedDataColumnProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "GroupedDataColumnProps",
    "nameFull": "GroupedDataColumnProps"
   },
   "src": "uui-components/src/table/columnsConfigurationModal/types.ts"
  },
  "@epam/uui-components:HeaderCellContentProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "HeaderCellContentProps",
    "nameFull": "HeaderCellContentProps"
   },
   "src": "uui-components/src/table/DataTableHeaderCell.tsx"
  },
  "@epam/uui-components:IProgressBarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IProgressBarProps",
    "nameFull": "IProgressBarProps"
   },
   "src": "uui-components/src/widgets/Loaders/ProgressBar.tsx"
  },
  "@epam/uui-components:IRenderInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IRenderInputProps",
    "nameFull": "IRenderInputProps"
   },
   "src": "uui-components/src/inputs/TextInput.tsx"
  },
  "@epam/uui-components:IScrollSpyApi": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IScrollSpyApi",
    "nameFull": "IScrollSpyApi"
   },
   "src": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  "@epam/uui-components:IScrollSpyProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IScrollSpyProps",
    "nameFull": "IScrollSpyProps"
   },
   "src": "uui-components/src/navigation/ScrollSpy.tsx"
  },
  "@epam/uui-components:IconButtonBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "IconButtonBaseProps",
    "nameFull": "IconButtonBaseProps"
   },
   "src": "uui-components/src/buttons/IconButton.tsx"
  },
  "@epam/uui-components:InputAddonProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "InputAddonProps",
    "nameFull": "InputAddonProps"
   },
   "src": "uui-components/src/inputs/InputAddon.tsx"
  },
  "@epam/uui-components:LabeledInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "LabeledInputProps",
    "nameFull": "LabeledInputProps"
   },
   "src": "uui-components/src/layout/LabeledInput.tsx"
  },
  "@epam/uui-components:MainMenuCustomElementProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuCustomElementProps",
    "nameFull": "MainMenuCustomElementProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenuCustomElement.tsx"
  },
  "@epam/uui-components:MainMenuDropdownProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuDropdownProps",
    "nameFull": "MainMenuDropdownProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  "@epam/uui-components:MainMenuLogoProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuLogoProps",
    "nameFull": "MainMenuLogoProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenuLogo.tsx"
  },
  "@epam/uui-components:MainMenuProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MainMenuProps",
    "nameFull": "MainMenuProps"
   },
   "src": "uui-components/src/navigation/MainMenu/MainMenu.tsx"
  },
  "@epam/uui-components:MonthSelectionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "MonthSelectionProps",
    "nameFull": "MonthSelectionProps"
   },
   "src": "uui-components/src/inputs/DatePicker/MonthSelection.tsx"
  },
  "@epam/uui-components:NumericInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "NumericInputProps",
    "nameFull": "NumericInputProps"
   },
   "src": "uui-components/src/inputs/NumericInput.tsx"
  },
  "@epam/uui-components:PaginatorParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PaginatorParams",
    "nameFull": "PaginatorParams"
   },
   "src": "uui-components/src/widgets/Paginator.tsx"
  },
  "@epam/uui-components:PaginatorProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PaginatorProps",
    "nameFull": "PaginatorProps"
   },
   "src": "uui-components/src/widgets/Paginator.tsx"
  },
  "@epam/uui-components:PickerBindingHelper": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingHelper",
    "nameFull": "PickerBindingHelper<TItem, TId>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:PickerBindingProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingProps",
    "nameFull": "PickerBindingProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:PickerBindingValueType": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBindingValueType",
    "nameFull": "PickerBindingValueType"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:PickerBodyBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBodyBaseProps",
    "nameFull": "PickerBodyBaseProps"
   },
   "src": "uui-components/src/pickers/PickerBodyBase.tsx"
  },
  "@epam/uui-components:PickerBodyValue": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerBodyValue",
    "nameFull": "PickerBodyValue<TSelection>"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:PickerInputBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerInputBaseProps",
    "nameFull": "PickerInputBaseProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerListBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerListBaseProps",
    "nameFull": "PickerListBaseProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerModalArrayProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalArrayProps",
    "nameFull": "PickerModalArrayProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerModalOptions": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalOptions",
    "nameFull": "PickerModalOptions<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerModalScalarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerModalScalarProps",
    "nameFull": "PickerModalScalarProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:PickerTogglerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PickerTogglerProps",
    "nameFull": "PickerTogglerProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/PickerToggler.tsx"
  },
  "@epam/uui-components:PortalProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PortalProps",
    "nameFull": "PortalProps"
   },
   "src": "uui-components/src/overlays/Portal.tsx"
  },
  "@epam/uui-components:PositionValues": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "PositionValues",
    "nameFull": "PositionValues"
   },
   "src": "uui-components/src/layout/ScrollBars.tsx"
  },
  "@epam/uui-components:RadioGroupItem": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioGroupItem",
    "nameFull": "RadioGroupItem<TValue>"
   },
   "src": "uui-components/src/layout/RadioGroup.tsx"
  },
  "@epam/uui-components:RadioGroupProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioGroupProps",
    "nameFull": "RadioGroupProps<TValue>"
   },
   "src": "uui-components/src/layout/RadioGroup.tsx"
  },
  "@epam/uui-components:RadioInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "src": "uui-components/src/inputs/RadioInput.tsx"
  },
  "@epam/uui-components:RangeSliderState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RangeSliderState",
    "nameFull": "RangeSliderState"
   },
   "src": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  "@epam/uui-components:RangeSliderValue": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RangeSliderValue",
    "nameFull": "RangeSliderValue"
   },
   "src": "uui-components/src/inputs/Slider/RangeSlider.tsx"
  },
  "@epam/uui-components:RatingProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RatingProps",
    "nameFull": "RatingProps"
   },
   "src": "uui-components/src/inputs/Rating/Rating.tsx"
  },
  "@epam/uui-components:RichTextViewProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "RichTextViewProps",
    "nameFull": "RichTextViewProps"
   },
   "src": "uui-components/src/RichTextView.tsx"
  },
  "@epam/uui-components:ScrollbarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ScrollbarProps",
    "nameFull": "ScrollbarProps"
   },
   "src": "uui-components/src/layout/ScrollBars.tsx"
  },
  "@epam/uui-components:ScrollbarsApi": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ScrollbarsApi",
    "nameFull": "ScrollbarsApi"
   },
   "src": "uui-components/src/layout/ScrollBars.tsx"
  },
  "@epam/uui-components:SelectionContextState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SelectionContextState",
    "nameFull": "SelectionContextState<TItem, TId, TFilter>"
   },
   "src": "uui-components/src/table/tableCellsSelection/DataTableSelectionContext.ts"
  },
  "@epam/uui-components:SelectionManager": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SelectionManager",
    "nameFull": "SelectionManager<TItem, TId, TFilter>"
   },
   "src": "uui-components/src/table/tableCellsSelection/types.ts"
  },
  "@epam/uui-components:SinglePickerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SinglePickerProps",
    "nameFull": "SinglePickerProps<TId, TItem>"
   },
   "src": "uui-components/src/pickers/bindingHelpers.ts"
  },
  "@epam/uui-components:SliderBaseProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SliderBaseProps",
    "nameFull": "SliderBaseProps<TSelection>"
   },
   "src": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  "@epam/uui-components:SliderBaseState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SliderBaseState",
    "nameFull": "SliderBaseState"
   },
   "src": "uui-components/src/inputs/Slider/SliderBase.tsx"
  },
  "@epam/uui-components:SnackbarProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SnackbarProps",
    "nameFull": "SnackbarProps"
   },
   "src": "uui-components/src/overlays/Snackbar.tsx"
  },
  "@epam/uui-components:SpinnerProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SpinnerProps",
    "nameFull": "SpinnerProps"
   },
   "src": "uui-components/src/widgets/Spinner.tsx"
  },
  "@epam/uui-components:SwitchProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "SwitchProps",
    "nameFull": "SwitchProps"
   },
   "src": "uui-components/src/inputs/Switch.tsx"
  },
  "@epam/uui-components:TextAreaProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextAreaProps",
    "nameFull": "TextAreaProps"
   },
   "src": "uui-components/src/inputs/TextArea.tsx"
  },
  "@epam/uui-components:TextInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextInputProps",
    "nameFull": "TextInputProps"
   },
   "src": "uui-components/src/inputs/TextInput.tsx"
  },
  "@epam/uui-components:TextProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "uui-components/src/Text.tsx"
  },
  "@epam/uui-components:TimePickerBodyProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TimePickerBodyProps",
    "nameFull": "TimePickerBodyProps"
   },
   "src": "uui-components/src/inputs/TimePickerBody.tsx"
  },
  "@epam/uui-components:TooltipProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "uui-components/src/overlays/Tooltip.tsx"
  },
  "@epam/uui-components:TooltipState": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TooltipState",
    "nameFull": "TooltipState"
   },
   "src": "uui-components/src/overlays/Tooltip.tsx"
  },
  "@epam/uui-components:TreeListItem": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TreeListItem",
    "nameFull": "TreeListItem"
   },
   "src": "uui-components/src/layout/Tree.tsx"
  },
  "@epam/uui-components:TreeProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "TreeProps",
    "nameFull": "TreeProps<TItem>"
   },
   "src": "uui-components/src/layout/Tree.tsx"
  },
  "@epam/uui-components:UsePickerInputProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerInputProps",
    "nameFull": "UsePickerInputProps<TItem, TId, TProps>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:UsePickerListProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerListProps",
    "nameFull": "UsePickerListProps<TItem, TId, TProps>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:UsePickerModalProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "UsePickerModalProps",
    "nameFull": "UsePickerModalProps<TItem, TId>"
   },
   "src": "uui-components/src/pickers/hooks/types.ts"
  },
  "@epam/uui-components:ViewType": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "ViewType",
    "nameFull": "ViewType"
   },
   "src": "uui-components/src/inputs/DatePicker/DatePickerBodyBase.tsx"
  },
  "@epam/uui-components:VirtualListProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListProps",
    "nameFull": "VirtualListProps<List, ScrollContainer>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:VirtualListRenderRows": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListRenderRows",
    "nameFull": "VirtualListRenderRows<List>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:VirtualListRenderRowsParams": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "VirtualListRenderRowsParams",
    "nameFull": "VirtualListRenderRowsParams<List>"
   },
   "src": "uui-components/src/layout/VirtualList.tsx"
  },
  "@epam/uui-components:YearSelectionProps": {
   "module": "@epam/uui-components",
   "typeName": {
    "name": "YearSelectionProps",
    "nameFull": "YearSelectionProps"
   },
   "src": "uui-components/src/inputs/DatePicker/YearSelection.tsx"
  },
  "@epam/uui-core:AcceptDropParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AcceptDropParams",
    "nameFull": "AcceptDropParams<TSrcData, TDstData>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:AnalyticsEvent": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AnalyticsEvent",
    "nameFull": "AnalyticsEvent"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:ApiCallErrorType": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallErrorType",
    "nameFull": "ApiCallErrorType"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:ApiCallInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallInfo",
    "nameFull": "ApiCallInfo"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiCallOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiCallOptions",
    "nameFull": "ApiCallOptions"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiContextProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiContextProps",
    "nameFull": "ApiContextProps"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:ApiExtensions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiExtensions",
    "nameFull": "ApiExtensions<TApi>"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiRecoveryReason": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiRecoveryReason",
    "nameFull": "ApiRecoveryReason"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApiStatus": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApiStatus",
    "nameFull": "ApiStatus"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ApplyFilterOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplyFilterOptions",
    "nameFull": "ApplyFilterOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:ApplySearchOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplySearchOptions",
    "nameFull": "ApplySearchOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:ApplySortOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ApplySortOptions",
    "nameFull": "ApplySortOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:ArrayDataSourceProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayDataSourceProps",
    "nameFull": "ArrayDataSourceProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/ArrayDataSource.tsx"
  },
  "@epam/uui-core:ArrayElement": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayElement",
    "nameFull": "ArrayElement<ArrayType>"
   },
   "src": "uui-core/src/data/lenses/types.ts"
  },
  "@epam/uui-core:ArrayListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayListViewProps",
    "nameFull": "ArrayListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  "@epam/uui-core:ArrayPickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ArrayPickerProps",
    "nameFull": "ArrayPickerProps<TId, TItem>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:AsyncDataSourceProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AsyncDataSourceProps",
    "nameFull": "AsyncDataSourceProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/AsyncDataSource.tsx"
  },
  "@epam/uui-core:AsyncListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "AsyncListViewProps",
    "nameFull": "AsyncListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/AsyncListView.ts"
  },
  "@epam/uui-core:BaseArrayListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseArrayListViewProps",
    "nameFull": "BaseArrayListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/ArrayListView.ts"
  },
  "@epam/uui-core:BaseDatePickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseDatePickerProps",
    "nameFull": "BaseDatePickerProps"
   },
   "src": "uui-core/src/types/components/datePicker/BaseDatePicker.ts"
  },
  "@epam/uui-core:BaseListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseListViewProps",
    "nameFull": "BaseListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:BaseRangeDatePickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BaseRangeDatePickerProps",
    "nameFull": "BaseRangeDatePickerProps"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:BatchPromiseOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BatchPromiseOptions",
    "nameFull": "BatchPromiseOptions"
   },
   "src": "uui-core/src/helpers/batch.ts"
  },
  "@epam/uui-core:BlockTypes": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "BlockTypes",
    "nameFull": "BlockTypes"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:ButtonBaseCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonBaseCoreProps",
    "nameFull": "ButtonBaseCoreProps"
   },
   "src": "uui-core/src/types/components/Button.ts"
  },
  "@epam/uui-core:ButtonCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonCoreProps",
    "nameFull": "ButtonCoreProps"
   },
   "src": "uui-core/src/types/components/Button.ts"
  },
  "@epam/uui-core:ButtonSemanticProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ButtonSemanticProps",
    "nameFull": "ButtonSemanticProps"
   },
   "src": "uui-core/src/types/components/Button.ts"
  },
  "@epam/uui-core:CX": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CX",
    "nameFull": "CX"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:CascadeSelection": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CascadeSelection",
    "nameFull": "CascadeSelection"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:CheckboxCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CheckboxCoreProps",
    "nameFull": "CheckboxCoreProps"
   },
   "src": "uui-core/src/types/components/Checkbox.ts"
  },
  "@epam/uui-core:ClassValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ClassValue",
    "nameFull": "ClassValue"
   },
   "src": "uui-core/src/helpers/cx.ts"
  },
  "@epam/uui-core:ColumnsConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ColumnsConfig",
    "nameFull": "ColumnsConfig"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:CommonContexts": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CommonContexts",
    "nameFull": "CommonContexts<TApi, TAppContext>"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ContextProviderProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ContextProviderProps",
    "nameFull": "ContextProviderProps<TApi, TAppContext>"
   },
   "src": "uui-core/src/services/ContextProvider.tsx"
  },
  "@epam/uui-core:CustomFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "CustomFilterConfig",
    "nameFull": "CustomFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataColumnProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataColumnProps",
    "nameFull": "DataColumnProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataQuery": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQuery",
    "nameFull": "DataQuery<T>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataQueryFilter": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryFilter",
    "nameFull": "DataQueryFilter<T>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataQueryFilterCondition": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryFilterCondition",
    "nameFull": "DataQueryFilterCondition<TField>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataQueryRange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataQueryRange",
    "nameFull": "DataQueryRange"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:DataRowOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataRowOptions",
    "nameFull": "DataRowOptions<TItem, TId>"
   },
   "src": "uui-core/src/types/dataRows.ts"
  },
  "@epam/uui-core:DataRowPathItem": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataRowPathItem",
    "nameFull": "DataRowPathItem<TId, TItem>"
   },
   "src": "uui-core/src/types/dataRows.ts"
  },
  "@epam/uui-core:DataRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataRowProps",
    "nameFull": "DataRowProps<TItem, TId>"
   },
   "src": "uui-core/src/types/dataRows.ts"
  },
  "@epam/uui-core:DataSourceListCounts": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceListCounts",
    "nameFull": "DataSourceListCounts"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:DataSourceListProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceListProps",
    "nameFull": "DataSourceListProps"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:DataSourceState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataSourceState",
    "nameFull": "DataSourceState<TFilter, TId>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:DataTableCellOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableCellOptions",
    "nameFull": "DataTableCellOptions<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableCellProps",
    "nameFull": "DataTableCellProps<TItem, TId, TCellValue>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableColumnsConfigOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableColumnsConfigOptions",
    "nameFull": "DataTableColumnsConfigOptions"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableConfigModalParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableConfigModalParams",
    "nameFull": "DataTableConfigModalParams"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableHeaderCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableHeaderCellProps",
    "nameFull": "DataTableHeaderCellProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableHeaderRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableHeaderRowProps",
    "nameFull": "DataTableHeaderRowProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableRowProps",
    "nameFull": "DataTableRowProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableSelectedCellData": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableSelectedCellData",
    "nameFull": "DataTableSelectedCellData<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DataTableState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DataTableState",
    "nameFull": "DataTableState<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DatePickerCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePickerCoreProps",
    "nameFull": "DatePickerCoreProps"
   },
   "src": "uui-core/src/types/components/datePicker/DatePicker.ts"
  },
  "@epam/uui-core:DatePickerFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DatePickerFilterConfig",
    "nameFull": "DatePickerFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:DndActorProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndActorProps",
    "nameFull": "DndActorProps<TSrcData, TDstData>"
   },
   "src": "uui-core/src/services/dnd/DndActor.tsx"
  },
  "@epam/uui-core:DndActorRenderParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndActorRenderParams",
    "nameFull": "DndActorRenderParams"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DndContextState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DndContextState",
    "nameFull": "DndContextState"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:DragGhostProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DragGhostProps",
    "nameFull": "DragGhostProps"
   },
   "src": "uui-core/src/services/dnd/DragGhost.tsx"
  },
  "@epam/uui-core:DropParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropParams",
    "nameFull": "DropParams<TSrcData, TDstData>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DropPosition": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropPosition",
    "nameFull": "DropPosition"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DropPositionOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropPositionOptions",
    "nameFull": "DropPositionOptions<__type>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:DropdownBodyProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownBodyProps",
    "nameFull": "DropdownBodyProps"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:DropdownPlacement": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownPlacement",
    "nameFull": "DropdownPlacement"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:DropdownProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownProps",
    "nameFull": "DropdownProps"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:DropdownState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "DropdownState",
    "nameFull": "DropdownState"
   },
   "src": "uui-core/src/types/components/Dropdown.ts"
  },
  "@epam/uui-core:FileUploadOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FileUploadOptions",
    "nameFull": "FileUploadOptions"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:FileUploadResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FileUploadResponse",
    "nameFull": "FileUploadResponse"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:FilterConfigBase": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterConfigBase",
    "nameFull": "FilterConfigBase<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:FilterPredicate": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterPredicate",
    "nameFull": "FilterPredicate<TField>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:FilterPredicateName": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FilterPredicateName",
    "nameFull": "FilterPredicateName"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:FiltersConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FiltersConfig",
    "nameFull": "FiltersConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:FlexCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexCellProps",
    "nameFull": "FlexCellProps"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:FlexRowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FlexRowProps",
    "nameFull": "FlexRowProps"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:FormProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormProps",
    "nameFull": "FormProps<T>"
   },
   "src": "uui-core/src/data/forms/Form.tsx"
  },
  "@epam/uui-core:FormSaveResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormSaveResponse",
    "nameFull": "FormSaveResponse<T>"
   },
   "src": "uui-core/src/data/forms/Form.tsx"
  },
  "@epam/uui-core:FormState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "FormState",
    "nameFull": "FormState<T>"
   },
   "src": "uui-core/src/data/forms/useForm.ts"
  },
  "@epam/uui-core:IAdaptiveItem": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAdaptiveItem",
    "nameFull": "IAdaptiveItem"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IAnalyticableClick": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticableClick",
    "nameFull": "IAnalyticableClick"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IAnalyticableOnChange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticableOnChange",
    "nameFull": "IAnalyticableOnChange<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IAnalyticsContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticsContext",
    "nameFull": "IAnalyticsContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IAnalyticsListener": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IAnalyticsListener",
    "nameFull": "IAnalyticsListener"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IApiContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IApiContext",
    "nameFull": "IApiContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IBaseContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IBaseContext",
    "nameFull": "IBaseContext<TState>"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IBasicPickerToggler": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IBasicPickerToggler",
    "nameFull": "IBasicPickerToggler"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:ICanBeFixed": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeFixed",
    "nameFull": "ICanBeFixed"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ICanBeInvalid": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeInvalid",
    "nameFull": "ICanBeInvalid"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanBeReadonly": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeReadonly",
    "nameFull": "ICanBeReadonly"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanBeRequired": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanBeRequired",
    "nameFull": "ICanBeRequired"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanFocus": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanFocus",
    "nameFull": "ICanFocus<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICanRedirect": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICanRedirect",
    "nameFull": "ICanRedirect"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ICheckable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ICheckable",
    "nameFull": "ICheckable"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IClickable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IClickable",
    "nameFull": "IClickable"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IColumnConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IColumnConfig",
    "nameFull": "IColumnConfig"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IContextProviderSsrProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IContextProviderSsrProps",
    "nameFull": "IContextProviderSsrProps<TApi, TAppContext>"
   },
   "src": "uui-core/src/ssr/useUuiServicesSsr.tsx"
  },
  "@epam/uui-core:IDataSource": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDataSource",
    "nameFull": "IDataSource<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:IDataSourceView": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDataSourceView",
    "nameFull": "IDataSourceView<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:IDisableable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDisableable",
    "nameFull": "IDisableable"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IDndActor": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDndActor",
    "nameFull": "IDndActor<TSrcData, TDstData>"
   },
   "src": "uui-core/src/types/dnd.ts"
  },
  "@epam/uui-core:IDndContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDndContext",
    "nameFull": "IDndContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IDropdownBodyProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDropdownBodyProps",
    "nameFull": "IDropdownBodyProps"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:IDropdownToggler": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IDropdownToggler",
    "nameFull": "IDropdownToggler"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:IEditable": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IEditable",
    "nameFull": "IEditable<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IEditableDebouncerOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IEditableDebouncerOptions",
    "nameFull": "IEditableDebouncerOptions"
   },
   "src": "uui-core/src/helpers/IEditableDebouncer.ts"
  },
  "@epam/uui-core:IEditableDebouncerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IEditableDebouncerProps",
    "nameFull": "IEditableDebouncerProps<T>"
   },
   "src": "uui-core/src/helpers/IEditableDebouncer.ts"
  },
  "@epam/uui-core:IErrorContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IErrorContext",
    "nameFull": "IErrorContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterConfig",
    "nameFull": "IFilterConfig"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IFilterItemBodyProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterItemBodyProps",
    "nameFull": "IFilterItemBodyProps<TFilter>"
   },
   "src": "uui-core/src/types/components/filterItemBody.ts"
  },
  "@epam/uui-core:IFilterPredicate": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFilterPredicate",
    "nameFull": "IFilterPredicate"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IFormApi": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IFormApi",
    "nameFull": "IFormApi<T>"
   },
   "src": "uui-core/src/data/forms/Form.tsx"
  },
  "@epam/uui-core:IHasCX": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasCX",
    "nameFull": "IHasCX"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasCaption": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasCaption",
    "nameFull": "IHasCaption"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasChildren": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasChildren",
    "nameFull": "IHasChildren"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasDirection": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasDirection",
    "nameFull": "IHasDirection"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasForwardedRef": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasForwardedRef",
    "nameFull": "IHasForwardedRef<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasIcon": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasIcon",
    "nameFull": "IHasIcon"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasLabel": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasLabel",
    "nameFull": "IHasLabel"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasPlaceholder": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasPlaceholder",
    "nameFull": "IHasPlaceholder"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasRawProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasRawProps",
    "nameFull": "IHasRawProps<T>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHasTabIndex": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHasTabIndex",
    "nameFull": "IHasTabIndex"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IHistory4": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IHistory4",
    "nameFull": "IHistory4"
   },
   "src": "uui-core/src/services/routing/HistoryAdaptedRouter.tsx"
  },
  "@epam/uui-core:ILayoutContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILayoutContext",
    "nameFull": "ILayoutContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ILens": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILens",
    "nameFull": "ILens<TFocused>"
   },
   "src": "uui-core/src/data/lenses/types.ts"
  },
  "@epam/uui-core:ILockContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ILockContext",
    "nameFull": "ILockContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IMap": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IMap",
    "nameFull": "IMap<TKey, TValue>"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:IModal": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IModal",
    "nameFull": "IModal<TResult>"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:IModalContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IModalContext",
    "nameFull": "IModalContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:INotification": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "INotification",
    "nameFull": "INotification"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:INotificationContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "INotificationContext",
    "nameFull": "INotificationContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:IPickerToggler": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IPickerToggler",
    "nameFull": "IPickerToggler<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:IPresetsApi": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IPresetsApi",
    "nameFull": "IPresetsApi<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:IProcessRequest": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IProcessRequest",
    "nameFull": "IProcessRequest"
   },
   "src": "uui-core/src/services/ApiContext.ts"
  },
  "@epam/uui-core:IRouter6": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IRouter6",
    "nameFull": "IRouter6"
   },
   "src": "uui-core/src/services/routing/interfaces/IRouter6.ts"
  },
  "@epam/uui-core:IRouterContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IRouterContext",
    "nameFull": "IRouterContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:ISkin": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ISkin",
    "nameFull": "ISkin"
   },
   "src": "uui-core/src/services/SkinContext.ts"
  },
  "@epam/uui-core:ITablePreset": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITablePreset",
    "nameFull": "ITablePreset<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ITableState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITableState",
    "nameFull": "ITableState<TFilter, TViewState>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ITree": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ITree",
    "nameFull": "ITree<TItem, TId>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:IUserSettingsContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IUserSettingsContext",
    "nameFull": "IUserSettingsContext"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:Icon": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Icon",
    "nameFull": "Icon<any>"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:IdAndName": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "IdAndName",
    "nameFull": "IdAndName"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:ItemsComparator": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ItemsComparator",
    "nameFull": "ItemsComparator<TItem>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:LabeledInputCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LabeledInputCoreProps",
    "nameFull": "LabeledInputCoreProps"
   },
   "src": "uui-core/src/types/components/LabeledInput.tsx"
  },
  "@epam/uui-core:LayoutLayer": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LayoutLayer",
    "nameFull": "LayoutLayer"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:LazyDataSourceApi": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApi",
    "nameFull": "LazyDataSourceApi<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequest": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequest",
    "nameFull": "LazyDataSourceApiRequest<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequestContext": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequestContext",
    "nameFull": "LazyDataSourceApiRequestContext<TItem, TId>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequestOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequestOptions",
    "nameFull": "LazyDataSourceApiRequestOptions<TItem, TFilter>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiRequestRange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiRequestRange",
    "nameFull": "LazyDataSourceApiRequestRange"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceApiResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceApiResponse",
    "nameFull": "LazyDataSourceApiResponse<TItem>"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:LazyDataSourceProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyDataSourceProps",
    "nameFull": "LazyDataSourceProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/LazyDataSource.tsx"
  },
  "@epam/uui-core:LazyListViewProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyListViewProps",
    "nameFull": "LazyListViewProps<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/LazyListView.ts"
  },
  "@epam/uui-core:LazyLoadedMapLoadCallback": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LazyLoadedMapLoadCallback",
    "nameFull": "LazyLoadedMapLoadCallback<TKey, TValue>"
   },
   "src": "uui-core/src/helpers/LazyLoadedMap.ts"
  },
  "@epam/uui-core:Link": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Link",
    "nameFull": "Link"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:ListApiResponse": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ListApiResponse",
    "nameFull": "ListApiResponse<TItem>"
   },
   "src": "uui-core/src/data/processing/ListApiCache.tsx"
  },
  "@epam/uui-core:ListApiSettings": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ListApiSettings",
    "nameFull": "ListApiSettings<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/ListApiCache.tsx"
  },
  "@epam/uui-core:LoadTreeOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LoadTreeOptions",
    "nameFull": "LoadTreeOptions<TItem, TId, TFilter>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:LoadingStatus": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "LoadingStatus",
    "nameFull": "LoadingStatus"
   },
   "src": "uui-core/src/helpers/LazyLoadedMap.ts"
  },
  "@epam/uui-core:Metadata": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "Metadata",
    "nameFull": "Metadata<T>"
   },
   "src": "uui-core/src/types/validation.ts"
  },
  "@epam/uui-core:ModalBlockerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalBlockerProps",
    "nameFull": "ModalBlockerProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:ModalComponentProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalComponentProps",
    "nameFull": "ModalComponentProps<TParameters, TResult>"
   },
   "src": "uui-core/src/services/ModalContext.ts"
  },
  "@epam/uui-core:ModalFooterCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalFooterCoreProps",
    "nameFull": "ModalFooterCoreProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:ModalHeaderCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalHeaderCoreProps",
    "nameFull": "ModalHeaderCoreProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:ModalOperation": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalOperation",
    "nameFull": "ModalOperation"
   },
   "src": "uui-core/src/services/ModalContext.ts"
  },
  "@epam/uui-core:ModalWindowProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ModalWindowProps",
    "nameFull": "ModalWindowProps"
   },
   "src": "uui-core/src/types/components/Modals.ts"
  },
  "@epam/uui-core:NotificationOperation": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NotificationOperation",
    "nameFull": "NotificationOperation"
   },
   "src": "uui-core/src/services/NotificationContext.tsx"
  },
  "@epam/uui-core:NotificationParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NotificationParams",
    "nameFull": "NotificationParams"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:NumericFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "NumericFilterConfig",
    "nameFull": "NumericFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:PickerBaseOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBaseOptions",
    "nameFull": "PickerBaseOptions<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerBaseProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBaseProps",
    "nameFull": "PickerBaseProps<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerBindingProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBindingProps",
    "nameFull": "PickerBindingProps<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerBindingValueType": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerBindingValueType",
    "nameFull": "PickerBindingValueType"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:PickerFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerFilterConfig",
    "nameFull": "PickerFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:PickerFooterProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "PickerFooterProps",
    "nameFull": "PickerFooterProps<TItem, TId>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:RangeDatePickerCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerCoreProps",
    "nameFull": "RangeDatePickerCoreProps"
   },
   "src": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerFilterConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerFilterConfig",
    "nameFull": "RangeDatePickerFilterConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:RangeDatePickerInputType": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerInputType",
    "nameFull": "RangeDatePickerInputType"
   },
   "src": "uui-core/src/types/components/datePicker/RangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerPresetValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerPresetValue",
    "nameFull": "RangeDatePickerPresetValue"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerPresets": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerPresets",
    "nameFull": "RangeDatePickerPresets"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:RangeDatePickerValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RangeDatePickerValue",
    "nameFull": "RangeDatePickerValue"
   },
   "src": "uui-core/src/types/components/datePicker/BaseRangeDatePicker.ts"
  },
  "@epam/uui-core:RenderCellProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RenderCellProps",
    "nameFull": "RenderCellProps<TItem, TId>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:RenderEditorProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "RenderEditorProps",
    "nameFull": "RenderEditorProps<TItem, TId, TCellValue>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:ScrollAlign": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ScrollAlign",
    "nameFull": "ScrollAlign"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:ScrollToConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ScrollToConfig",
    "nameFull": "ScrollToConfig"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:SearchResultItem": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SearchResultItem",
    "nameFull": "SearchResultItem<TItem>"
   },
   "src": "uui-core/src/data/processing/views/LazyListView.ts"
  },
  "@epam/uui-core:SinglePickerProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SinglePickerProps",
    "nameFull": "SinglePickerProps<TId, TItem>"
   },
   "src": "uui-core/src/types/pickers.ts"
  },
  "@epam/uui-core:SkinContextComponentProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SkinContextComponentProps",
    "nameFull": "SkinContextComponentProps<TProps, TSemanticProps>"
   },
   "src": "uui-core/src/services/SkinContext.ts"
  },
  "@epam/uui-core:SortDirection": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SortDirection",
    "nameFull": "SortDirection"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:SortingOption": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SortingOption",
    "nameFull": "SortingOption<T>"
   },
   "src": "uui-core/src/types/dataQuery.ts"
  },
  "@epam/uui-core:SpinnerCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "SpinnerCoreProps",
    "nameFull": "SpinnerCoreProps"
   },
   "src": "uui-core/src/types/components/Spinner.ts"
  },
  "@epam/uui-core:StatefulProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "StatefulProps",
    "nameFull": "StatefulProps<T>"
   },
   "src": "uui-core/src/data/Stateful.tsx"
  },
  "@epam/uui-core:TMouseCoords": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TMouseCoords",
    "nameFull": "TMouseCoords"
   },
   "src": "uui-core/src/services/dnd/DndContext.tsx"
  },
  "@epam/uui-core:TableFiltersConfig": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TableFiltersConfig",
    "nameFull": "TableFiltersConfig<TFilter>"
   },
   "src": "uui-core/src/types/tables.ts"
  },
  "@epam/uui-core:TextInputCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TextInputCoreProps",
    "nameFull": "TextInputCoreProps"
   },
   "src": "uui-core/src/types/components/TextInput.ts"
  },
  "@epam/uui-core:TimePickerValue": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TimePickerValue",
    "nameFull": "TimePickerValue"
   },
   "src": "uui-core/src/types/objects.ts"
  },
  "@epam/uui-core:TooltipCoreProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TooltipCoreProps",
    "nameFull": "TooltipCoreProps"
   },
   "src": "uui-core/src/types/components/Tooltip.ts"
  },
  "@epam/uui-core:TreeNodeInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TreeNodeInfo",
    "nameFull": "TreeNodeInfo"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:TreeParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "TreeParams",
    "nameFull": "TreeParams<TItem, TId>"
   },
   "src": "uui-core/src/data/processing/views/tree/ITree.ts"
  },
  "@epam/uui-core:UseFormProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseFormProps",
    "nameFull": "UseFormProps<T>"
   },
   "src": "uui-core/src/data/forms/useForm.ts"
  },
  "@epam/uui-core:UseTableStateHookBaseParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseTableStateHookBaseParams",
    "nameFull": "UseTableStateHookBaseParams<TFilter, TViewState>"
   },
   "src": "uui-core/src/hooks/useTableState/useTableState.ts"
  },
  "@epam/uui-core:UseTableStateHookParams": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseTableStateHookParams",
    "nameFull": "UseTableStateHookParams<TFilter, TViewState>"
   },
   "src": "uui-core/src/hooks/useTableState/useTableState.ts"
  },
  "@epam/uui-core:UseUuiErrorOptions": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiErrorOptions",
    "nameFull": "UseUuiErrorOptions"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:UseUuiErrorProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiErrorProps",
    "nameFull": "UseUuiErrorProps"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:UseUuiServicesProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UseUuiServicesProps",
    "nameFull": "UseUuiServicesProps<TApi, TAppContext>"
   },
   "src": "uui-core/src/hooks/useUuiServices.ts"
  },
  "@epam/uui-core:UuiContexts": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiContexts",
    "nameFull": "UuiContexts"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:UuiErrorInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiErrorInfo",
    "nameFull": "UuiErrorInfo"
   },
   "src": "uui-core/src/types/contexts.ts"
  },
  "@epam/uui-core:UuiRecoveryErrorInfo": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiRecoveryErrorInfo",
    "nameFull": "UuiRecoveryErrorInfo"
   },
   "src": "uui-core/src/hooks/useUuiError.ts"
  },
  "@epam/uui-core:UuiServicesProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "UuiServicesProps",
    "nameFull": "UuiServicesProps<TApi>"
   },
   "src": "uui-core/src/hooks/useUuiServices.ts"
  },
  "@epam/uui-core:VPanelProps": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VPanelProps",
    "nameFull": "VPanelProps"
   },
   "src": "uui-core/src/types/props.ts"
  },
  "@epam/uui-core:ValidationMode": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "ValidationMode",
    "nameFull": "ValidationMode"
   },
   "src": "uui-core/src/data/validation/validate.ts"
  },
  "@epam/uui-core:VirtualListRange": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VirtualListRange",
    "nameFull": "VirtualListRange"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-core:VirtualListState": {
   "module": "@epam/uui-core",
   "typeName": {
    "name": "VirtualListState",
    "nameFull": "VirtualListState"
   },
   "src": "uui-core/src/types/dataSources.ts"
  },
  "@epam/uui-editor:EditorValue": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "EditorValue",
    "nameFull": "EditorValue"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:IImageElement": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "IImageElement",
    "nameFull": "IImageElement"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:LinkElement": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "LinkElement",
    "nameFull": "LinkElement"
   },
   "src": "uui-editor/src/plugins/linkPlugin/linkPlugin.tsx"
  },
  "@epam/uui-editor:PlaceholderPluginParams": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlaceholderPluginParams",
    "nameFull": "PlaceholderPluginParams"
   },
   "src": "uui-editor/src/plugins/placeholderPlugin/placeholderPlugin.tsx"
  },
  "@epam/uui-editor:PlateImgAlign": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlateImgAlign",
    "nameFull": "PlateImgAlign"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:PlateProps": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "PlateProps",
    "nameFull": "PlateProps"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:SlateImageSize": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateImageSize",
    "nameFull": "SlateImageSize"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:SlateImgAlign": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateImgAlign",
    "nameFull": "SlateImgAlign"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-editor:SlateProps": {
   "module": "@epam/uui-editor",
   "typeName": {
    "name": "SlateProps",
    "nameFull": "SlateProps"
   },
   "src": "uui-editor/src/types.ts"
  },
  "@epam/uui-timeline:BaseTimelineCanvasComponentProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "BaseTimelineCanvasComponentProps",
    "nameFull": "BaseTimelineCanvasComponentProps"
   },
   "src": "uui-timeline/src/BaseTimelineCanvasComponent.tsx"
  },
  "@epam/uui-timeline:Item": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "Item",
    "nameFull": "Item"
   },
   "src": "uui-timeline/src/renderBars.ts"
  },
  "@epam/uui-timeline:Stage": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "Stage",
    "nameFull": "Stage"
   },
   "src": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  "@epam/uui-timeline:TimelineControllerOptions": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineControllerOptions",
    "nameFull": "TimelineControllerOptions"
   },
   "src": "uui-timeline/src/TimelineController.ts"
  },
  "@epam/uui-timeline:TimelineEventsBarProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineEventsBarProps",
    "nameFull": "TimelineEventsBarProps"
   },
   "src": "uui-timeline/src/TimelineEventsBar.tsx"
  },
  "@epam/uui-timeline:TimelineGridProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineGridProps",
    "nameFull": "TimelineGridProps"
   },
   "src": "uui-timeline/src/TimelineGrid.tsx"
  },
  "@epam/uui-timeline:TimelineNavProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineNavProps",
    "nameFull": "TimelineNavProps"
   },
   "src": "uui-timeline/src/TimelineNav.tsx"
  },
  "@epam/uui-timeline:TimelineScaleProps": {
   "module": "@epam/uui-timeline",
   "typeName": {
    "name": "TimelineScaleProps",
    "nameFull": "TimelineScaleProps"
   },
   "src": "uui-timeline/src/TimelineScale.tsx"
  },
  "@epam/uui:AccordionMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "AccordionMods",
    "nameFull": "AccordionMods"
   },
   "src": "uui/components/layout/Accordion.tsx"
  },
  "@epam/uui:AccordionProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "AccordionProps",
    "nameFull": "AccordionProps"
   },
   "src": "uui/components/layout/Accordion.tsx"
  },
  "@epam/uui:AlertProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "AlertProps",
    "nameFull": "AlertProps"
   },
   "src": "uui/components/overlays/Alert.tsx"
  },
  "@epam/uui:BadgeColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeColor",
    "nameFull": "BadgeColor"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeFill": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeFill",
    "nameFull": "BadgeFill"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeMods",
    "nameFull": "BadgeMods"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeProps",
    "nameFull": "BadgeProps"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BadgeSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BadgeSize",
    "nameFull": "BadgeSize"
   },
   "src": "uui/components/widgets/Badge.tsx"
  },
  "@epam/uui:BaseRowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BaseRowMods",
    "nameFull": "BaseRowMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:BurgerButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerButtonMods",
    "nameFull": "BurgerButtonMods"
   },
   "src": "uui/components/navigation/MainMenu/Burger/BurgerButton.tsx"
  },
  "@epam/uui:BurgerGroupHeaderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerGroupHeaderProps",
    "nameFull": "BurgerGroupHeaderProps"
   },
   "src": "uui/components/navigation/MainMenu/Burger/BurgerGroupHeader.tsx"
  },
  "@epam/uui:BurgerMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerMods",
    "nameFull": "BurgerMods"
   },
   "src": "uui/components/navigation/MainMenu/Burger/Burger.tsx"
  },
  "@epam/uui:BurgerSearchProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "BurgerSearchProps",
    "nameFull": "BurgerSearchProps"
   },
   "src": "uui/components/navigation/MainMenu/Burger/BurgerSearch.tsx"
  },
  "@epam/uui:ButtonColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonColor",
    "nameFull": "ButtonColor"
   },
   "src": "uui/components/buttons/Button/Button.tsx"
  },
  "@epam/uui:ButtonMode": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonMode",
    "nameFull": "ButtonMode"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:ButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonMods",
    "nameFull": "ButtonMods"
   },
   "src": "uui/components/buttons/Button/Button.tsx"
  },
  "@epam/uui:ButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonProps",
    "nameFull": "ButtonProps"
   },
   "src": "uui/components/buttons/Button/Button.tsx"
  },
  "@epam/uui:ButtonSemanticColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ButtonSemanticColor",
    "nameFull": "ButtonSemanticColor"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:CheckboxMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "CheckboxMods",
    "nameFull": "CheckboxMods"
   },
   "src": "uui/components/inputs/Checkbox.tsx"
  },
  "@epam/uui:CheckboxProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "CheckboxProps",
    "nameFull": "CheckboxProps"
   },
   "src": "uui/components/inputs/Checkbox.tsx"
  },
  "@epam/uui:ColorMod": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ColorMod",
    "nameFull": "ColorMod"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:ColumnsConfigurationModalProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ColumnsConfigurationModalProps",
    "nameFull": "ColumnsConfigurationModalProps<TItem, TId, TFilter>"
   },
   "src": "uui/components/tables/columnsConfigurationModal/ColumnsConfigurationModal.tsx"
  },
  "@epam/uui:ConfirmationModalWindowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ConfirmationModalWindowProps",
    "nameFull": "ConfirmationModalWindowProps"
   },
   "src": "uui/components/overlays/ConfirmationModal.tsx"
  },
  "@epam/uui:ControlSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ControlSize",
    "nameFull": "ControlSize"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:DataPickerBodyProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataPickerBodyProps",
    "nameFull": "DataPickerBodyProps"
   },
   "src": "uui/components/pickers/DataPickerBody.tsx"
  },
  "@epam/uui:DataPickerRowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataPickerRowProps",
    "nameFull": "DataPickerRowProps<TItem, TId>"
   },
   "src": "uui/components/pickers/DataPickerRow.tsx"
  },
  "@epam/uui:DataRowsContainerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataRowsContainerProps",
    "nameFull": "DataRowsContainerProps<TItem, TId, List>"
   },
   "src": "uui/components/tables/DataRowsContainer/DataRowsContainer.tsx"
  },
  "@epam/uui:DataTableCellMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableCellMods",
    "nameFull": "DataTableCellMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableHeaderCellMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableHeaderCellMods",
    "nameFull": "DataTableHeaderCellMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableHeaderRowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableHeaderRowMods",
    "nameFull": "DataTableHeaderRowMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableMods",
    "nameFull": "DataTableMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DataTableProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableProps",
    "nameFull": "DataTableProps<TItem, TId, TFilter>"
   },
   "src": "uui/components/tables/DataTable.tsx"
  },
  "@epam/uui:DataTableRowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DataTableRowMods",
    "nameFull": "DataTableRowMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:DatePickerBodyProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DatePickerBodyProps",
    "nameFull": "DatePickerBodyProps"
   },
   "src": "uui/components/datePickers/DatePickerBody.tsx"
  },
  "@epam/uui:DatePickerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DatePickerProps",
    "nameFull": "DatePickerProps"
   },
   "src": "uui/components/datePickers/DatePicker.tsx"
  },
  "@epam/uui:DefaultNotificationProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DefaultNotificationProps",
    "nameFull": "DefaultNotificationProps"
   },
   "src": "uui/components/overlays/NotificationCard.tsx"
  },
  "@epam/uui:DropMarkerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropMarkerProps",
    "nameFull": "DropMarkerProps"
   },
   "src": "uui/components/dnd/DropMarker.tsx"
  },
  "@epam/uui:DropSpotProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropSpotProps",
    "nameFull": "DropSpotProps"
   },
   "src": "uui/components/fileUpload/DropSpot.tsx"
  },
  "@epam/uui:DropdownContainerMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropdownContainerMods",
    "nameFull": "DropdownContainerMods"
   },
   "src": "uui/components/overlays/DropdownContainer.tsx"
  },
  "@epam/uui:DropdownContainerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "DropdownContainerProps",
    "nameFull": "DropdownContainerProps"
   },
   "src": "uui/components/overlays/DropdownContainer.tsx"
  },
  "@epam/uui:EpamBadgeSemanticColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "EpamBadgeSemanticColor",
    "nameFull": "EpamBadgeSemanticColor"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:FileCardItem": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FileCardItem",
    "nameFull": "FileCardItem"
   },
   "src": "uui/components/fileUpload/FileCard.tsx"
  },
  "@epam/uui:FileCardProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FileCardProps",
    "nameFull": "FileCardProps"
   },
   "src": "uui/components/fileUpload/FileCard.tsx"
  },
  "@epam/uui:FillStyle": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FillStyle",
    "nameFull": "FillStyle"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:FiltersPanelProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FiltersPanelProps",
    "nameFull": "FiltersPanelProps<TFilter>"
   },
   "src": "uui/components/filters/FiltersPanel.tsx"
  },
  "@epam/uui:FlexCellMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FlexCellMods",
    "nameFull": "FlexCellMods"
   },
   "src": "uui/components/layout/FlexItems/FlexCell.tsx"
  },
  "@epam/uui:FlexRowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FlexRowProps",
    "nameFull": "FlexRowProps"
   },
   "src": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/uui:FontStyle": {
   "module": "@epam/uui",
   "typeName": {
    "name": "FontStyle",
    "nameFull": "FontStyle"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:GlobalMenuProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "GlobalMenuProps",
    "nameFull": "GlobalMenuProps"
   },
   "src": "uui/components/navigation/MainMenu/GlobalMenu.tsx"
  },
  "@epam/uui:HighlightRange": {
   "module": "@epam/uui",
   "typeName": {
    "name": "HighlightRange",
    "nameFull": "HighlightRange"
   },
   "src": "uui/components/pickers/highlight.tsx"
  },
  "@epam/uui:IDropdownMenuContainer": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IDropdownMenuContainer",
    "nameFull": "IDropdownMenuContainer"
   },
   "src": "uui/components/overlays/DropdownMenu.tsx"
  },
  "@epam/uui:IDropdownMenuItemProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IDropdownMenuItemProps",
    "nameFull": "IDropdownMenuItemProps"
   },
   "src": "uui/components/overlays/DropdownMenu.tsx"
  },
  "@epam/uui:IHasEditMode": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IHasEditMode",
    "nameFull": "IHasEditMode"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:ITextPlaceholderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ITextPlaceholderProps",
    "nameFull": "ITextPlaceholderProps"
   },
   "src": "uui/components/typography/TextPlaceholder.tsx"
  },
  "@epam/uui:IconButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconButtonMods",
    "nameFull": "IconButtonMods"
   },
   "src": "uui/components/buttons/IconButton.tsx"
  },
  "@epam/uui:IconButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconButtonProps",
    "nameFull": "IconButtonProps"
   },
   "src": "uui/components/buttons/IconButton.tsx"
  },
  "@epam/uui:IconColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IconColor",
    "nameFull": "IconColor"
   },
   "src": "uui/components/buttons/IconButton.tsx"
  },
  "@epam/uui:IndeterminateBarMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "IndeterminateBarMods",
    "nameFull": "IndeterminateBarMods"
   },
   "src": "uui/components/widgets/IndeterminateBar.tsx"
  },
  "@epam/uui:InputType": {
   "module": "@epam/uui",
   "typeName": {
    "name": "InputType",
    "nameFull": "InputType"
   },
   "src": "uui/components/datePickers/RangeDatePicker.tsx"
  },
  "@epam/uui:LabeledInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LabeledInputMods",
    "nameFull": "LabeledInputMods"
   },
   "src": "uui/components/layout/LabeledInput.tsx"
  },
  "@epam/uui:LinkButtonColorType": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonColorType",
    "nameFull": "LinkButtonColorType"
   },
   "src": "uui/components/buttons/LinkButton.tsx"
  },
  "@epam/uui:LinkButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonMods",
    "nameFull": "LinkButtonMods"
   },
   "src": "uui/components/buttons/LinkButton.tsx"
  },
  "@epam/uui:LinkButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "LinkButtonProps",
    "nameFull": "LinkButtonProps"
   },
   "src": "uui/components/buttons/LinkButton.tsx"
  },
  "@epam/uui:MainMenuAvatarProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuAvatarProps",
    "nameFull": "MainMenuAvatarProps"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuAvatar.tsx"
  },
  "@epam/uui:MainMenuButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuButtonMods",
    "nameFull": "MainMenuButtonMods"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuButton.tsx"
  },
  "@epam/uui:MainMenuIconProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuIconProps",
    "nameFull": "MainMenuIconProps"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuIcon.tsx"
  },
  "@epam/uui:MainMenuMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuMods",
    "nameFull": "MainMenuMods"
   },
   "src": "uui/components/navigation/MainMenu/MainMenu.tsx"
  },
  "@epam/uui:MainMenuSearchProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MainMenuSearchProps",
    "nameFull": "MainMenuSearchProps"
   },
   "src": "uui/components/navigation/MainMenu/MainMenuSearch.tsx"
  },
  "@epam/uui:ModalFooterProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalFooterProps",
    "nameFull": "ModalFooterProps"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:ModalHeaderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalHeaderProps",
    "nameFull": "ModalHeaderProps"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:ModalWindowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalWindowMods",
    "nameFull": "ModalWindowMods"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:ModalWindowProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ModalWindowProps",
    "nameFull": "ModalWindowProps"
   },
   "src": "uui/components/overlays/Modals.tsx"
  },
  "@epam/uui:MultiSwitchProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "MultiSwitchProps",
    "nameFull": "MultiSwitchProps<TValue>"
   },
   "src": "uui/components/inputs/MultiSwitch.tsx"
  },
  "@epam/uui:NotificationCardProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "NotificationCardProps",
    "nameFull": "NotificationCardProps"
   },
   "src": "uui/components/overlays/NotificationCard.tsx"
  },
  "@epam/uui:NumericInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "NumericInputMods",
    "nameFull": "NumericInputMods"
   },
   "src": "uui/components/inputs/NumericInput.tsx"
  },
  "@epam/uui:NumericInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "NumericInputProps",
    "nameFull": "NumericInputProps"
   },
   "src": "uui/components/inputs/NumericInput.tsx"
  },
  "@epam/uui:PanelMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PanelMods",
    "nameFull": "PanelMods"
   },
   "src": "uui/components/layout/FlexItems/Panel.tsx"
  },
  "@epam/uui:PickerInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerInputProps",
    "nameFull": "PickerInputProps"
   },
   "src": "uui/components/pickers/PickerInput.tsx"
  },
  "@epam/uui:PickerItemProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerItemProps",
    "nameFull": "PickerItemProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerItem.tsx"
  },
  "@epam/uui:PickerListItemProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerListItemProps",
    "nameFull": "PickerListItemProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerListItem.tsx"
  },
  "@epam/uui:PickerListProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerListProps",
    "nameFull": "PickerListProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerList.tsx"
  },
  "@epam/uui:PickerModalProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerModalProps",
    "nameFull": "PickerModalProps<TItem, TId>"
   },
   "src": "uui/components/pickers/PickerModal.tsx"
  },
  "@epam/uui:PickerTogglerMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PickerTogglerMods",
    "nameFull": "PickerTogglerMods"
   },
   "src": "uui/components/pickers/PickerToggler.tsx"
  },
  "@epam/uui:PresetsPanelProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "PresetsPanelProps",
    "nameFull": "PresetsPanelProps"
   },
   "src": "uui/components/filters/PresetPanel/PresetsPanel.tsx"
  },
  "@epam/uui:ProgressBarMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "ProgressBarMods",
    "nameFull": "ProgressBarMods"
   },
   "src": "uui/components/widgets/ProgressBar.tsx"
  },
  "@epam/uui:RadioInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RadioInputMods",
    "nameFull": "RadioInputMods"
   },
   "src": "uui/components/inputs/RadioInput.tsx"
  },
  "@epam/uui:RadioInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RadioInputProps",
    "nameFull": "RadioInputProps"
   },
   "src": "uui/components/inputs/RadioInput.tsx"
  },
  "@epam/uui:RangeDatePickerBodyProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerBodyProps",
    "nameFull": "RangeDatePickerBodyProps<T>"
   },
   "src": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  "@epam/uui:RangeDatePickerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerProps",
    "nameFull": "RangeDatePickerProps"
   },
   "src": "uui/components/datePickers/RangeDatePicker.tsx"
  },
  "@epam/uui:RangeDatePickerValue": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RangeDatePickerValue",
    "nameFull": "RangeDatePickerValue"
   },
   "src": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  "@epam/uui:RichTextViewMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RichTextViewMods",
    "nameFull": "RichTextViewMods"
   },
   "src": "uui/components/typography/RichTextView.tsx"
  },
  "@epam/uui:RowMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowMods",
    "nameFull": "RowMods"
   },
   "src": "uui/components/layout/FlexItems/FlexRow.tsx"
  },
  "@epam/uui:RowSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowSize",
    "nameFull": "RowSize"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:RowSizeMod": {
   "module": "@epam/uui",
   "typeName": {
    "name": "RowSizeMod",
    "nameFull": "RowSizeMod"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:SemanticColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SemanticColor",
    "nameFull": "SemanticColor"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:SizeMod": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SizeMod",
    "nameFull": "SizeMod"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:SpinnerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SpinnerProps",
    "nameFull": "SpinnerProps"
   },
   "src": "uui/components/widgets/Spinner.tsx"
  },
  "@epam/uui:SwitchMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "SwitchMods",
    "nameFull": "SwitchMods"
   },
   "src": "uui/components/inputs/Switch.tsx"
  },
  "@epam/uui:TabButtonMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TabButtonMods",
    "nameFull": "TabButtonMods"
   },
   "src": "uui/components/buttons/TabButton.tsx"
  },
  "@epam/uui:TabButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TabButtonProps",
    "nameFull": "TabButtonProps"
   },
   "src": "uui/components/buttons/TabButton.tsx"
  },
  "@epam/uui:TableSizesAndPositionMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TableSizesAndPositionMods",
    "nameFull": "TableSizesAndPositionMods"
   },
   "src": "uui/components/tables/types.ts"
  },
  "@epam/uui:TagMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagMods",
    "nameFull": "TagMods"
   },
   "src": "uui/components/widgets/Tag.tsx"
  },
  "@epam/uui:TagProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagProps",
    "nameFull": "TagProps"
   },
   "src": "uui/components/widgets/Tag.tsx"
  },
  "@epam/uui:TagSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TagSize",
    "nameFull": "TagSize"
   },
   "src": "uui/components/widgets/Tag.tsx"
  },
  "@epam/uui:TextAreaMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextAreaMods",
    "nameFull": "TextAreaMods"
   },
   "src": "uui/components/inputs/TextArea.tsx"
  },
  "@epam/uui:TextAreaProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextAreaProps",
    "nameFull": "TextAreaProps"
   },
   "src": "uui/components/inputs/TextArea.tsx"
  },
  "@epam/uui:TextInputMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextInputMods",
    "nameFull": "TextInputMods"
   },
   "src": "uui/components/inputs/TextInput.tsx"
  },
  "@epam/uui:TextInputProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextInputProps",
    "nameFull": "TextInputProps"
   },
   "src": "uui/components/inputs/TextInput.tsx"
  },
  "@epam/uui:TextMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextMods",
    "nameFull": "TextMods"
   },
   "src": "uui/components/typography/Text.tsx"
  },
  "@epam/uui:TextPlaceholderProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextPlaceholderProps",
    "nameFull": "TextPlaceholderProps"
   },
   "src": "uui/components/typography/TextPlaceholder.tsx"
  },
  "@epam/uui:TextProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextProps",
    "nameFull": "TextProps"
   },
   "src": "uui/components/typography/Text.tsx"
  },
  "@epam/uui:TextSettings": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextSettings",
    "nameFull": "TextSettings"
   },
   "src": "uui/helpers/textLayout.tsx"
  },
  "@epam/uui:TextSize": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TextSize",
    "nameFull": "TextSize"
   },
   "src": "uui/components/types.ts"
  },
  "@epam/uui:TimePickerProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TimePickerProps",
    "nameFull": "TimePickerProps"
   },
   "src": "uui/components/inputs/TimePicker.tsx"
  },
  "@epam/uui:TooltipMods": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TooltipMods",
    "nameFull": "TooltipMods"
   },
   "src": "uui/components/overlays/Tooltip.tsx"
  },
  "@epam/uui:TooltipProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "TooltipProps",
    "nameFull": "TooltipProps"
   },
   "src": "uui/components/overlays/Tooltip.tsx"
  },
  "@epam/uui:UuiMultiSwitchColor": {
   "module": "@epam/uui",
   "typeName": {
    "name": "UuiMultiSwitchColor",
    "nameFull": "UuiMultiSwitchColor"
   },
   "src": "uui/components/inputs/MultiSwitch.tsx"
  },
  "@epam/uui:VerticalTabButtonProps": {
   "module": "@epam/uui",
   "typeName": {
    "name": "VerticalTabButtonProps",
    "nameFull": "VerticalTabButtonProps"
   },
   "src": "uui/components/buttons/VerticalTabButton.tsx"
  },
  "@epam/uui:pickerPart": {
   "module": "@epam/uui",
   "typeName": {
    "name": "pickerPart",
    "nameFull": "pickerPart"
   },
   "src": "uui/components/datePickers/RangeDatePickerBody.tsx"
  },
  "node_modules/@types/react/index.d.ts:AllHTMLAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "AllHTMLAttributes",
    "nameFull": "AllHTMLAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:AriaAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "AriaAttributes",
    "nameFull": "AriaAttributes"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:Attributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "Attributes",
    "nameFull": "Attributes"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:ClassAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "ClassAttributes",
    "nameFull": "ClassAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:Component": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "Component",
    "nameFull": "Component<P, S, SS>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:ComponentLifecycle": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "ComponentLifecycle",
    "nameFull": "ComponentLifecycle<P, S, SS>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:DOMAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "DOMAttributes",
    "nameFull": "DOMAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:DeprecatedLifecycle": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "DeprecatedLifecycle",
    "nameFull": "DeprecatedLifecycle<P, S>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:HTMLAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "HTMLAttributes",
    "nameFull": "HTMLAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:InputHTMLAttributes": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "InputHTMLAttributes",
    "nameFull": "InputHTMLAttributes<T>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:NewLifecycle": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "NewLifecycle",
    "nameFull": "NewLifecycle<P, S, SS>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@types/react/index.d.ts:PropsWithChildren": {
   "module": "node_modules/@types/react/index.d.ts",
   "typeName": {
    "name": "PropsWithChildren",
    "nameFull": "PropsWithChildren<P>"
   },
   "src": "node_modules/@types/react/index.d.ts",
   "external": true
  },
  "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts:TElement": {
   "module": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts",
   "typeName": {
    "name": "TElement",
    "nameFull": "TElement"
   },
   "src": "node_modules/@udecode/slate/dist/interfaces/element/TElement.d.ts",
   "external": true
  },
  "node_modules/react-custom-scrollbars-2/index.d.ts:ScrollbarProps": {
   "module": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "typeName": {
    "name": "ScrollbarProps",
    "nameFull": "ScrollbarProps"
   },
   "src": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "external": true
  },
  "node_modules/react-custom-scrollbars-2/index.d.ts:Scrollbars": {
   "module": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "typeName": {
    "name": "Scrollbars",
    "nameFull": "Scrollbars"
   },
   "src": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "external": true
  },
  "node_modules/react-custom-scrollbars-2/index.d.ts:positionValues": {
   "module": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "typeName": {
    "name": "positionValues",
    "nameFull": "positionValues"
   },
   "src": "node_modules/react-custom-scrollbars-2/index.d.ts",
   "external": true
  }
 }
}