[
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "Lock context provides functionality to solve problems when you need to take control(lock) and perform some action when something is trying to get control (lock) for itself. "
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "In UUI, the Lock context is widely used with forms for cases when a user tries to leave the form with unsaved changes or triggers some action that depends on saved form results and is required to save the form before this action is invoked(in lock context terminology - tried to acquire the lock)."
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "Also, Lock Context subscribes to any router change and tries to release the current lock before this change.\n"
      }
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-2",
    "children": [
      {
        "text": "API"
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "acquire(tryRelease?: () => Promise<any>): Promise<Lock>",
                "uui-richTextEditor-code": true
              },
              {
                "text": " — try to take a lock, and set "
              },
              {
                "text": "tryRelease",
                "uui-richTextEditor-code": true
              },
              {
                "text": " callback, which will be invoked when something tries to take control over. If a lock already exists, it tries to release the current lock and then set a new one;\n"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "data": {},
                "type": "list-item-child",
                "children": [
                  {
                    "text": "getCurrentLock(): Lock",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " — return current lock;\n"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "data": {},
                "type": "list-item-child",
                "children": [
                  {
                    "text": "tryRelease()",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " — try to release the current lock, by calling the "
                  },
                  {
                    "text": "tryRelease",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " callback which was passed to the "
                  },
                  {
                    "text": "acquire",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " function;\n"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "release(lock: Lock)",
                "uui-richTextEditor-code": true
              },
              {
                "text": " — release lock without calling "
              },
              {
                "text": "tryRelease",
                "uui-richTextEditor-code": true
              },
              {
                "text": " callback;\n"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "withLock<T>(action: () => Promise<T>): Promise<T>",
                "uui-richTextEditor-code": true
              },
              {
                "text": " — try to acquire a lock for the time "
              },
              {
                "text": "while the action is being executed.",
                "outline": "0px",
                "": null,
                "uui-richTextEditor-span-mark": true
              }
            ]
          }
        ]
      }
    ]
  }
]