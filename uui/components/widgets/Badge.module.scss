@use '../../assets/styles/index' as *;
@use 'sass:math';

@mixin scalable-icon-size($size, $additionalClass: '') {
    $striped-size: strip-unit($size);

    #{$additionalClass}:global(.uui-icon) {
        svg {
            @if ($striped-size == 18) {
                height: 12px;
            } @else if ($striped-size == 24) {
                height: 18px;
            } @else if ($striped-size == 30) {
                height: 18px;
            } @else if ($striped-size == 36) {
                height: 18px;
            } @else if ($striped-size == 42) {
                height: 24px;
            } @else if ($striped-size == 48) {
                height: 24px;
            }
            width: inherit;
        }
    }
}

@mixin badge-layout($size, $borderWidth) {
    min-height: $size;
    min-width: $size;
    border-radius: math.div($size, 2);

    @if ($size == 18px) {
        @include partial-calc(3px, 3px, 6px, $borderWidth);
    } @else if ($size == 24px) {
        @include partial-calc(3px, 6px, 8px, $borderWidth);
    } @else if ($size == 30px) {
        @include partial-calc(6px, 6px, 8px, $borderWidth);
    } @else if ($size == 36px) {
        @include partial-calc(9px, 6px, 8px, $borderWidth);
    } @else if ($size == 42px) {
        @include partial-calc(12px, 6px, 10px, $borderWidth);
    } @else if ($size == 48px) {
        @include partial-calc(12px, 6px, 12px, $borderWidth);
    }

    @include scalable-icon-size($size);
}

@mixin partial-calc($controlPadding, $captionPadding, $dotSize, $borderWidth) {
    padding-left: $controlPadding - $borderWidth;
    padding-right: $controlPadding - $borderWidth;

    :global(.uui-icon):first-child {
        padding-left: 3px;
    }

    :global(.uui-caption) {
        padding-left: $captionPadding;
        padding-right: $captionPadding;
    }

    &:global(.uui-indicator) {
        :global(.uui-caption) {
            margin-left: $dotSize + $captionPadding;
        }

        &::before {
            width: $dotSize;
            height: $dotSize;
        }
    }
}

.root {
    --uui-badge-bg: var(--uui-color-50);
    --uui-badge-bg-hover: var(--uui-color-60);
    --uui-badge-border: var(--uui-color-50);
    --uui-badge-border-hover: var(--uui-color-60);
    --uui-badge-caption: var(--uui-color-contrast);
    --uui-badge-caption-hover: var(--uui-color-contrast);

    --uui-badge-font: var(--uui-font);
    --uui-badge-font-weight: 400;

    --uui-badge-min-height: var(--uui-size);
    --uui-badge-min-width: var(--uui-size);
    --uui-badge-dot-size: var(--uui-dot-size);
    --uui-badge-border-width: var(--uui-border-width);
    --uui-badge-horizontal-gap: var(--uui-horizontal-gap);
    --uui-badge-horizontal-padding: var(--uui-horizontal-padding);
    --uui-badge-caption-padding: calc((var(--uui-badge-min-height) - var(--uui-badge-line-height) - (var(--uui-badge-border-width) * 2)) / 2) var(--uui-horizontal-gap);
    --uui-badge-icon-height: var(--uui-icon-size);
    --uui-badge-line-height: var(--uui-line-height);
    --uui-badge-font-size: var(--uui-font-size);
    --uui-badge-additional-gap: 3px;
    //
    @include clickable-styles();
    background-color: var(--uui-badge-bg);
    color: var(--uui-badge-caption);
    fill: var(--uui-badge-caption); // ??? separate variable
    border-color: var(--uui-badge-border);
    justify-content: center;
    min-height: var(--uui-badge-min-height);
    min-width: var(--uui-badge-min-width);
    border-radius: calc(var(--uui-badge-min-height) / 2);
    padding-inline-start: calc(var(--uui-badge-horizontal-padding) - var(--uui-badge-border-width));
    padding-inline-end: calc(var(--uui-badge-horizontal-padding) - var(--uui-badge-border-width));

    :global(.uui-icon) {
        &:first-child {
            padding-inline-start: var(--uui-badge-additional-gap);
        }

        svg {
            height: var(--uui-badge-icon-height);
            width: inherit;
        }
    }

    &:global(.uui-indicator) {
        &::before {
            position: absolute;
            content: '';
            border-radius: 50%;
            background-color: var(--uui-badge-caption);
            inset-block-start: calc((var(--uui-badge-min-height) - var(--uui-badge-dot-size) - (var(--uui-badge-border-width) * 2)) / 2);
            inset-inline-start: calc(var(--uui-badge-horizontal-padding) + var(--uui-badge-horizontal-gap) - var(--uui-badge-border-width));
            width: var(--uui-badge-dot-size);
            height: var(--uui-badge-dot-size);
        }

        :global(.uui-caption) {
            margin-inline-start: calc(var(--uui-dot-size) + var(--uui-badge-horizontal-gap));
        }
    }

    :global(.uui-caption) {
        padding: var(--uui-badge-caption-padding);
        line-height: var(--uui-badge-line-height);
        font-size: var(--uui-badge-font-size);
        font-family: var(--uui-badge-font);
        font-weight: var(--uui-badge-font-weight);
    }

    &:global(.-clickable) {
        &:hover {
            background-color: var(--uui-badge-bg-hover);
            border-color: var(--uui-badge-border-hover);
            color: var(--uui-badge-caption-hover);
            fill: var(--uui-badge-caption-hover); // ??? separate variable
            cursor: pointer;
        }
    }

    &:global(.uui-button-box) {
        border-width: var(--uui-badge-border-width);
        border-style: solid;

    }

    &:global(.-clickable):focus-visible {
        @include focus-visible-effect(2px, null);  // todo
    }

    :global(.uui-count_indicator) {
        margin-inline-end: var(--uui-badge-additional-gap);
    }

    &:global(.uui-fill-solid) {
        --uui-badge-bg: var(--uui-color-50);
        --uui-badge-bg-hover: var(--uui-color-60);
        --uui-badge-border: var(--uui-color-50);
        --uui-badge-border-hover: var(--uui-color-60);
        --uui-badge-caption: var(--uui-color-contrast);
        --uui-badge-caption-hover: var(--uui-color-contrast);

        :global(.uui-count_indicator) {
            --uui-count_indicator-bg: color-mix(in srgb, var(--uui-badge-caption) 8%, transparent);
            --uui-count_indicator-border: color-mix(in srgb, var(--uui-badge-caption) 40%, transparent);
        }
    }

    &:global(.uui-fill-outline) {
        --uui-badge-bg: var(--uui-color-5);
        --uui-badge-bg-hover: var(--uui-color-10);
        --uui-badge-border: var(--uui-color-20);
        --uui-badge-border-hover: var(--uui-color-20);
        --uui-badge-caption: var(--uui-color-70);
        --uui-badge-caption-hover: var(--uui-color-70);

        :global(.uui-count_indicator) {
            --uui-count_indicator-bg: var(--uui-neutral-0);
            --uui-count_indicator-border: var(--uui-neutral-40);
            --uui-count_indicator-caption: var(--uui-neutral-70);
        }
    }
}
