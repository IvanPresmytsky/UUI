import React, { useState } from 'react';
import { FlexCell, PickerInput } from '@epam/uui';
import { DataQueryFilter, useLazyDataSource, useUuiContext } from '@epam/uui-core';
import { Location } from '@epam/uui-docs';

export default function LazyTreePicker() {
    const svc = useUuiContext();
    const [value, onValueChange] = useState<string[]>([
        'DZ',
        '2509031',
        '2508813',
        '2508737',
        '2507646',
        '2507480',
        '2507169',
        '2507155',
        '2506999',
        '2506795',
        '2506623',
        '2506519',
        '2506404',
        '2506043',
        '2505915',
        '2508297',
        '2508268',
        '2508287',
        '2508228',
        '2508102',
        '2508059',
        '2507972',
        '2507943',
        '2507926',
        '2507912',
        '2507901',
        '2507877',
        '2508174',
        '6698360',
        '2505854',
        '2505653',
        '2505651',
        '2505629',
        '2505572',
        '2505329',
        '2504486',
        '2504739',
        '2504703',
        '2504622',
        '2504616',
        '2504581',
        '2504385',
        '2504136',
        '2504110',
        '2504099',
        '2504072',
        '2503878',
        '2503874',
        '2503852',
        '2503847',
        '2503826',
        '2503769',
        '2503755',
        '2503701',
        '2503654',
        '2503620',
        '2503661',
        '2503033',
        '2502939',
        '2502239',
        '2503237',
        '2503229',
        '2503181',
        '2503156',
        '2503147',
        '2502962',
        '2502924',
        '2502686',
        '2474141',
        '2502958',
        '2503468',
        '2502034',
        '2505530',
        '2501873',
        '2501767',
        '2501680',
        '2501541',
        '2501508',
        '2501465',
        '2501404',
        '2501362',
        '2501323',
        '2498611',
        '2501289',
        '2501152',
        '2500904',
        '2500889',
        '2500737',
        '2500583',
        '2500401',
        '2500282',
        '2500017',
        '2492920',
        '2499193',
        '2499116',
        '2499104',
        '2499055',
        '2498954',
        '2498782',
        '2498775',
        '2498766',
        '2498752',
        '2498704',
        '2498667',
        '2498590',
        '2498543',
        '2498392',
        '2498183',
        '2498172',
        '2498000',
        '2497988',
        '2497849',
        '2497796',
        '2497714',
        '2497411',
        '2497323',
        '2497060',
        '2496573',
        '2496241',
        '2496232',
        '2496049',
        '2495662',
        '2494962',
        '2494610',
        '2494554',
        '2494548',
        '2494029',
        '2493918',
        '2493956',
        '2493222',
        '2493605',
        '2492991',
        '2492913',
        '2492345',
        '2491911',
        '2491913',
        '2491889',
        '2491578',
        '2491335',
        '2491323',
        '2491191',
        '2491134',
        '2491050',
        '2479203',
        '2491042',
        '2490297',
        '2490180',
        '2490183',
        '2490098',
        '2489987',
        '2488722',
        '2488716',
        '2488616',
        '2488500',
        '2488202',
        '2487882',
        '2487852',
        '2487805',
        '2487772',
        '2487620',
        '2487452',
        '2487134',
        '2486825',
        '2488835',
        '2486690',
        '2486505',
        '2486284',
        '2485926',
        '2485801',
        '2485618',
        '2485582',
        '2485572',
        '2485636',
        '2485633',
        '2484846',
        '2484620',
        '2483761',
        '2483757',
        '2483746',
        '2483668',
        '2483649',
        '2483000',
        '2482939',
        '2482908',
        '2482886',
        '2483968',
        '2483936',
        '2482447',
        '2482390',
        '2482572',
        '2482211',
        '2482159',
        '2482090',
        '2481639',
        '2481389',
        '2481207',
        '2481058',
        '2481246',
        '2481007',
        '2480368',
        '2479966',
        '2480198',
        '2479916',
        '2480618',
        '2479609',
        '2479536',
        '2479247',
        '2479215',
        '2479183',
        '2479161',
        '2481700',
        '2478831',
        '2478226',
        '2478216',
        '2477528',
        '2477462',
        '2477255',
        '2476917',
        '2476915',
        '2476897',
        '2476403',
        '2476396',
        '2476301',
        '2476028',
        '2475921',
        '2475860',
        '2475764',
        '2475744',
        '2475740',
        '2475752',
        '2475687',
        '2475612',
        '2475475',
        '2477461',
        '2474638',
        '2474583',
        '2474506',
        '2476412',
        '2508157',
        '2508309',
        '2508275',
        '2508225',
        '2508010',
        '2508184',
        '2508180',
        '2508152',
        '2508130',
        '2508119',
    ]);

    const dataSource = useLazyDataSource<Location, string, DataQueryFilter<Location>>(
        {
            api: (request, ctx) => {
                const { search } = request;
                const filter = search ? {} : { parentId: ctx?.parentId };
                return svc.api.demo.locations({ ...request, search, filter });
            },
            cascadeSelection: true,
            getId: (i) => i.id,
            getParentId: (i) => i.parentId,
            getChildCount: (l) => l.childCount,
        },
        [],
    );

    return (
        <FlexCell width={ 300 }>
            <PickerInput
                dataSource={ dataSource }
                value={ value }
                onValueChange={ onValueChange }
                entityName="location"
                selectionMode="multi"
                valueType="id"
                cascadeSelection="explicit"
                maxItems={ 300 }
            />
        </FlexCell>
    );
}
